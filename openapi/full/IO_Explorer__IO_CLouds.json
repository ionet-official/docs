{
  "openapi": "3.1.0",
  "info": {
    "title": "Core IO DB API",
    "description": "This is the Core IO DB API for all the apps",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/admin/common/cache/invalidate-cache": {
      "post": {
        "tags": [
          "io-admin"
        ],
        "summary": "Invalidate Cache",
        "operationId": "invalidate_cache_v1_admin_common_cache_invalidate_cache_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-retool/baremetal/request": {
      "post": {
        "tags": [
          "io-retool-baremetal"
        ],
        "summary": "Request Baremetal Creation",
        "operationId": "request_baremetal_creation_v1_io_retool_baremetal_request_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaremetalCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/baremetal/generate-payment-link": {
      "post": {
        "tags": [
          "io-retool-baremetal"
        ],
        "summary": "Generate Payment Link",
        "operationId": "generate_payment_link_v1_io_retool_baremetal_generate_payment_link_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaremetalGeneratePaymentLinkRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/managed-baremetal/request": {
      "post": {
        "tags": [
          "io-retool-managed-baremetal"
        ],
        "summary": "Request Baremetal Creation",
        "operationId": "request_baremetal_creation_v1_io_retool_managed_baremetal_request_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedBaremetalInitialRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/managed-baremetal/request/review": {
      "post": {
        "tags": [
          "io-retool-managed-baremetal"
        ],
        "summary": "Review Bm Creation Request",
        "operationId": "review_bm_creation_request_v1_io_retool_managed_baremetal_request_review_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedBaremetalReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/managed-baremetal/create": {
      "post": {
        "tags": [
          "io-retool-managed-baremetal"
        ],
        "summary": "Create Managed Baremetal",
        "operationId": "create_managed_baremetal_v1_io_retool_managed_baremetal_create_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedBaremetalCreationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/managed-baremetal/extend": {
      "post": {
        "tags": [
          "io-retool-managed-baremetal"
        ],
        "summary": "Extend Managed Baremetal",
        "operationId": "extend_managed_baremetal_v1_io_retool_managed_baremetal_extend_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedBaremetalExtensionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/managed-baremetal/terminate": {
      "post": {
        "tags": [
          "io-retool-managed-baremetal"
        ],
        "summary": "Terminate Managed Baremetal",
        "operationId": "terminate_managed_baremetal_v1_io_retool_managed_baremetal_terminate_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedBaremetalTerminationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/managed-baremetal/generate-payment-link": {
      "post": {
        "tags": [
          "io-retool-managed-baremetal"
        ],
        "summary": "Generate Payment Link",
        "operationId": "generate_payment_link_v1_io_retool_managed_baremetal_generate_payment_link_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaremetalGeneratePaymentLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/payouts/me": {
      "get": {
        "tags": [
          "io-payouts"
        ],
        "summary": "Get Current User",
        "operationId": "get_current_user_v1_io_retool_payouts_me_get",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/payouts/user_balance": {
      "get": {
        "tags": [
          "io-payouts"
        ],
        "summary": "Get User Balance",
        "description": "Get user balance",
        "operationId": "get_user_balance_v1_io_retool_payouts_user_balance_get",
        "parameters": [
          {
            "name": "user_email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Email"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/payouts/user_deposits": {
      "get": {
        "tags": [
          "io-payouts"
        ],
        "summary": "Get User Deposits",
        "description": "Get user deposits",
        "operationId": "get_user_deposits_v1_io_retool_payouts_user_deposits_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Page Size"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/payouts/user_withdrawals": {
      "get": {
        "tags": [
          "io-payouts"
        ],
        "summary": "Get User Withdrawals",
        "description": "Get user withdrawals",
        "operationId": "get_user_withdrawals_v1_io_retool_payouts_user_withdrawals_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Page Size"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/payouts/user_withdrawal": {
      "post": {
        "tags": [
          "io-payouts"
        ],
        "summary": "Create User Withdrawal",
        "description": "Create user withdrawal",
        "operationId": "create_user_withdrawal_v1_io_retool_payouts_user_withdrawal_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_retool__schemas__request__payouts__WithdrawRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/inventory/inventory-data-internal": {
      "get": {
        "tags": [
          "io-retool-inventory"
        ],
        "summary": "Get Inventory Data Detailed",
        "description": "Detailed inventory endpoint that will include provider information\nif the user has proper permissions",
        "operationId": "get_inventory_data_detailed_v1_io_retool_inventory_inventory_data_internal_get",
        "parameters": [
          {
            "name": "connectivity_tiers",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated connectivity tiers or JSON array",
              "title": "Connectivity Tiers"
            },
            "description": "Comma-separated connectivity tiers or JSON array"
          },
          {
            "name": "device_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated device types or JSON array",
              "title": "Device Types"
            },
            "description": "Comma-separated device types or JSON array"
          },
          {
            "name": "hardware_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated hardware names or JSON array",
              "title": "Hardware Names"
            },
            "description": "Comma-separated hardware names or JSON array"
          },
          {
            "name": "regions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated regions or JSON array",
              "title": "Regions"
            },
            "description": "Comma-separated regions or JSON array"
          },
          {
            "name": "hardware_quantity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated hardware quantities or JSON array",
              "title": "Hardware Quantity"
            },
            "description": "Comma-separated hardware quantities or JSON array"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Field to order results by",
              "title": "Order By"
            },
            "description": "Field to order results by"
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort direction (asc or desc)",
              "default": "asc",
              "title": "Sort Dir"
            },
            "description": "Sort direction (asc or desc)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of results per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of results per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalInventoryDashboardResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/io-credits/request": {
      "post": {
        "tags": [
          "io-credits"
        ],
        "summary": "Request Credits",
        "operationId": "request_credits_v1_io_retool_io_credits_request_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/io-credits/approve": {
      "post": {
        "tags": [
          "io-credits"
        ],
        "summary": "Approve Credits",
        "operationId": "approve_credits_v1_io_retool_io_credits_approve_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditApproveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/io-credits/reject": {
      "post": {
        "tags": [
          "io-credits"
        ],
        "summary": "Reject Credits Request",
        "operationId": "reject_credits_request_v1_io_retool_io_credits_reject_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditRejectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/io-credits/cancel": {
      "post": {
        "tags": [
          "io-credits"
        ],
        "summary": "Cancel Credits Request",
        "operationId": "cancel_credits_request_v1_io_retool_io_credits_cancel_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCancelRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/io-credits/generate-payment-link": {
      "post": {
        "tags": [
          "io-credits"
        ],
        "summary": "Generate Payments Link",
        "operationId": "generate_payments_link_v1_io_retool_io_credits_generate_payment_link_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditsGeneratePaymentLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/io-credits/withdrawal/approve": {
      "post": {
        "tags": [
          "io-credits"
        ],
        "summary": "Approve Credits Withdraw Request",
        "operationId": "approve_credits_withdraw_request_v1_io_retool_io_credits_withdrawal_approve_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditsWithdrawApproveRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/io-credits/withdrawal/reject": {
      "post": {
        "tags": [
          "io-credits"
        ],
        "summary": "Reject Credits Withdraw Request",
        "operationId": "reject_credits_withdraw_request_v1_io_retool_io_credits_withdrawal_reject_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditsWithdrawRejectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/br-exemptions/exemption-requests": {
      "post": {
        "tags": [
          "br-exemptions"
        ],
        "summary": "Create Exemption Request",
        "description": "Create one or more high-level exemption requests",
        "operationId": "create_exemption_request_v1_io_retool_br_exemptions_exemption_requests_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HighLevelExemptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/br-exemptions/exemption-requests/{request_id}": {
      "patch": {
        "tags": [
          "br-exemptions"
        ],
        "summary": "Update Exemption Request",
        "description": "Update high-level exemption request parameters",
        "operationId": "update_exemption_request_v1_io_retool_br_exemptions_exemption_requests__request_id__patch",
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Request Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHighLevelExemptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/br-exemptions/device-exemptions": {
      "post": {
        "tags": [
          "br-exemptions"
        ],
        "summary": "Create Device Exemption",
        "description": "Create a device-level exemption",
        "operationId": "create_device_exemption_v1_io_retool_br_exemptions_device_exemptions_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LowLevelDeviceExemptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/br-exemptions/device-exemptions/{exemption_id}": {
      "patch": {
        "tags": [
          "br-exemptions"
        ],
        "summary": "Update Device Exemption",
        "description": "Update device-level exemption parameters",
        "operationId": "update_device_exemption_v1_io_retool_br_exemptions_device_exemptions__exemption_id__patch",
        "parameters": [
          {
            "name": "exemption_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Exemption Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLowLevelDeviceExemptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/br-exemptions/user-exemptions": {
      "post": {
        "tags": [
          "br-exemptions"
        ],
        "summary": "Create User Exemption",
        "description": "Create a user-level exemption",
        "operationId": "create_user_exemption_v1_io_retool_br_exemptions_user_exemptions_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LowLevelUserExemptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/br-exemptions/user-exemptions/{exemption_id}": {
      "patch": {
        "tags": [
          "br-exemptions"
        ],
        "summary": "Update User Exemption",
        "description": "Update user-level exemption parameters",
        "operationId": "update_user_exemption_v1_io_retool_br_exemptions_user_exemptions__exemption_id__patch",
        "parameters": [
          {
            "name": "exemption_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Exemption Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLowLevelUserExemptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/terminate": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Terminate",
        "operationId": "terminate_v1_io_retool_devices_terminate_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceTerminationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/whitelist": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Whitelist",
        "operationId": "whitelist_v1_io_retool_devices_whitelist_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceWhitelistingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/unwhitelist": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Unwhitelist",
        "operationId": "unwhitelist_v1_io_retool_devices_unwhitelist_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUnwhitelistingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/update-is-fake": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Update Is Fake",
        "operationId": "update_is_fake_v1_io_retool_devices_update_is_fake_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUpdatingIsFakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/set-is-fake-none": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Set Is Fake None",
        "operationId": "set_is_fake_none_v1_io_retool_devices_set_is_fake_none_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceSettingIsFakeNoneRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/update-is-working": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Update Is Working",
        "operationId": "update_is_working_v1_io_retool_devices_update_is_working_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUpdatingIsWorkingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/update-is-new": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Update Is New",
        "operationId": "update_is_new_v1_io_retool_devices_update_is_new_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUpdatingIsNewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/update-last-challenge-successful": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Update Last Challenge Successful",
        "operationId": "update_last_challenge_successful_v1_io_retool_devices_update_last_challenge_successful_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUpdatingLastChallengeSuccessfulRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/set-unsupported": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Set Unsupported",
        "operationId": "set_unsupported_v1_io_retool_devices_set_unsupported_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceSettingUnsupportedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/unblock": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Unblock",
        "operationId": "unblock_v1_io_retool_devices_unblock_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceUnblockingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/generate-device-id": {
      "post": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Generate Device Id",
        "operationId": "generate_device_id_v1_io_retool_devices_generate_device_id_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceGeneratingIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-retool/devices/{device_id}/get-qdevice-data": {
      "get": {
        "tags": [
          "io-retool-devices"
        ],
        "summary": "Get Qdevice Data",
        "operationId": "get_qdevice_data_v1_io_retool_devices__device_id__get_qdevice_data_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Bearer Token",
              "title": "Authorization"
            },
            "description": "Bearer Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io/sla": {
      "get": {
        "tags": [
          "io-public"
        ],
        "summary": "Get Latest Sla",
        "operationId": "get_latest_sla_v1_io_sla_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/shield/attach_data_points": {
      "post": {
        "tags": [
          "shield-device-fingerprint"
        ],
        "summary": "Attach Data Points",
        "operationId": "attach_data_points_v1_shield_attach_data_points_post",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-intercom/generate-intercom-user-hash": {
      "get": {
        "tags": [
          "io-intercom"
        ],
        "summary": "Generate Intercom User Hash",
        "operationId": "generate_intercom_user_hash_v1_io_intercom_generate_intercom_user_hash_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/internal/insert_inference": {
      "post": {
        "tags": [
          "internal"
        ],
        "summary": "Insert Inference Details Route",
        "description": "Insert a new inference record",
        "operationId": "insert_inference_details_route_v1_internal_insert_inference_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InsertInferenceDetailsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "201": {
            "description": "Inference Inserted"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notifications/{notification_id}/seen": {
      "patch": {
        "tags": [
          "internal"
        ],
        "summary": "Seen Notification",
        "description": "Set seen timestamp on the notification",
        "operationId": "seen_notification_v1_notifications__notification_id__seen_patch",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Notification Id"
            }
          },
          {
            "name": "show_again",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Show Again"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeenNotificationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notifications/seen": {
      "patch": {
        "tags": [
          "internal"
        ],
        "summary": "Seen Notifications",
        "description": "Set seen timestamp on all user's notifications",
        "operationId": "seen_notifications_v1_notifications_seen_patch",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeenNotificationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notifications/": {
      "get": {
        "tags": [
          "internal"
        ],
        "summary": "Get Notifications",
        "description": "Get unseen notifications",
        "operationId": "get_notifications_v1_notifications__get",
        "parameters": [
          {
            "name": "seen",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Seen status of notification",
              "title": "Seen"
            },
            "description": "Seen status of notification"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/PriorityStatus"
                }
              ],
              "description": "Priority of notification",
              "title": "Priority"
            },
            "description": "Priority of notification"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 5,
              "description": "Number of records per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Number of records per page"
          },
          {
            "name": "obj_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Type of the object",
              "title": "Obj Type"
            },
            "description": "Type of the object"
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/get_user_claim": {
      "get": {
        "tags": [
          "internal"
        ],
        "summary": "Get User Claim",
        "description": "The endpoint is supposed to be called from auh0 flow, to identify user correctly\nand create new one if it doesn't exist",
        "operationId": "get_user_claim_v1_get_user_claim_get",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          },
          {
            "name": "authentication",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Authentication"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api-keys/": {
      "post": {
        "tags": [
          "internal"
        ],
        "summary": "Create Api Key",
        "operationId": "create_api_key_v1_api_keys__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiKeyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "internal"
        ],
        "summary": "List Api Keys",
        "operationId": "list_api_keys_v1_api_keys__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListKeysResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api-keys/{key_id}": {
      "patch": {
        "tags": [
          "internal"
        ],
        "summary": "Update Api Key",
        "operationId": "update_api_key_v1_api_keys__key_id__patch",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Key Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApiKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "internal"
        ],
        "summary": "Delete Key",
        "operationId": "delete_key_v1_api_keys__key_id__delete",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Key Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "internal"
        ],
        "summary": "Get Key",
        "operationId": "get_key_v1_api_keys__key_id__get",
        "parameters": [
          {
            "name": "key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Key Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleApiKey"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/internal/v1/api-keys/validate/": {
      "post": {
        "tags": [
          "internal"
        ],
        "summary": "Validate Key",
        "operationId": "validate_key_internal_v1_api_keys_validate__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateApiKey"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleApiKey"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Me",
        "operationId": "me_v1_me_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/auditing": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get Account Changes",
        "operationId": "get_account_changes_v1_me_auditing_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/me/verify-blockchain-wallet": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Verify Wallet",
        "description": "Verify if the user is authorized to connect to the blockchain wallet.",
        "operationId": "verify_wallet_v1_me_verify_blockchain_wallet_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyWalletAddressRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/token": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Authenticate",
        "description": "authenticate user using the email and password, return access Token",
        "operationId": "authenticate_v1_auth_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailPasswordLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/user-uuid": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Users Uuid",
        "operationId": "get_users_uuid_v1_auth_user_uuid_get",
        "parameters": [
          {
            "name": "io_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Io Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserUUIDResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-token/supply/circulating": {
      "get": {
        "tags": [
          "io-token-supply"
        ],
        "summary": "Get Token Circulating Supply Coingecko",
        "description": "An endpoint to return io token circulating supply according to coingecko requirements:\nhttps://support.coingecko.com/hc/en-us/articles/29203078866457-Total-Supply-Circulating-Supply-API-Endpoint-Requirement",
        "operationId": "get_token_circulating_supply_coingecko_v1_io_token_supply_circulating_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoingeckoSupplyResponseSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-token/supply/circulating/plaintext": {
      "get": {
        "tags": [
          "io-token-supply"
        ],
        "summary": "Get Token Circulating Supply Coingecko Plaintext",
        "description": "An endpoint to return io token circulating supply in plaintext. Requested by coingecko's engineering team",
        "operationId": "get_token_circulating_supply_coingecko_plaintext_v1_io_token_supply_circulating_plaintext_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-token/supply/total": {
      "get": {
        "tags": [
          "io-token-supply"
        ],
        "summary": "Get Token Total Supply Coingecko",
        "description": "An endpoint to return io token total supply according to coingecko requirements:\nhttps://support.coingecko.com/hc/en-us/articles/29203078866457-Total-Supply-Circulating-Supply-API-Endpoint-Requirement",
        "operationId": "get_token_total_supply_coingecko_v1_io_token_supply_total_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoingeckoSupplyResponseSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-token/supply/total/plaintext": {
      "get": {
        "tags": [
          "io-token-supply"
        ],
        "summary": "Get Token Total Supply Coingecko Plaintext",
        "description": "An endpoint to return io token total supply in plaintext. Requested by coingecko's engineering team",
        "operationId": "get_token_total_supply_coingecko_plaintext_v1_io_token_supply_total_plaintext_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/clusters/computed_hours": {
      "get": {
        "tags": [
          "io-explorer-clusters"
        ],
        "summary": "Get Computed Hours",
        "operationId": "get_computed_hours_v1_io_explorer_clusters_computed_hours_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 10,
              "description": "Number of records per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClusterByStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/clusters/status": {
      "get": {
        "tags": [
          "io-explorer-clusters"
        ],
        "summary": "Get Clusters By Status",
        "description": "get all clusters by status",
        "operationId": "get_clusters_by_status_v1_io_explorer_clusters_status_get",
        "parameters": [
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "cluster",
              "title": "Resource Type"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "*",
              "title": "Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 10,
              "description": "Number of records per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClusterByStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/clusters/counts": {
      "get": {
        "tags": [
          "io-explorer-clusters"
        ],
        "summary": "Get Cluster Count Per Status",
        "description": "get cluster count per status",
        "operationId": "get_cluster_count_per_status_v1_io_explorer_clusters_counts_get",
        "parameters": [
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "cluster",
              "title": "Resource Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClusterCountPerStatus"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/clusters/search": {
      "get": {
        "tags": [
          "io-explorer-clusters"
        ],
        "summary": "Search",
        "description": "search cluster by cluster_id",
        "operationId": "search_v1_io_explorer_clusters_search_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterSearchResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/clusters/{cluster_id}/details": {
      "get": {
        "tags": [
          "io-explorer-clusters"
        ],
        "summary": "Get Cluster Details",
        "description": "get cluster details by cluster_id",
        "operationId": "get_cluster_details_v1_io_explorer_clusters__cluster_id__details_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/clusters/{cluster_id}/workers": {
      "get": {
        "tags": [
          "io-explorer-clusters"
        ],
        "summary": "Get Cluster Workers",
        "description": "get a cluster workers",
        "operationId": "get_cluster_workers_v1_io_explorer_clusters__cluster_id__workers_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Optional device ID parameter",
              "title": "Device Id"
            },
            "description": "Optional device ID parameter"
          },
          {
            "name": "is_failed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Query parameter to get failed/working workers",
              "default": false,
              "title": "Is Failed"
            },
            "description": "Query parameter to get failed/working workers"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Worker status filter",
              "title": "Status"
            },
            "description": "Worker status filter"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Page number",
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 10
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of records per page",
              "title": "Page Size"
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_explorer__schemas__response__cluster__GetClusterWorkersResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/blocks/summary": {
      "get": {
        "tags": [
          "io-blocks"
        ],
        "summary": "Get Summary",
        "description": "Get summary data for the dashboard",
        "operationId": "get_summary_v1_io_blocks_blocks_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Summary"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-blocks/blocks/counts": {
      "get": {
        "tags": [
          "io-blocks"
        ],
        "summary": "Get Io Block Counts",
        "operationId": "get_io_block_counts_v1_io_blocks_blocks_counts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockCounts"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-blocks/blocks/{block_id}/counts": {
      "get": {
        "tags": [
          "io-blocks"
        ],
        "summary": "Get Blocks Block Id Counts",
        "operationId": "get_blocks_block_id_counts_v1_io_blocks_blocks__block_id__counts_get",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockDeviceCounts"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/blocks/{block_id}": {
      "get": {
        "tags": [
          "io-blocks"
        ],
        "summary": "Get Blocks Block Id",
        "description": "Get specific block details by block ID",
        "operationId": "get_blocks_block_id_v1_io_blocks_blocks__block_id__get",
        "parameters": [
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/blocks/{block_id}/workers/{device_id}": {
      "get": {
        "tags": [
          "io-blocks"
        ],
        "summary": "Get Blocks Block Id Workers Device Id",
        "description": "This endpoint returns granular information about a device in the context of a specific block reward. It offers details about Block Reward challenges, the outcome, and details about the device.",
        "operationId": "get_blocks_block_id_workers_device_id_v1_io_blocks_blocks__block_id__workers__device_id__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IOWorkerBlockRecord"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/blocks/{block_id}/workers/{status}/{page}": {
      "get": {
        "tags": [
          "io-blocks"
        ],
        "summary": "Get Blocks Block Id Workers Status Page",
        "description": "Get worker records for a specific block, with optional filters for device_type and connectivity_tier",
        "operationId": "get_blocks_block_id_workers_status_page_v1_io_blocks_blocks__block_id__workers__status___page__get",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io_blocks__schemas__request__block_request__StatusEnum"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "title": "Page"
            }
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceType"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ConnectivityTierEnum"
                }
              ],
              "title": "Connectivity Tier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceBlockMaskedRecords"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/blocks/{status}/{page}": {
      "get": {
        "tags": [
          "io-blocks"
        ],
        "summary": "Get Blocks Status Page",
        "description": "Get block data",
        "operationId": "get_blocks_status_page_v1_io_blocks_blocks__status___page__get",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BlockStatusEnum"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocksResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/blockRewards/{status}/{page}": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Device Blocks Status",
        "operationId": "route_device_blocks_status_v1_io_blocks_devices__device_id__blockRewards__status___page__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io_blocks__schemas__request__block_request__StatusEnum"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceBlockRecords"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/counts": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Device Status Counts",
        "operationId": "route_device_status_counts_v1_io_blocks_devices__device_id__counts_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCounts"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/pow/{status}/{page}": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Device Pow Status",
        "operationId": "route_device_pow_status_v1_io_blocks_devices__device_id__pow__status___page__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PowStatusEnum"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceProofOfWorkDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/pow/{block_id}": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Device Pow Block Id",
        "operationId": "route_device_pow_block_id_v1_io_blocks_devices__device_id__pow__block_id__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pow"
                  },
                  "title": "Response Route Device Pow Block Id V1 Io Blocks Devices  Device Id  Pow  Block Id  Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/potl/{status}/{page}": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Device Potl Status",
        "operationId": "route_device_potl_status_v1_io_blocks_devices__device_id__potl__status___page__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/io_blocks__schemas__request__block_request__StatusEnum"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceProofOfTimeLockDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/potl/{block_id}": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Device Potl Block Id",
        "operationId": "route_device_potl_block_id_v1_io_blocks_devices__device_id__potl__block_id__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Block Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceProofOfTimeLock"
                  },
                  "title": "Response Route Device Potl Block Id V1 Io Blocks Devices  Device Id  Potl  Block Id  Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/block-rewards-summary/{from_date}/{to_date}": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Block Rewards Summary",
        "operationId": "route_block_rewards_summary_v1_io_blocks_devices__device_id__block_rewards_summary__from_date___to_date__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "from_date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "From Date"
            }
          },
          {
            "name": "to_date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To Date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceBlockRewardsSummary"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/devices/{device_id}/ready": {
      "get": {
        "tags": [
          "io-blocks-devices"
        ],
        "summary": "Route Nomination Rules",
        "operationId": "route_nomination_rules_v1_io_blocks_devices__device_id__ready_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceReadiness"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/network": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Network Aggregated Data",
        "operationId": "get_network_aggregated_data_v1_io_explorer_network_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkAggregatedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/market-snapshot": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Market Snapshot",
        "operationId": "get_market_snapshot_v1_io_explorer_network_market_snapshot_get",
        "parameters": [
          {
            "name": "hardware_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Hardware Type"
            }
          },
          {
            "name": "brand_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Brand Name"
            }
          },
          {
            "name": "supplier_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Supplier Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMarketResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/network/info": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Network Info By Supplier Or All",
        "operationId": "get_network_info_by_supplier_or_all_v1_io_explorer_network_info_get",
        "parameters": [
          {
            "name": "supplier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Supplier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/network/inventory-data": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Inventory Data",
        "description": "External/public endpoint that excludes provider information",
        "operationId": "get_inventory_data_v1_io_explorer_network_inventory_data_get",
        "parameters": [
          {
            "name": "connectivity_tiers",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated connectivity tiers or JSON array",
              "title": "Connectivity Tiers"
            },
            "description": "Comma-separated connectivity tiers or JSON array"
          },
          {
            "name": "device_types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated device types or JSON array",
              "title": "Device Types"
            },
            "description": "Comma-separated device types or JSON array"
          },
          {
            "name": "hardware_names",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated hardware names or JSON array",
              "title": "Hardware Names"
            },
            "description": "Comma-separated hardware names or JSON array"
          },
          {
            "name": "regions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated regions or JSON array",
              "title": "Regions"
            },
            "description": "Comma-separated regions or JSON array"
          },
          {
            "name": "hardware_quantity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated hardware quantities or JSON array",
              "title": "Hardware Quantity"
            },
            "description": "Comma-separated hardware quantities or JSON array"
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Field to order results by",
              "title": "Order By"
            },
            "description": "Field to order results by"
          },
          {
            "name": "sort_dir",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort direction (asc or desc)",
              "default": "asc",
              "title": "Sort Dir"
            },
            "description": "Sort direction (asc or desc)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Number of results per page",
              "default": 10,
              "title": "Limit"
            },
            "description": "Number of results per page"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryDashboardResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/network/inventory-aggregated": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Inventory Aggregated",
        "operationId": "get_inventory_aggregated_v1_io_explorer_network_inventory_aggregated_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregatedInventoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/brands": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Brands",
        "operationId": "get_brands_v1_io_explorer_network_brands_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBrandsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/info/clusters": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Network Clusters Info",
        "description": "get network clusters info",
        "operationId": "get_network_clusters_info_v1_io_explorer_network_info_clusters_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkClustersInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/info/devices": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Network Devices Info",
        "operationId": "get_network_devices_info_v1_io_explorer_network_info_devices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkDevicesInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        },
        "deprecated": true
      }
    },
    "/v1/io-explorer/network/info/inferneces": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Network Inferences Info",
        "description": "get network inferences info",
        "operationId": "get_network_inferences_info_v1_io_explorer_network_info_inferneces_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkInferenceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/info/cluster/monthly-earnings": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Network Earnings By Month Plot",
        "operationId": "get_network_earnings_by_month_plot_v1_io_explorer_network_info_cluster_monthly_earnings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMonthlyNetworkEarningsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/info/cluster/total-earnings-summary": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Network Total Earnings By Day Plot",
        "operationId": "get_network_total_earnings_by_day_plot_v1_io_explorer_network_info_cluster_total_earnings_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkYearlyEarningsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/info/cluster/today-hourly-earnings": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Todays Network Earnings By Hour Plot",
        "operationId": "get_todays_network_earnings_by_hour_plot_v1_io_explorer_network_info_cluster_today_hourly_earnings_get",
        "parameters": [
          {
            "name": "response_model",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Response Model"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/network/hardware_pricing": {
      "get": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Get Hardware Info",
        "operationId": "get_hardware_info_v1_io_explorer_network_hardware_pricing_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response 200 Get Hardware Info V1 Io Explorer Network Hardware Pricing Get"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/network/hardware-request": {
      "post": {
        "tags": [
          "io-explorer-network"
        ],
        "summary": "Create a new hardware request",
        "description": "Store hardware configuration request with user ID and timestamp",
        "operationId": "create_hardware_request_v1_io_explorer_network_hardware_request_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HardwareRequestCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HardwareRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Device By Location",
        "description": "get devices based on the location",
        "operationId": "get_device_by_location_v1_io_explorer_devices_get",
        "parameters": [
          {
            "name": "country_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Country Code"
            }
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "City"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceByLocationIdResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/hardware": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Hardware By Location",
        "operationId": "get_hardware_by_location_v1_io_explorer_devices_hardware_get",
        "parameters": [
          {
            "name": "country_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Country Code"
            }
          },
          {
            "name": "region_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Region Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHardwareByLocationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/countries": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Hardware Quantity By Countries",
        "description": "get devices based on the location",
        "operationId": "get_hardware_quantity_by_countries_v1_io_explorer_devices_countries_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDevicesCountByCountriesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/devices/search": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Search Devices",
        "description": "search device by device_id or device_name",
        "operationId": "search_devices_v1_io_explorer_devices_search_get",
        "parameters": [
          {
            "name": "device_identifier",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Device Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/status": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Devices By Status",
        "description": "get all devices by status",
        "operationId": "get_devices_by_status_v1_io_explorer_devices_status_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActiveDeviceStatus"
                }
              ],
              "default": "up",
              "title": "Status"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "device_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Name"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DeviceBrand"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Brand"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DeviceType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "connectivity",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DeviceSpeed"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 0,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 10,
              "description": "Number of records per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceByStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/counts": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Devices Count",
        "operationId": "get_devices_count_v1_io_explorer_devices_counts_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/devices/{device_id}/details": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Device Details",
        "description": "The Device Details endpoint returns insights about a specific device. This allows you to quickly view the device's status, aspects of connectivity, jobs, rewards earned, hire rate and more.",
        "operationId": "get_device_details_v1_io_explorer_devices__device_id__details_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_explorer__schemas__response__device__GetDeviceDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/{device_id}/summary": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Device Summary",
        "description": "The Device Summary endpoint provides detailed information about a specific device. This allows you to view the device's status, aspects of connectivity, compute hours served, earnings and more.",
        "operationId": "get_device_summary_v1_io_explorer_devices__device_id__summary_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/{device_id}/pow-summary": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Device Pow Summary",
        "description": "This PoW Summary endpoint returns information about the Proof of Work challenges for a device.",
        "operationId": "get_device_pow_summary_v1_io_explorer_devices__device_id__pow_summary_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicePOWSummary"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/{device_id}/speedtest-results/{page}": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Device Speedtest Results",
        "description": "gets device speedtest results",
        "operationId": "get_device_speedtest_results_v1_io_explorer_devices__device_id__speedtest_results__page__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "minimum": 1,
              "description": "Page number",
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status (completed/failed)",
              "title": "Status"
            },
            "description": "Filter by status (completed/failed)"
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 4,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by connectivity tier (0-4)",
              "title": "Connectivity Tier"
            },
            "description": "Filter by connectivity tier (0-4)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSpeedtestResults"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/{device_id}/connected-services": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Device Connected Services",
        "description": "get device connected services",
        "operationId": "get_device_connected_services_v1_io_explorer_devices__device_id__connected_services_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceConnectedServicesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/devices/{device_id}/earnings": {
      "get": {
        "tags": [
          "io-explorer-devices"
        ],
        "summary": "Get Device Historical Earnings",
        "description": "get device historical earnings",
        "operationId": "get_device_historical_earnings_v1_io_explorer_devices__device_id__earnings_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 10
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of records per page",
              "title": "Page Size"
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceHistoricalEarningsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/staking/metrics": {
      "get": {
        "tags": [
          "io-explorer-staking"
        ],
        "summary": "Get Staking Public Metrics",
        "operationId": "get_staking_public_metrics_v1_io_explorer_staking_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPublicStakingMetricsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/staking/daily-full-stake-device-count": {
      "get": {
        "tags": [
          "io-explorer-staking"
        ],
        "summary": "Get Daily Full Stake Device Count",
        "operationId": "get_daily_full_stake_device_count_v1_io_explorer_staking_daily_full_stake_device_count_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDailyFullStakeDeviceCountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/staking/safety-module/metrics": {
      "get": {
        "tags": [
          "io-explorer-staking"
        ],
        "summary": "Get Staking Safety Module Public Metrics",
        "operationId": "get_staking_safety_module_public_metrics_v1_io_explorer_staking_safety_module_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStakingSafetyModuleMetricsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/staking/co-staking/metrics": {
      "get": {
        "tags": [
          "io-explorer-staking"
        ],
        "summary": "Get Staking Co Staking Public Metrics",
        "operationId": "get_staking_co_staking_public_metrics_v1_io_explorer_staking_co_staking_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStakingCoStakingMetricsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/transactions/status": {
      "get": {
        "tags": [
          "io-explorer-transactions"
        ],
        "summary": "Get Transactions List",
        "operationId": "get_transactions_list_v1_io_explorer_transactions_status_get",
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Hash"
            }
          },
          {
            "name": "cluster_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "tx_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Tx Type"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsListResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/transactions/activity": {
      "get": {
        "tags": [
          "io-explorer-transactions"
        ],
        "summary": "Get Daily Transactions Activity",
        "operationId": "get_daily_transactions_activity_v1_io_explorer_transactions_activity_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionsActivityResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-explorer/inferences/search": {
      "get": {
        "tags": [
          "io-explorer-inferences"
        ],
        "summary": "Search Inferences",
        "description": "search inference by inference_id or app_name",
        "operationId": "search_inferences_v1_io_explorer_inferences_search_get",
        "parameters": [
          {
            "name": "inference_identifier",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Inference Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/inferences/status": {
      "get": {
        "tags": [
          "io-explorer-inferences"
        ],
        "summary": "Get Inferences By Status",
        "description": "get all inferences by status",
        "operationId": "get_inferences_by_status_v1_io_explorer_inferences_status_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "computed",
              "title": "Status"
            }
          },
          {
            "name": "after_inference_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "After Inference Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInferenceByStatusResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-explorer/inferences/{inference_id}/details": {
      "get": {
        "tags": [
          "io-explorer-inferences"
        ],
        "summary": "Get Inferences Details",
        "description": "get the details of a device",
        "operationId": "get_inferences_details_v1_io_explorer_inferences__inference_id__details_get",
        "parameters": [
          {
            "name": "inference_identifier",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Inference Identifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInferenceDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/users/block-rewards-summary/{from_date}/{to_date}": {
      "get": {
        "tags": [
          "io-blocks-users"
        ],
        "summary": "Route Block Rewards Summary",
        "description": "The Block Rewards Details endpoint returns insights about the block rewards associated with a specific device. This includes, but isn't limited to, successful rewards, failed and missed rewards, and an earnings summary.",
        "operationId": "route_block_rewards_summary_v1_io_blocks_users_block_rewards_summary__from_date___to_date__get",
        "parameters": [
          {
            "name": "from_date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "From Date"
            }
          },
          {
            "name": "to_date",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To Date"
            }
          },
          {
            "name": "co_staking",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Co Staking"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBlockRewardsSummary"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-blocks/users/{user_id}/latest-block-rewards": {
      "get": {
        "tags": [
          "io-blocks-users"
        ],
        "summary": "Route Block User Latest Rewards",
        "operationId": "route_block_user_latest_rewards_v1_io_blocks_users__user_id__latest_block_rewards_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBlockLatestRewards"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/headnodes": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Headnodes Devices",
        "description": "get idle headnodes devices with their prices",
        "operationId": "get_headnodes_devices_v1_io_worker_devices_headnodes_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HeadnodeDevicesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/details": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Details",
        "description": "get device details including reliability score, reqc success rate, and pow success rate",
        "operationId": "get_device_details_v1_io_worker_devices__device_id__details_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_worker__schemas__response__device__GetDeviceDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/earnings-summary-data": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Earnings Summary",
        "description": "get device earnings summary",
        "operationId": "get_device_earnings_summary_v1_io_worker_devices__device_id__earnings_summary_data_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "From Date"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To Date"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "usdc",
              "title": "Currency"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceEarningsSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/connected-services": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Connected Services",
        "description": "get device connected services",
        "operationId": "get_device_connected_services_v1_io_worker_devices__device_id__connected_services_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceConnectedServicesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/notifications": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Notifications",
        "description": "This endpoint returns all device notifications or specific types of notifications.",
        "operationId": "get_device_notifications_v1_io_worker_devices__device_id__notifications_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceNotificationStatus"
                }
              ],
              "description": "Type of notification",
              "title": "Type"
            },
            "description": "Type of notification"
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceNotificationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Delete Device Notifications",
        "description": "Delete device notifications",
        "operationId": "delete_device_notifications_v1_io_worker_devices__device_id__notifications_delete",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "notification_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notification Id"
            }
          },
          {
            "name": "delete_all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Delete All"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDeviceNotificationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/earnings": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Historical Earnings",
        "description": "Get device historical earnings",
        "operationId": "get_device_historical_earnings_v1_io_worker_devices__device_id__earnings_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "job_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Job Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceHistoricalEarningsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/pow-summary": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Pow Summary",
        "operationId": "get_device_pow_summary_v1_io_worker_devices__device_id__pow_summary_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevicePOWSummary"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/speedtest-results/{page}": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Speedtest Results",
        "description": "gets device speedtest results",
        "operationId": "get_device_speedtest_results_v1_io_worker_devices__device_id__speedtest_results__page__get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "page",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 10,
              "exclusiveMinimum": 1,
              "description": "Page number",
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by status (completed/failed)",
              "title": "Status"
            },
            "description": "Filter by status (completed/failed)"
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 4,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by connectivity tier (0-4)",
              "title": "Connectivity Tier"
            },
            "description": "Filter by connectivity tier (0-4)"
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceSpeedtestResults"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/summary": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get Device Summary",
        "operationId": "get_device_summary_v1_io_worker_devices__device_id__summary_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDeviceSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/update-name": {
      "put": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Update Device Name",
        "operationId": "update_device_name_v1_io_worker_devices__device_id__update_name_put",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDeviceName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDeviceNameResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/terminate": {
      "put": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Terminate Device",
        "operationId": "terminate_device_v1_io_worker_devices__device_id__terminate_put",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminateDeviceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/pause": {
      "put": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Pause Device",
        "operationId": "pause_device_v1_io_worker_devices__device_id__pause_put",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminateDeviceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/{device_id}/resume": {
      "put": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Resume Device",
        "operationId": "resume_device_v1_io_worker_devices__device_id__resume_put",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerminateDeviceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/devices/create_device_id": {
      "get": {
        "tags": [
          "io-worker-devices"
        ],
        "summary": "Get New Device Id",
        "operationId": "get_new_device_id_v1_io_worker_devices_create_device_id_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDeviceIDForUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/transactions": {
      "get": {
        "tags": [
          "io-worker-txns"
        ],
        "summary": "Get Transactions Handler",
        "operationId": "get_transactions_handler_v1_transactions_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date of the transactions",
              "title": "Start Date"
            },
            "description": "Start date of the transactions"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date of the transactions",
              "title": "End Date"
            },
            "description": "End date of the transactions"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TransactionType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of transaction",
              "title": "Type"
            },
            "description": "Type of transaction"
          },
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PlatformType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Platform of transaction",
              "title": "Platform"
            },
            "description": "Platform of transaction"
          },
          {
            "name": "job_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Job ID associated with the transactions",
              "title": "Job Id"
            },
            "description": "Job ID associated with the transactions"
          },
          {
            "name": "device_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Device name associated with the transactions",
              "title": "Device Name"
            },
            "description": "Device name associated with the transactions"
          },
          {
            "name": "sorted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort order of the transactions ('asc' or 'desc')",
              "default": "desc",
              "title": "Sorted"
            },
            "description": "Sort order of the transactions ('asc' or 'desc')"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsResponseModel"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/transactions/{transaction_id}": {
      "get": {
        "tags": [
          "io-worker-txns"
        ],
        "summary": "Get Transaction By Id Handler",
        "operationId": "get_transaction_by_id_handler_v1_transactions__transaction_id__get",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Transaction Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsByIdResponseModel"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Devices",
        "description": "get user devices",
        "operationId": "get_user_devices_v1_io_worker_users__user_id__devices_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "device_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Device Name"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceBrand"
                }
              ],
              "title": "Brand"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceType"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "connectivity",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceSpeed"
                }
              ],
              "title": "Connectivity"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDevicesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices/counts": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Devices Count",
        "operationId": "get_user_devices_count_v1_io_worker_users__user_id__devices_counts_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/earnings-rewards": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Earnings Rewards",
        "description": "get user earnings rewards",
        "operationId": "get_user_earnings_rewards_v1_io_worker_users__user_id__earnings_rewards_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "cluster_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Optional cluster ID parameter",
              "title": "Cluster Id"
            },
            "description": "Optional cluster ID parameter"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserEarningsRewardsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/earnings-summary-data": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get Earnings Summary Agg",
        "operationId": "get_earnings_summary_agg_v1_io_worker_users__user_id__earnings_summary_data_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "From Date"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "To Date"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "usdc",
              "title": "Currency"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEarningsSummaryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/notifications": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Notification",
        "operationId": "get_user_notification_v1_io_worker_users_notifications_get",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceNotificationStatus"
                }
              ],
              "description": "Type of notification",
              "default": "all",
              "title": "Type"
            },
            "description": "Type of notification"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "page",
              "title": "Page"
            },
            "description": "page"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "page size",
              "title": "Page Size"
            },
            "description": "page size"
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserNotification"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/notifications": {
      "delete": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Delete Users Notifications",
        "description": "Delete user notifications",
        "operationId": "delete_users_notifications_v1_io_worker_users__user_id__notifications_delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "notification_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Notification Id"
            }
          },
          {
            "name": "delete_all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Delete All"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserNotificationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/solana_address": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Solana Address",
        "operationId": "get_user_solana_address_v1_io_worker_users__user_id__solana_address_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSolanaAddressResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/wallet_addresses": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Wallets Address",
        "operationId": "get_user_wallets_address_v1_io_worker_users__user_id__wallet_addresses_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWalletsAddressesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/update_solana_address": {
      "put": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Update User Solana Address",
        "operationId": "update_user_solana_address_v1_io_worker_users__user_id__update_solana_address_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "solana_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Solana Address"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserSolanaAddressResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/update_aptos_address": {
      "put": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Update User Aptos Address",
        "operationId": "update_user_aptos_address_v1_io_worker_users__user_id__update_aptos_address_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "aptos_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aptos Address"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserAptosAddressResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices_staking": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Devices Staking",
        "operationId": "get_user_devices_staking_v1_io_worker_users__user_id__devices_staking_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DeviceStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "hardware_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hardware Name"
            }
          },
          {
            "name": "device_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 200
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Name"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 200
                },
                {
                  "type": "null"
                }
              ],
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DeviceFilterColumns"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort Column"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FilterDirection"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort Direction"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices_staking/co_staked": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Co Staked Devices",
        "operationId": "get_user_co_staked_devices_v1_io_worker_users__user_id__devices_staking_co_staked_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DeviceStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "hardware_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hardware Name"
            }
          },
          {
            "name": "co_stake_status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Co Stake Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 200
                },
                {
                  "type": "null"
                }
              ],
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices_staking/third_party_co_staking": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get User Third Party Co Staked Devices",
        "operationId": "get_user_third_party_co_staked_devices_v1_io_worker_users__user_id__devices_staking_third_party_co_staking_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hardware Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 200
                },
                {
                  "type": "null"
                }
              ],
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices_staking/{device_id}/stake": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Stake Device",
        "operationId": "stake_device_v1_io_worker_users__user_id__devices_staking__device_id__stake_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/devices_staking/{device_id}/unstake": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Unstake Device ",
        "operationId": "unstake_device__v1_io_worker_users_devices_staking__device_id__unstake_post",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnstakeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/devices_staking/{device_id}/withdraw": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Withdraw Co Stake Device ",
        "operationId": "withdraw_co_stake_device__v1_io_worker_users_devices_staking__device_id__withdraw_post",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_worker__schemas__request__users_staking__WithdrawRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices_staking/aggregate": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Aggregate Stake Info",
        "operationId": "aggregate_stake_info_v1_io_worker_users__user_id__devices_staking_aggregate_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "user_account",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Account"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/staking/{device_id}/offer": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Create Staking Offer",
        "operationId": "create_staking_offer_v1_io_worker_users_staking__device_id__offer_post",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Offer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/staking/{device_id}/offer/co_stake": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Staking Offer Action",
        "operationId": "staking_offer_action_v1_io_worker_users__user_id__staking__device_id__offer_co_stake_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/staking/{device_id}/offer/cancel": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Cancel Co Staking Offer ",
        "operationId": "cancel_co_staking_offer__v1_io_worker_users_staking__device_id__offer_cancel_post",
        "parameters": [
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfferCancel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices_staking/{device_id}/withdraw": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Withdraw",
        "operationId": "withdraw_v1_io_worker_users__user_id__devices_staking__device_id__withdraw_post",
        "deprecated": true,
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/users/{user_id}/devices_staking/{device_id}/unstake": {
      "post": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Unstake Device",
        "operationId": "unstake_device_v1_io_worker_users__user_id__devices_staking__device_id__unstake_post",
        "deprecated": true,
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "device_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Device Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-worker/co-staking/offers": {
      "get": {
        "tags": [
          "io-worker-users"
        ],
        "summary": "Get Offers",
        "operationId": "get_offers_v1_io_worker_co_staking_offers_get",
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Device Id"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Hardware Id"
            }
          },
          {
            "name": "brand_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Brand Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "default": 100,
              "title": "Page Size"
            }
          },
          {
            "name": "number_of_gpu",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Number Of Gpu"
            }
          },
          {
            "name": "block_reward_percent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Block Reward Percent"
            }
          },
          {
            "name": "least_co_stake_amount",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Least Co Stake Amount"
            }
          },
          {
            "name": "highest_co_stake_amount",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Highest Co Stake Amount"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "minimum_reliability_score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Minimum Reliability Score"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/resources": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Get User Resources",
        "description": "get user resources. status can be running or completed or unpaid\nand resource can be any valid resource type",
        "operationId": "get_user_resources_v1_io_cloud_users__user_id__resources_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ResourceStatus"
                }
              ],
              "description": "Optional: Status of cluster",
              "default": "all",
              "title": "Status"
            },
            "description": "Optional: Status of cluster"
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ResourceType"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional: Type of cluster",
              "title": "Resource Type"
            },
            "description": "Optional: Type of cluster"
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Archived"
            }
          },
          {
            "name": "resource_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "",
              "title": "Resource Name"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "is_mega_cluster",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Mega Cluster"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserClustersResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/resources/counts": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Get User Resources Count Per Status",
        "operationId": "get_user_resources_count_per_status_v1_io_cloud_users__user_id__resources_counts_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ResourceType"
            }
          },
          {
            "name": "is_mega_cluster",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Is Mega Cluster"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Archived"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserClustersResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/balance": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Get User Balance",
        "operationId": "get_user_balance_v1_io_cloud_users__user_id__balance_get",
        "deprecated": true,
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/balances": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Get User Balances",
        "operationId": "get_user_balances_v1_io_cloud_users__user_id__balances_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalancesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/has-supplier": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Check User Supplier",
        "operationId": "check_user_supplier_v1_io_cloud_users__user_id__has_supplier_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/cluster-summary": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Get User Cluster Summary",
        "operationId": "get_user_cluster_summary_v1_io_cloud_users__user_id__cluster_summary_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/points": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Get User Points",
        "operationId": "get_user_points_v1_io_cloud_users__user_id__points_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPointsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/notifications": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Get User Notification",
        "operationId": "get_user_notification_v1_io_cloud_users__user_id__notifications_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "notification_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceNotificationStatus"
                }
              ],
              "description": "Type of notification",
              "default": "all",
              "title": "Notification Type"
            },
            "description": "Type of notification"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "page",
              "default": 1,
              "title": "Page"
            },
            "description": "page"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "page size",
              "default": 10,
              "title": "Page Size"
            },
            "description": "page size"
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserNotification"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/users/{user_id}/top-up-credits": {
      "get": {
        "tags": [
          "io-cloud-users"
        ],
        "summary": "Top Up User Credits",
        "operationId": "top_up_user_credits_v1_io_cloud_users__user_id__top_up_credits_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "exclusiveMinimum": 0.0,
              "title": "Amount"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "usdc",
              "title": "Currency"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}/details": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Cluster Details",
        "description": "get cluster details",
        "operationId": "get_cluster_details_v1_io_cloud_clusters__cluster_id__details_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}/workers": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Cluster Workers",
        "description": "get cluster workers",
        "operationId": "get_cluster_workers_v1_io_cloud_clusters__cluster_id__workers_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "Optional device ID parameter",
              "title": "Device Id"
            },
            "description": "Optional device ID parameter"
          },
          {
            "name": "is_failed",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Query parameter to get failed/working workers",
              "default": false,
              "title": "Is Failed"
            },
            "description": "Query parameter to get failed/working workers"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Worker status filter",
              "title": "Status"
            },
            "description": "Worker status filter"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Page number",
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 100,
                  "minimum": 10
                },
                {
                  "type": "null"
                }
              ],
              "description": "Number of records per page",
              "title": "Page Size"
            },
            "description": "Number of records per page"
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__cluster__GetClusterWorkersResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/deploy_cluster": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Deploy Cluster",
        "description": "Deploy a resource \"cluster\"",
        "operationId": "deploy_cluster_v1_io_cloud_clusters_deploy_cluster_post",
        "parameters": [
          {
            "name": "transaction",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Transaction"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployClusterService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployClusterServiceResponse"
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/deploy_mega_cluster": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Deploy Mega Cluster",
        "description": "Deploy a resource \"cluster\"",
        "operationId": "deploy_mega_cluster_v1_io_cloud_clusters_deploy_mega_cluster_post",
        "parameters": [
          {
            "name": "transaction",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Transaction"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployMegaClusterService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployClusterServiceResponse"
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/request_baremetal": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Record Baremetal Requests",
        "operationId": "record_baremetal_requests_v1_io_cloud_clusters_request_baremetal_post",
        "parameters": [
          {
            "name": "transaction",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Transaction"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BareMetalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/destroy-cluster": {
      "put": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Destroy Cluster",
        "description": "destroy cluster",
        "operationId": "destroy_cluster_v1_io_cloud_clusters_destroy_cluster_put",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestroyClusterResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/deploy-k8s-cluster": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Deploy K8S Cluster",
        "description": "deploy k8s cluster",
        "operationId": "deploy_k8s_cluster_v1_io_cloud_clusters_deploy_k8s_cluster_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployK8sClusterService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployClusterServiceResponse"
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}/update-name": {
      "put": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Update Cluster Name",
        "operationId": "update_cluster_name_v1_io_cloud_clusters__cluster_id__update_name_put",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClusterName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateClusterNameResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}/status": {
      "put": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Update Cluster Status",
        "operationId": "update_cluster_status_v1_io_cloud_clusters__cluster_id__status_put",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClusterStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveClusterResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}/balance": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Cluster Balance For Payments",
        "operationId": "get_cluster_balance_for_payments_v1_io_cloud_clusters__cluster_id__balance_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}/extend": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Extend Cluster",
        "operationId": "extend_cluster_v1_io_cloud_clusters__cluster_id__extend_post",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "transaction",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Transaction"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__cluster__ExtendCluster"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterExtensionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}/get-extension-price": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Extension Price",
        "operationId": "get_extension_price_v1_io_cloud_clusters__cluster_id__get_extension_price_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "duration_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Duration Qty"
            }
          },
          {
            "name": "duration_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DurationType"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterExtensionPriceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/{cluster_id}": {
      "put": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Archive Cluster",
        "operationId": "archive_cluster_v1_io_cloud_clusters__cluster_id__put",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchiveClusterResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/generate-payment-link": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Generate New Payment Link",
        "description": "generate payment link\ncluster_id: str, amount: float, cluster_type: str, currency: str, tags: list = [], meta: dict = {}",
        "operationId": "generate_new_payment_link_v1_io_cloud_clusters_generate_payment_link_post",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "exclusiveMinimum": 0.0,
              "title": "Amount"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "usdc",
              "title": "Currency"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/PaymentLinkRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Request Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/stripe/generate-payment-link": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Stripe Generate New Payment Link",
        "operationId": "stripe_generate_new_payment_link_v1_io_cloud_clusters_stripe_generate_payment_link_post",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "exclusiveMinimum": 0.0,
              "title": "Amount"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/PaymentLinkRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Request Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentLinkResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/create-cluster-data": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Create Cluster Data",
        "description": "get create cluster data",
        "operationId": "get_create_cluster_data_v1_io_cloud_clusters_create_cluster_data_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "location_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceType"
                }
              ],
              "title": "Device Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreateClusterDataResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/create-k8s-cluster-data": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Create K8S Cluster Data",
        "description": "get k8s cluster data",
        "operationId": "get_create_k8s_cluster_data_v1_io_cloud_clusters_create_k8s_cluster_data_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreateK8SClusterDataResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-cloud/clusters/create-mega-cluster-data": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Create Mega Cluster Data",
        "description": "get create mega cluster data",
        "operationId": "get_create_mega_cluster_data_v1_io_cloud_clusters_create_mega_cluster_data_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DeviceType"
                }
              ],
              "title": "Device Type"
            }
          },
          {
            "name": "duration_qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Duration Qty"
            }
          },
          {
            "name": "duration_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DurationType"
                }
              ],
              "title": "Duration Type"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ClusterCurrency"
                }
              ],
              "title": "Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreateMegaClusterDataResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/hardware-qty-price": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Selected Devices Agg",
        "description": "get selected devices agg",
        "operationId": "get_selected_devices_agg_v1_io_cloud_clusters_hardware_qty_price_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "security_soc2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Security Soc2"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Location Id"
            }
          },
          {
            "name": "duration_type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/DurationType"
                }
              ],
              "title": "Duration Type"
            }
          },
          {
            "name": "duration_qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Duration Qty"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Hardware Qty"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ClusterCurrency"
                }
              ],
              "title": "Currency"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHardwarePriceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/locations": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Locations",
        "description": "Get list of locations with their hardware_count available for hiring",
        "operationId": "get_locations_v1_io_cloud_clusters_locations_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          },
          {
            "name": "security_soc2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Security Soc2"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "location_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "hardware_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Hardware Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/hardware-supply": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Get Hardware Supply",
        "description": "Get list of hardware counts - total & available for hiring",
        "operationId": "get_hardware_supply_v1_io_cloud_clusters_hardware_supply_get",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Supplier Id"
            }
          },
          {
            "name": "security_soc2",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Security Soc2"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "service_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Service Id"
            }
          },
          {
            "name": "location_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHardwareSupplyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/check_cluster_name_availability ": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Check Cluster Name Availability",
        "description": "Deploy a resource \"cluster\"",
        "operationId": "check_cluster_name_availability_v1_io_cloud_clusters_check_cluster_name_availability__post",
        "parameters": [
          {
            "name": "cluster_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Cluster Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckClusterNameAvailabilityResponse"
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/check-headnode-availability": {
      "get": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Check Headnodes Availability",
        "description": "check headnodes availability",
        "operationId": "check_headnodes_availability_v1_io_cloud_clusters_check_headnode_availability_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHeadnodesAvailabilityResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v1/io-cloud/bare-metal/cluster": {
      "get": {
        "tags": [
          "io-cloud-baremetal"
        ],
        "summary": "Get Baremetal Clusters",
        "operationId": "get_baremetal_clusters_v1_io_cloud_bare_metal_cluster_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaremetalResourceStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/bare-metal/cluster/{cluster_id}": {
      "get": {
        "tags": [
          "io-cloud-baremetal"
        ],
        "summary": "Get Baremetal Cluster",
        "operationId": "get_baremetal_cluster_v1_io_cloud_bare_metal_cluster__cluster_id__get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/bare-metal/cluster/{cluster_id}/workers": {
      "get": {
        "tags": [
          "io-cloud-baremetal"
        ],
        "summary": "Get Baremetal Cluster Workers",
        "operationId": "get_baremetal_cluster_workers_v1_io_cloud_bare_metal_cluster__cluster_id__workers_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/bare-metal/locations": {
      "get": {
        "tags": [
          "io-cloud-baremetal"
        ],
        "summary": "Get Baremetal Locations",
        "operationId": "get_baremetal_locations_v1_io_cloud_bare_metal_locations_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/bare-metal/hardware": {
      "get": {
        "tags": [
          "io-cloud-baremetal"
        ],
        "summary": "Get Baremetal Hardware",
        "operationId": "get_baremetal_hardware_v1_io_cloud_bare_metal_hardware_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/bare-metal/price": {
      "get": {
        "tags": [
          "io-cloud-baremetal"
        ],
        "summary": "Get Baremetal Price",
        "operationId": "get_baremetal_price_v1_io_cloud_bare_metal_price_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "hardware_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Ids"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClusterCurrency"
            }
          },
          {
            "name": "duration_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DurationType"
            }
          },
          {
            "name": "duration_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "title": "Duration Qty"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 4,
              "title": "Hardware Qty"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/bare-metal/deploy": {
      "post": {
        "tags": [
          "io-cloud-baremetal"
        ],
        "summary": "Deploy Baremetal",
        "operationId": "deploy_baremetal_v1_io_cloud_bare_metal_deploy_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaremetalDeployClusterService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/kubernetes/cluster": {
      "get": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Get Kubernetes Clusters",
        "operationId": "get_kubernetes_clusters_v1_io_cloud_kubernetes_cluster_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/KubernetesResourceStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/kubernetes/cluster/{cluster_id}": {
      "get": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Get Kubernetes Cluster",
        "operationId": "get_kubernetes_cluster_v1_io_cloud_kubernetes_cluster__cluster_id__get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Destroy Cluster",
        "operationId": "destroy_cluster_v1_io_cloud_kubernetes_cluster__cluster_id__delete",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/kubernetes/cluster/{cluster_id}/workers": {
      "get": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Get Kubernetes Cluster Workers",
        "operationId": "get_kubernetes_cluster_workers_v1_io_cloud_kubernetes_cluster__cluster_id__workers_get",
        "parameters": [
          {
            "name": "cluster_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cluster Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/kubernetes/locations": {
      "get": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Get Kubernetes Locations",
        "operationId": "get_kubernetes_locations_v1_io_cloud_kubernetes_locations_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/kubernetes/hardware": {
      "get": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Get Kubernetes Hardware",
        "operationId": "get_kubernetes_hardware_v1_io_cloud_kubernetes_hardware_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/kubernetes/price": {
      "get": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Get Kubernetes Price",
        "operationId": "get_kubernetes_price_v1_io_cloud_kubernetes_price_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClusterCurrency"
            }
          },
          {
            "name": "duration_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DurationType"
            }
          },
          {
            "name": "duration_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Duration Qty"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 4,
              "title": "Hardware Qty"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/kubernetes/deploy": {
      "post": {
        "tags": [
          "io-cloud-kubernetes"
        ],
        "summary": "Deploy Kubernetes",
        "operationId": "deploy_kubernetes_v1_io_cloud_kubernetes_deploy_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KubernetesDeployClusterService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/deployment": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Container Deployments",
        "operationId": "get_container_deployments_v1_io_cloud_caas_deployment_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CaaSResourceStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/deployment/{deployment_id}": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Deployment Details",
        "operationId": "get_deployment_details_v1_io_cloud_caas_deployment__deployment_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Destroy Container",
        "operationId": "destroy_container_v1_io_cloud_caas_deployment__deployment_id__delete",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Update Container Definition",
        "operationId": "update_container_definition_v1_io_cloud_caas_deployment__deployment_id__patch",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__caas__ContainerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/deployment/{deployment_id}/containers": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Deployment Containers",
        "operationId": "get_deployment_containers_v1_io_cloud_caas_deployment__deployment_id__containers_get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/deployment/{deployment_id}/containers-jobs/{container_id}": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Containers Jobs History",
        "operationId": "get_containers_jobs_history_v1_io_cloud_caas_deployment__deployment_id__containers_jobs__container_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "container_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Container Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/locations": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Caas Locations",
        "operationId": "get_caas_locations_v1_io_cloud_caas_locations_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/hardware": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Caas Hardware",
        "operationId": "get_caas_hardware_v1_io_cloud_caas_hardware_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Location Ids"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/hardware/max-gpus-per-container": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Max Gpu Count Per Container",
        "operationId": "get_max_gpu_count_per_container_v1_io_cloud_caas_hardware_max_gpus_per_container_get",
        "parameters": [
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__caas__GetMaxGpuCountPerReplicaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/available-replicas": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Available Replicas",
        "operationId": "get_available_replicas_v1_io_cloud_caas_available_replicas_get",
        "parameters": [
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Qty"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__caas__GetAvailableReplicasPerLocationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/price": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Deployment Price",
        "operationId": "get_deployment_price_v1_io_cloud_caas_price_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClusterCurrency"
            }
          },
          {
            "name": "duration_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DurationType"
            }
          },
          {
            "name": "duration_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Duration Qty"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Hardware Qty"
            }
          },
          {
            "name": "replica_count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Replica Count"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/deploy": {
      "post": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Deploy Containers",
        "operationId": "deploy_containers_v1_io_cloud_caas_deploy_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__caas__CaaSDeployClusterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/deployment/{deployment_id}/log/{container_id}": {
      "get": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Get Container Log Stream",
        "operationId": "get_container_log_stream_v1_io_cloud_caas_deployment__deployment_id__log__container_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "container_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Container Id"
            }
          },
          {
            "name": "stream",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LogStream"
                }
              ],
              "default": "stdout",
              "title": "Stream"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/caas/deployment/{deployment_id}/redeploy": {
      "post": {
        "tags": [
          "io-cloud-caas"
        ],
        "summary": "Trigger Redeploy",
        "operationId": "trigger_redeploy_v1_io_cloud_caas_deployment__deployment_id__redeploy_post",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/deployment": {
      "get": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Get Container Deployments",
        "operationId": "get_container_deployments_v1_io_cloud_vmaas_deployment_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/VMaaSResourceStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/deployment/{deployment_id}": {
      "get": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Get Deployment Details",
        "operationId": "get_deployment_details_v1_io_cloud_vmaas_deployment__deployment_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Destroy Deployment",
        "operationId": "destroy_deployment_v1_io_cloud_vmaas_deployment__deployment_id__delete",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/deployment/{deployment_id}/vms": {
      "get": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Get Deployment Vms",
        "operationId": "get_deployment_vms_v1_io_cloud_vmaas_deployment__deployment_id__vms_get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/deployment/{deployment_id}/vms-jobs/{container_id}": {
      "get": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Get Vms Jobs History",
        "operationId": "get_vms_jobs_history_v1_io_cloud_vmaas_deployment__deployment_id__vms_jobs__container_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "container_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Container Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/hardware/max-gpus-per-vm": {
      "get": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Get Max Gpu Count Per Container",
        "operationId": "get_max_gpu_count_per_container_v1_io_cloud_vmaas_hardware_max_gpus_per_vm_get",
        "parameters": [
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__vmaas__GetMaxGpuCountPerReplicaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/available-vms": {
      "get": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Get Available Vms",
        "operationId": "get_available_vms_v1_io_cloud_vmaas_available_vms_get",
        "parameters": [
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Qty"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__vmaas__GetAvailableReplicasPerLocationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/price": {
      "get": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Get Deployment Price",
        "operationId": "get_deployment_price_v1_io_cloud_vmaas_price_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClusterCurrency"
            }
          },
          {
            "name": "duration_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DurationType"
            }
          },
          {
            "name": "duration_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Duration Qty"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Hardware Qty"
            }
          },
          {
            "name": "replica_count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Replica Count"
            }
          },
          {
            "name": "connectivity_tier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Connectivity Tier"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/vmaas/deploy": {
      "post": {
        "tags": [
          "io-cloud-vmaas"
        ],
        "summary": "Deploy Vms",
        "operationId": "deploy_vms_v1_io_cloud_vmaas_deploy_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__vmaas__VMaasDeployRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/deployments": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get All Deployments",
        "operationId": "get_all_deployments_enterprise_v1_io_cloud_caas_deployments_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/CaaSResourceStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__GetDeploymentsData"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/deployment/{deployment_id}": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Deployment Details",
        "operationId": "get_deployment_details_enterprise_v1_io_cloud_caas_deployment__deployment_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__GetDeploymentDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Destroy Container",
        "operationId": "destroy_container_enterprise_v1_io_cloud_caas_deployment__deployment_id__delete",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Update Container Definition",
        "operationId": "update_container_definition_enterprise_v1_io_cloud_caas_deployment__deployment_id__patch",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__enterprise_caas__ContainerUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/deployment/{deployment_id}/containers": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Deployment Containers",
        "operationId": "get_deployment_containers_enterprise_v1_io_cloud_caas_deployment__deployment_id__containers_get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContainersJobData"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/deployment/{deployment_id}/containers-jobs/{container_id}": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Containers Jobs History",
        "operationId": "get_containers_jobs_history_enterprise_v1_io_cloud_caas_deployment__deployment_id__containers_jobs__container_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "container_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Container Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContainersJobData"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/hardware/max-gpus-per-container": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Max Gpu Count Per Container",
        "operationId": "get_max_gpu_count_per_container_enterprise_v1_io_cloud_caas_hardware_max_gpus_per_container_get",
        "parameters": [
          {
            "name": "node_pool_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Pool Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__GetMaxGpuCountPerReplicaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/available-replicas": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Available Replicas",
        "operationId": "get_available_replicas_enterprise_v1_io_cloud_caas_available_replicas_get",
        "parameters": [
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Hardware Qty"
            }
          },
          {
            "name": "node_pool_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Pool Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__GetAvailableReplicasPerLocationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/node-pools": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Private Node Pools",
        "operationId": "get_private_node_pools_enterprise_v1_io_cloud_caas_node_pools_get",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPrivateNodePoolsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/price": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Deployment Price",
        "operationId": "get_deployment_price_enterprise_v1_io_cloud_caas_price_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "list of ids in a form of json array",
              "title": "Location Ids"
            },
            "description": "list of ids in a form of json array"
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "duration_hours",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Duration Hours"
            }
          },
          {
            "name": "gpus_per_container",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Gpus Per Container"
            }
          },
          {
            "name": "replica_count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Replica Count"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCaasPriceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/deploy": {
      "post": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Deploy Containers",
        "operationId": "deploy_containers_enterprise_v1_io_cloud_caas_deploy_post",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__enterprise_caas__CaaSDeployClusterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/deployment/{deployment_id}/log/{container_id}": {
      "get": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Get Container Log Stream",
        "operationId": "get_container_log_stream_enterprise_v1_io_cloud_caas_deployment__deployment_id__log__container_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "container_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Container Id"
            }
          },
          {
            "name": "stream",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/LogStream"
                }
              ],
              "default": "stdout",
              "title": "Stream"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/caas/deployment/{deployment_id}/extend": {
      "post": {
        "tags": [
          "enterprise-io-cloud-caas"
        ],
        "summary": "Extend Cluster",
        "operationId": "extend_cluster_enterprise_v1_io_cloud_caas_deployment__deployment_id__extend_post",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__enterprise_caas__ExtendCluster"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__GetDeploymentDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/deployments": {
      "get": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Get All Deployments",
        "operationId": "get_all_deployments_enterprise_v1_io_cloud_vmaas_deployments_get",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/VMaaSResourceStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__GetDeploymentsData"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/deployment/{deployment_id}": {
      "get": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Get Deployment Details",
        "operationId": "get_deployment_details_enterprise_v1_io_cloud_vmaas_deployment__deployment_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__GetDeploymentDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Destroy Deployment",
        "operationId": "destroy_deployment_enterprise_v1_io_cloud_vmaas_deployment__deployment_id__delete",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/deployment/{deployment_id}/vms": {
      "get": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Get Deployment Vms",
        "operationId": "get_deployment_vms_enterprise_v1_io_cloud_vmaas_deployment__deployment_id__vms_get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVmJobData"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/deployment/{deployment_id}/vms-jobs/{container_id}": {
      "get": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Get Vms Jobs History",
        "operationId": "get_vms_jobs_history_enterprise_v1_io_cloud_vmaas_deployment__deployment_id__vms_jobs__container_id__get",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "container_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Container Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "min": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVmJobData"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/hardware/max-gpus-per-vm": {
      "get": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Get Max Gpu Count Per Vm",
        "operationId": "get_max_gpu_count_per_vm_enterprise_v1_io_cloud_vmaas_hardware_max_gpus_per_vm_get",
        "parameters": [
          {
            "name": "node_pool_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Pool Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__GetMaxGpuCountPerReplicaResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/available-vms": {
      "get": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Get Available Vms",
        "operationId": "get_available_vms_enterprise_v1_io_cloud_vmaas_available_vms_get",
        "parameters": [
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "hardware_qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Hardware Qty"
            }
          },
          {
            "name": "node_pool_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Node Pool Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__GetAvailableReplicasPerLocationResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/price": {
      "get": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Get Deployment Price",
        "operationId": "get_deployment_price_enterprise_v1_io_cloud_vmaas_price_get",
        "parameters": [
          {
            "name": "location_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Location Ids"
            }
          },
          {
            "name": "hardware_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Hardware Id"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ClusterCurrency"
            }
          },
          {
            "name": "duration_hours",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Duration Hours"
            }
          },
          {
            "name": "gpus_per_vm",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "title": "Gpus Per Vm"
            }
          },
          {
            "name": "replica_count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Replica Count"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVmaasPriceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/deploy": {
      "post": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Deploy Vms",
        "operationId": "deploy_vms_enterprise_v1_io_cloud_vmaas_deploy_post",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__enterprise_vmaas__VMaasDeployRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/io-cloud/vmaas/deployment/{deployment_id}/extend": {
      "post": {
        "tags": [
          "enterprise-io-cloud-vmaas"
        ],
        "summary": "Extend Cluster",
        "operationId": "extend_cluster_enterprise_v1_io_cloud_vmaas_deployment__deployment_id__extend_post",
        "parameters": [
          {
            "name": "deployment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deployment Id"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "X-Api-Key"
            },
            "description": "io.net provided API Key"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/io_cloud__schemas__request__enterprise_vmaas__ExtendCluster"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__GetDeploymentDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/stripe/webhook": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Stripe Handle Webhook",
        "operationId": "stripe_handle_webhook_v1_io_cloud_clusters_stripe_webhook_post",
        "parameters": [
          {
            "name": "stripe-signature",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stripe-Signature"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeWebHookData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-cloud/clusters/sphere/webhook": {
      "post": {
        "tags": [
          "io-cloud-clusters"
        ],
        "summary": "Sphere Handle Webhook",
        "operationId": "sphere_handle_webhook_v1_io_cloud_clusters_sphere_webhook_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SphereWebHookData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-staking/user/rewards": {
      "get": {
        "tags": [
          "io-staking-users"
        ],
        "summary": "Get Users Daily Staking Rewards",
        "description": "get user's daily staking rewards summary",
        "operationId": "get_users_daily_staking_rewards_v1_io_staking_user_rewards_get",
        "parameters": [
          {
            "name": "from_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "From Date"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "title": "To Date"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-staking/user/transactions": {
      "get": {
        "tags": [
          "io-staking-users"
        ],
        "summary": "Get Users Safety Module Transactions",
        "description": "get user's staking transactions",
        "operationId": "get_users_safety_module_transactions_v1_io_staking_user_transactions_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StakingTransactionType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-staking/daily_apr": {
      "get": {
        "tags": [
          "io-staking-users"
        ],
        "summary": "Get  ",
        "description": "get daily staking average apr",
        "operationId": "get___v1_io_staking_daily_apr_get",
        "parameters": [
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2025-07-31",
              "title": "From Date"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "default": "2025-08-06",
              "title": "To Date"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-staking/estimated-staking-apr": {
      "get": {
        "tags": [
          "io-staking-users"
        ],
        "summary": "Get Estimated Staking Apr",
        "description": "get estimated staking apr",
        "operationId": "get_estimated_staking_apr_v1_io_staking_estimated_staking_apr_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/sla": {
      "get": {
        "tags": [
          "io-user-sla"
        ],
        "summary": "Get Users Sla Details",
        "description": "get user's sla details",
        "operationId": "get_users_sla_details_v1_io_user_sla_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserSlaDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/sla/sign": {
      "post": {
        "tags": [
          "io-user-sla"
        ],
        "summary": "Sign User Sla",
        "description": "get user's sla details",
        "operationId": "sign_user_sla_v1_io_user_sla_sign_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUserSLARequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignUserSLAResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/wallets": {
      "get": {
        "tags": [
          "io-user"
        ],
        "summary": "Get User Wallets Address",
        "operationId": "get_user_wallets_address_v1_io_user_wallets_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "io-user"
        ],
        "summary": "Update Wallets",
        "operationId": "update_wallets_v1_io_user_wallets_put",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWalletRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/wallets/{wallet_address}/primary": {
      "post": {
        "tags": [
          "io-user"
        ],
        "summary": "Set Primary Wallet",
        "operationId": "set_primary_wallet_v1_io_user_wallets__wallet_address__primary_post",
        "parameters": [
          {
            "name": "wallet_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Wallet Address"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SetPrimaryWalletResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/wallets/{wallet_address}": {
      "delete": {
        "tags": [
          "io-user"
        ],
        "summary": "Deactivate Wallet",
        "operationId": "deactivate_wallet_v1_io_user_wallets__wallet_address__delete",
        "parameters": [
          {
            "name": "wallet_address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Wallet Address"
            }
          },
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletResponseModel"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/wallets_history": {
      "get": {
        "tags": [
          "io-user"
        ],
        "summary": "Get User Wallets History",
        "operationId": "get_user_wallets_history_v1_io_user_wallets_history_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletHistoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/io-credits/request": {
      "post": {
        "tags": [
          "io-user"
        ],
        "summary": "Request Credits",
        "operationId": "request_credits_v1_io_user_io_credits_request_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreditsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/io-user/io-credits/request-withdraw": {
      "post": {
        "tags": [
          "io-user"
        ],
        "summary": "Request Credits Withdraw",
        "operationId": "request_credits_withdraw_v1_io_user_io_credits_request_withdraw_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreditsWithdrawRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Read Current User",
        "operationId": "read_current_user_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/ping": {
      "get": {
        "summary": "Custom Status",
        "operationId": "custom_status_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActiveDeviceStatus": {
        "type": "string",
        "enum": [
          "paused",
          "up"
        ],
        "title": "ActiveDeviceStatus"
      },
      "AdditionalK8SServices": {
        "properties": {
          "k8s_dashboard": {
            "type": "boolean",
            "title": "K8S Dashboard",
            "default": true
          },
          "run_benchmark": {
            "type": "boolean",
            "title": "Run Benchmark",
            "default": false
          }
        },
        "type": "object",
        "title": "AdditionalK8SServices"
      },
      "AggregatedInventoryResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "last_generated_at": {
            "type": "string",
            "title": "Last Generated At"
          }
        },
        "type": "object",
        "required": [
          "data",
          "status",
          "last_generated_at"
        ],
        "title": "AggregatedInventoryResponse",
        "examples": [
          {
            "data": {
              "active": 100,
              "hardware": [
                {
                  "active": 10,
                  "brand": "Nvidia",
                  "name": "H100",
                  "passive": 2,
                  "total": 12
                }
              ],
              "passive": 150,
              "total": 250
            },
            "last_generated_at": "2025-05-09T08:53:29.205278+00:00",
            "status": "succeeded"
          }
        ]
      },
      "ArchiveClusterResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ArchiveClusterResponse",
        "example": {
          "message": "cluster archived successfully",
          "status": "succeeded"
        }
      },
      "Asset": {
        "type": "string",
        "enum": [
          "usdc",
          "iocoin"
        ],
        "title": "Asset"
      },
      "AuthenticationResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "AuthenticationResponse",
        "example": {
          "data": {
            "access_token": "<JWT_TOKEN>"
          },
          "status": "succeeded"
        }
      },
      "BalanceType": {
        "type": "string",
        "enum": [
          "cloud",
          "worker"
        ],
        "title": "BalanceType"
      },
      "BareMetalRequest": {
        "properties": {
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_qty": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Hardware Qty"
          },
          "ssh_pub_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Pub Key"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "supplier_id": {
            "type": "integer",
            "title": "Supplier Id"
          },
          "security_soc2": {
            "type": "boolean",
            "title": "Security Soc2"
          },
          "connectivity_tier": {
            "type": "integer",
            "title": "Connectivity Tier"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClusterCurrency"
              },
              {
                "type": "null"
              }
            ],
            "default": "usdc"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "$ref": "#/components/schemas/DurationType"
          },
          "estimated_cost": {
            "type": "number",
            "title": "Estimated Cost"
          }
        },
        "type": "object",
        "required": [
          "hardware_id",
          "hardware_qty",
          "location_id",
          "supplier_id",
          "security_soc2",
          "connectivity_tier",
          "resource_private_name",
          "duration_qty",
          "duration_type",
          "estimated_cost"
        ],
        "title": "BareMetalRequest"
      },
      "BaremetalCreationRequest": {
        "properties": {
          "client_email": {
            "type": "string",
            "title": "Client Email"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "currency": {
            "$ref": "#/components/schemas/ClusterCurrency"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "$ref": "#/components/schemas/DurationType"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_qty": {
            "type": "integer",
            "title": "Hardware Qty"
          },
          "device_count": {
            "type": "integer",
            "title": "Device Count"
          },
          "actual_invoice_id": {
            "type": "string",
            "title": "Actual Invoice Id"
          },
          "user_wallet": {
            "type": "string",
            "title": "User Wallet"
          },
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "bm_request_submitted_by": {
            "type": "string",
            "title": "Bm Request Submitted By"
          }
        },
        "type": "object",
        "required": [
          "client_email",
          "total_amount",
          "currency",
          "duration_qty",
          "duration_type",
          "hardware_id",
          "hardware_qty",
          "device_count",
          "actual_invoice_id",
          "user_wallet",
          "resource_id",
          "bm_request_submitted_by"
        ],
        "title": "BaremetalCreationRequest"
      },
      "BaremetalDeployClusterService": {
        "properties": {
          "hardware_id": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Hardware Id"
          },
          "hardware_qty": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Hardware Qty"
          },
          "location_id": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Location Id"
          },
          "connectivity_tier": {
            "type": "integer",
            "title": "Connectivity Tier"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClusterCurrency"
              },
              {
                "type": "null"
              }
            ],
            "default": "usdc"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              }
            ]
          },
          "transaction": {
            "type": "string",
            "title": "Transaction"
          },
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "payment_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "payment"
          }
        },
        "type": "object",
        "required": [
          "hardware_id",
          "hardware_qty",
          "location_id",
          "connectivity_tier",
          "resource_private_name",
          "transaction"
        ],
        "title": "BaremetalDeployClusterService"
      },
      "BaremetalGeneratePaymentLinkRequest": {
        "properties": {
          "io_invoice_id": {
            "type": "string",
            "format": "uuid",
            "title": "Io Invoice Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "currency": {
            "$ref": "#/components/schemas/ClusterCurrency"
          }
        },
        "type": "object",
        "required": [
          "io_invoice_id",
          "amount",
          "currency"
        ],
        "title": "BaremetalGeneratePaymentLinkRequest"
      },
      "BaremetalResourceStatus": {
        "type": "string",
        "enum": [
          "running",
          "completed",
          "unpaid",
          "failed",
          "deployment requested",
          "deploying",
          "termination requested",
          "terminated",
          "destroyed"
        ],
        "title": "BaremetalResourceStatus"
      },
      "Block": {
        "properties": {
          "block_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id",
            "example": "2024-05-13T15:00:00"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BlockStatus"
              },
              {
                "type": "null"
              }
            ],
            "example": "Completed"
          },
          "time_and_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time And Date",
            "example": "2024-05-13T15:46:00"
          },
          "total_block_emission": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Block Emission",
            "example": 2663.0003
          },
          "nominated_workers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nominated Workers",
            "example": 7020
          },
          "succeeded": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Succeeded",
            "example": 3446
          },
          "failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed",
            "example": 200
          },
          "total_workers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Workers",
            "example": 200
          },
          "verified_cpus": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Cpus",
            "example": 200
          },
          "verified_gpus": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Gpus",
            "example": 200
          },
          "num_cpu_workers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Cpu Workers",
            "example": 200
          },
          "num_gpu_workers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Gpu Workers",
            "example": 200
          },
          "worker_emission": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worker Emission",
            "example": 123.45
          },
          "safety_module_emission": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Module Emission",
            "example": 67.89
          },
          "safety_module_share_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Module Share Percentage",
            "example": 3.14
          }
        },
        "type": "object",
        "title": "Block"
      },
      "BlockCounts": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "All",
            "example": 500
          },
          "completed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed",
            "example": 500
          },
          "failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed",
            "example": 500
          }
        },
        "type": "object",
        "title": "BlockCounts"
      },
      "BlockDeviceCounts": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "All",
            "example": 500
          },
          "success": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success",
            "example": 500
          },
          "failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed",
            "example": 500
          }
        },
        "type": "object",
        "title": "BlockDeviceCounts"
      },
      "BlockStatus": {
        "type": "string",
        "enum": [
          "all",
          "Completed",
          "In Progress",
          "Failed",
          "Processing"
        ],
        "title": "BlockStatus"
      },
      "BlockStatusEnum": {
        "type": "string",
        "enum": [
          "all",
          "Completed",
          "In Progress",
          "Failed",
          "Processing"
        ],
        "title": "BlockStatusEnum"
      },
      "BlocksResponse": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page",
            "example": 2
          },
          "total_blocks": {
            "type": "number",
            "title": "Total Blocks",
            "example": 50.23
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "example": 20
          },
          "blocks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Block"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "page",
          "total_blocks",
          "page_size"
        ],
        "title": "BlocksResponse"
      },
      "CaaSResourceStatus": {
        "type": "string",
        "enum": [
          "running",
          "completed",
          "failed",
          "deployment requested",
          "termination requested",
          "destroyed"
        ],
        "title": "CaaSResourceStatus"
      },
      "CheckClusterNameAvailabilityResponse": {
        "properties": {
          "data": {
            "type": "string",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "CheckClusterNameAvailabilityResponse",
        "example": true
      },
      "ClusterCurrency": {
        "type": "string",
        "enum": [
          "usdc",
          "iocoin"
        ],
        "title": "ClusterCurrency"
      },
      "ClusterDetailsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ClusterDetailsResponse",
        "example": {
          "data": {
            "Running For": "0 Hrs 0 Mins",
            "amount_paid": 0,
            "amount_refunded": 0,
            "base_tier_name": "Ultra High Speed",
            "compute_hours_remaining": "0 Hrs 0 Mins",
            "compute_hours_served": "0 Hrs 0 Mins",
            "download_speed_mbps": 1600,
            "finished_at": "2023-09-11 05:04:53",
            "hardware_quantity": 3,
            "id": "b168e413-3014-457e-b139-8450371b47c6",
            "iso2": "CA",
            "location_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/canada.svg",
            "location_name": "Canada",
            "percent_completed": 0,
            "public_ip": "127.0.0.1",
            "python_version": "3.11",
            "ray_dashboard_url": "https://ray.io",
            "ray_version": "2.3.1",
            "resource_private_name": "testnet_4",
            "security_compliance": "false",
            "service_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/ray.svg",
            "service_name": "Ray App",
            "started_at": "2023-09-11 05:04:53",
            "status": "deploying",
            "total_age": "0 Hrs 0 Mins",
            "upload_speed_mbps": 1200,
            "vscode_url": "https://vscode.dev"
          },
          "status": "succeeded"
        }
      },
      "ClusterExtensionPriceResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ClusterExtensionPriceResponse",
        "example": {
          "data": {
            "hour_price": 0.5
          },
          "status": "succeeded"
        }
      },
      "ClusterExtensionResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ClusterExtensionResponse",
        "example": {
          "message": "cluster extended by x hours",
          "status": "succeeded"
        }
      },
      "ClusterSearchResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ClusterSearchResponse",
        "example": {
          "data": [
            {
              "brand_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
              "brand_id": 2,
              "brand_name": "NVIDIA",
              "cluster_id": "4b77b085-7d26-4118-83bb-f00b2df0dbce",
              "compute_time_remaining": "0 hours 0 minutes",
              "compute_time_served": "100 hours 0 minutes",
              "hardware_id": 159,
              "hardware_name": "A100 PCIe 80 GB",
              "hardware_quantity": 60,
              "hardware_type": "GPU",
              "percent_completed": 100
            }
          ],
          "status": "succeeded"
        }
      },
      "CoingeckoSupplyResponseSchema": {
        "properties": {
          "result": {
            "type": "number",
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "CoingeckoSupplyResponseSchema"
      },
      "ConnectivityTierEnum": {
        "type": "string",
        "enum": [
          "High Speed",
          "Low Speed",
          "Medium Speed",
          "Ultra High Speed"
        ],
        "title": "ConnectivityTierEnum"
      },
      "ContainerConfig-Output": {
        "properties": {
          "entrypoint": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entrypoint"
          },
          "env_variables": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Variables"
          },
          "traffic_port": {
            "type": "integer",
            "title": "Traffic Port"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "secret_env_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Secret Env Keys"
          }
        },
        "type": "object",
        "required": [
          "entrypoint",
          "env_variables",
          "traffic_port",
          "image_url",
          "secret_env_keys"
        ],
        "title": "ContainerConfig"
      },
      "ContainerEvent": {
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "time",
          "message"
        ],
        "title": "ContainerEvent"
      },
      "ContainersJobsData": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "workers": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__WorkerData"
            },
            "type": "array",
            "title": "Workers"
          }
        },
        "type": "object",
        "required": [
          "total",
          "workers"
        ],
        "title": "ContainersJobsData"
      },
      "CreateApiKey": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "project": {
            "type": "string",
            "title": "Project"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          }
        },
        "type": "object",
        "required": [
          "description",
          "expires_at",
          "project",
          "scopes"
        ],
        "title": "CreateApiKey"
      },
      "CreateApiKeyResponse": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "key": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SingleApiKey"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "value",
          "key"
        ],
        "title": "CreateApiKeyResponse"
      },
      "CreateDeviceIDForUserResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "CreateDeviceIDForUserResponse",
        "example": {
          "data": {
            "device_id": "{UUID format}"
          },
          "status": "succeeded"
        }
      },
      "CreditApproveRequest": {
        "properties": {
          "credits_request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Credits Request Id"
          },
          "approved_by": {
            "type": "string",
            "title": "Approved By"
          },
          "approval_level": {
            "type": "integer",
            "title": "Approval Level"
          },
          "expiry_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Date"
          },
          "approved_amount": {
            "type": "number",
            "title": "Approved Amount"
          },
          "is_promotional": {
            "type": "boolean",
            "title": "Is Promotional"
          }
        },
        "type": "object",
        "required": [
          "credits_request_id",
          "approved_by",
          "approval_level"
        ],
        "title": "CreditApproveRequest"
      },
      "CreditCancelRequest": {
        "properties": {
          "credits_request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Credits Request Id"
          },
          "cancelled_by": {
            "type": "string",
            "title": "Cancelled By"
          },
          "cancellation_level": {
            "type": "integer",
            "title": "Cancellation Level"
          }
        },
        "type": "object",
        "required": [
          "credits_request_id",
          "cancelled_by",
          "cancellation_level"
        ],
        "title": "CreditCancelRequest"
      },
      "CreditRejectRequest": {
        "properties": {
          "credits_request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Credits Request Id"
          },
          "rejected_by": {
            "type": "string",
            "title": "Rejected By"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "rejection_level": {
            "type": "integer",
            "title": "Rejection Level"
          }
        },
        "type": "object",
        "required": [
          "credits_request_id",
          "rejected_by",
          "reason",
          "rejection_level"
        ],
        "title": "CreditRejectRequest"
      },
      "CreditsGeneratePaymentLinkRequest": {
        "properties": {
          "credits_request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Credits Request Id"
          },
          "generated_by": {
            "type": "string",
            "title": "Generated By"
          }
        },
        "type": "object",
        "required": [
          "credits_request_id",
          "generated_by"
        ],
        "title": "CreditsGeneratePaymentLinkRequest"
      },
      "CreditsRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "submitted_by": {
            "type": "string",
            "title": "Submitted By"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "reason",
          "amount",
          "submitted_by"
        ],
        "title": "CreditsRequest"
      },
      "CreditsWithdrawApproveRequest": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "approved_by": {
            "type": "string",
            "title": "Approved By"
          },
          "tx_url": {
            "type": "string",
            "title": "Tx Url"
          },
          "network": {
            "type": "string",
            "title": "Network"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "approved_by",
          "tx_url",
          "network"
        ],
        "title": "CreditsWithdrawApproveRequest"
      },
      "CreditsWithdrawRejectRequest": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "rejected_by": {
            "type": "string",
            "title": "Rejected By"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "rejected_by",
          "reason"
        ],
        "title": "CreditsWithdrawRejectRequest"
      },
      "DailyActiveStakeUserData": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "date",
          "count"
        ],
        "title": "DailyActiveStakeUserData"
      },
      "DailyFullStakeDeviceCount": {
        "properties": {
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "report_date": {
            "type": "string",
            "format": "date",
            "title": "Report Date"
          },
          "device_count": {
            "type": "integer",
            "title": "Device Count"
          },
          "card_count": {
            "type": "integer",
            "title": "Card Count"
          }
        },
        "type": "object",
        "required": [
          "hardware_id",
          "report_date",
          "device_count",
          "card_count"
        ],
        "title": "DailyFullStakeDeviceCount"
      },
      "DailyGrossStakedData": {
        "properties": {
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          },
          "cumulative_gross_staked": {
            "type": "number",
            "title": "Cumulative Gross Staked"
          }
        },
        "type": "object",
        "required": [
          "day",
          "cumulative_gross_staked"
        ],
        "title": "DailyGrossStakedData"
      },
      "DailyStakedAmountData": {
        "properties": {
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          },
          "total_staked_per_day": {
            "type": "number",
            "title": "Total Staked Per Day"
          }
        },
        "type": "object",
        "required": [
          "day",
          "total_staked_per_day"
        ],
        "title": "DailyStakedAmountData"
      },
      "DailyUniqueStakingData": {
        "properties": {
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          },
          "unique_stakers": {
            "type": "integer",
            "title": "Unique Stakers"
          }
        },
        "type": "object",
        "required": [
          "day",
          "unique_stakers"
        ],
        "title": "DailyUniqueStakingData"
      },
      "DeleteDeviceNotificationsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DeleteDeviceNotificationsResponse",
        "example": {
          "info": "Device notifications delete successfully",
          "status": "success"
        }
      },
      "DeleteUserNotificationsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DeleteUserNotificationsResponse",
        "example": {
          "data": "Notification deleted",
          "status": "successded"
        }
      },
      "DeployClusterService": {
        "properties": {
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_qty": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Hardware Qty"
          },
          "hours_qty": {
            "type": "integer",
            "maximum": 8760.0,
            "exclusiveMinimum": 0.0,
            "title": "Hours Qty"
          },
          "package": {
            "$ref": "#/components/schemas/Package"
          },
          "location_id": {
            "items": {},
            "type": "array",
            "title": "Location Id"
          },
          "supplier_id": {
            "type": "integer",
            "title": "Supplier Id"
          },
          "security_soc2": {
            "type": "boolean",
            "title": "Security Soc2"
          },
          "connectivity_tier": {
            "type": "integer",
            "title": "Connectivity Tier"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClusterCurrency"
              },
              {
                "type": "null"
              }
            ],
            "default": "usdc"
          },
          "duration_qty": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Qty"
          },
          "duration_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentSource"
              }
            ],
            "default": "payment"
          }
        },
        "type": "object",
        "required": [
          "hardware_id",
          "hardware_qty",
          "hours_qty",
          "package",
          "location_id",
          "supplier_id",
          "security_soc2",
          "connectivity_tier",
          "user_id",
          "resource_private_name"
        ],
        "title": "DeployClusterService"
      },
      "DeployClusterServiceResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DeployClusterServiceResponse",
        "example": {
          "data": {
            "cluster_id": "9c77952c-4173-41e0-96d5-f5a6388c34f8"
          },
          "status": "succeeded"
        }
      },
      "DeployK8sClusterService": {
        "properties": {
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_qty": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Hardware Qty"
          },
          "hours_qty": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Hours Qty"
          },
          "location_id": {
            "items": {},
            "type": "array",
            "title": "Location Id"
          },
          "supplier_id": {
            "type": "integer",
            "title": "Supplier Id"
          },
          "security_soc2": {
            "type": "boolean",
            "title": "Security Soc2"
          },
          "connectivity_tier": {
            "type": "integer",
            "title": "Connectivity Tier"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "ssh_public_key_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Public Key Name"
          },
          "ssh_public_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Public Key"
          },
          "k8s_service_ids": {
            "items": {},
            "type": "array",
            "title": "K8S Service Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "hardware_id",
          "hardware_qty",
          "hours_qty",
          "location_id",
          "supplier_id",
          "security_soc2",
          "connectivity_tier",
          "user_id",
          "resource_private_name"
        ],
        "title": "DeployK8sClusterService"
      },
      "DeployMegaClusterService": {
        "properties": {
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "hours_qty": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Hours Qty"
          },
          "service_id": {
            "type": "integer",
            "title": "Service Id"
          },
          "package": {
            "$ref": "#/components/schemas/Package"
          },
          "supplier_id": {
            "type": "integer",
            "title": "Supplier Id"
          },
          "connectivity_tier": {
            "type": "integer",
            "title": "Connectivity Tier"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "security_soc2": {
            "type": "boolean",
            "title": "Security Soc2"
          },
          "device_type": {
            "type": "string",
            "title": "Device Type"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClusterCurrency"
              },
              {
                "type": "null"
              }
            ],
            "default": "usdc"
          },
          "duration_qty": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Qty"
          },
          "duration_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "payment"
          }
        },
        "type": "object",
        "required": [
          "hours_qty",
          "service_id",
          "package",
          "supplier_id",
          "connectivity_tier",
          "resource_private_name",
          "security_soc2",
          "device_type"
        ],
        "title": "DeployMegaClusterService"
      },
      "DeploymentData": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "completed_percent": {
            "type": "number",
            "title": "Completed Percent"
          },
          "hardware_quantity": {
            "type": "integer",
            "title": "Hardware Quantity"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          },
          "hardware_name": {
            "type": "string",
            "title": "Hardware Name"
          },
          "compute_minutes_served": {
            "type": "integer",
            "title": "Compute Minutes Served"
          },
          "compute_minutes_remaining": {
            "type": "integer",
            "title": "Compute Minutes Remaining"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "name",
          "completed_percent",
          "hardware_quantity",
          "brand_name",
          "hardware_name",
          "compute_minutes_served",
          "compute_minutes_remaining"
        ],
        "title": "DeploymentData"
      },
      "DeploymentsData": {
        "properties": {
          "deployments": {
            "items": {
              "$ref": "#/components/schemas/DeploymentData"
            },
            "type": "array",
            "title": "Deployments"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "statuses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Statuses"
          }
        },
        "type": "object",
        "required": [
          "deployments",
          "total",
          "statuses"
        ],
        "title": "DeploymentsData"
      },
      "DestroyClusterResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DestroyClusterResponse",
        "example": {
          "data": "Cluster Terminated Requested",
          "status": "succeeded"
        }
      },
      "DeviceBlockMaskedRecords": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page",
            "examples": [
              2
            ]
          },
          "total_rewards": {
            "type": "number",
            "title": "Total Rewards",
            "examples": [
              50.23
            ]
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "examples": [
              20
            ]
          },
          "block_rewards": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IOWorkerMaskedBlockRecord"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Rewards"
          }
        },
        "type": "object",
        "required": [
          "page",
          "total_rewards",
          "page_size"
        ],
        "title": "DeviceBlockMaskedRecords"
      },
      "DeviceBlockRecords": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page",
            "example": 2
          },
          "total_rewards": {
            "type": "number",
            "title": "Total Rewards",
            "example": 50.23
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "example": 20
          },
          "block_rewards": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/IOWorkerBlockRecord"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Rewards"
          }
        },
        "type": "object",
        "required": [
          "page",
          "total_rewards",
          "page_size"
        ],
        "title": "DeviceBlockRecords"
      },
      "DeviceBlockRewardsSummary": {
        "properties": {
          "device_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "example": "00fd3995-9bf3-4371-87fd-91237a8248ed"
          },
          "total_block_rewards": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Block Rewards",
            "default": 0,
            "example": 625324
          },
          "total_blocks_earned": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Blocks Earned",
            "default": 0,
            "example": 5
          },
          "total_blocks_failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Blocks Failed",
            "default": 0,
            "example": 20
          },
          "total_blocks_missed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Blocks Missed",
            "default": 0,
            "example": 12000
          },
          "datewise_earnings_summary": {
            "items": {
              "$ref": "#/components/schemas/DeviceDateWiseEarningSummary"
            },
            "type": "array",
            "title": "Datewise Earnings Summary",
            "default": []
          }
        },
        "type": "object",
        "title": "DeviceBlockRewardsSummary"
      },
      "DeviceBlockWorkersCount": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "All",
            "example": 23
          },
          "success": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success",
            "example": 23
          },
          "failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed",
            "example": 23
          }
        },
        "type": "object",
        "title": "DeviceBlockWorkersCount"
      },
      "DeviceBrand": {
        "type": "string",
        "enum": [
          "NVIDIA",
          "AMD",
          "Apple",
          "Intel"
        ],
        "title": "DeviceBrand"
      },
      "DeviceCounts": {
        "properties": {
          "block_workers": {
            "$ref": "#/components/schemas/DeviceBlockWorkersCount"
          },
          "potl": {
            "$ref": "#/components/schemas/DevicePotlCount"
          },
          "pow": {
            "$ref": "#/components/schemas/DevicePowCount"
          }
        },
        "type": "object",
        "required": [
          "block_workers",
          "potl",
          "pow"
        ],
        "title": "DeviceCounts"
      },
      "DeviceDateWiseEarningSummary": {
        "properties": {
          "rewards": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards",
            "example": 0.702
          },
          "date_with_year": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date With Year",
            "example": "2024-05-17"
          }
        },
        "type": "object",
        "title": "DeviceDateWiseEarningSummary"
      },
      "DeviceEarningsSummaryResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DeviceEarningsSummaryResponse",
        "example": {
          "data": {
            "device_id": "599ef4af-7fe6-44b5-aba3-25899bde2ab6",
            "monthly_earnings_summary": [
              {
                "month": 10,
                "total_earnings": 0,
                "total_slashed": 0,
                "year": 2023
              },
              {
                "month": 9,
                "total_earnings": 0,
                "total_slashed": 0,
                "year": 2023
              },
              {
                "month": 8,
                "total_earnings": 128.9,
                "total_slashed": 0,
                "year": 2023
              }
            ],
            "total_compute_hours": 0,
            "total_earnings": 0,
            "total_jobs": 0,
            "total_slashed": 0,
            "year": 2023
          },
          "status": "succeeded"
        }
      },
      "DeviceFilterColumns": {
        "type": "string",
        "enum": [
          "withdrawable",
          "stake_amount",
          "freeze_amount"
        ],
        "title": "DeviceFilterColumns"
      },
      "DeviceGeneratingIdRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "DeviceGeneratingIdRequest"
      },
      "DeviceNotificationStatus": {
        "type": "string",
        "enum": [
          "all",
          "error",
          "warning",
          "info",
          "success"
        ],
        "title": "DeviceNotificationStatus"
      },
      "DevicePOWSummary": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "DevicePOWSummary",
        "example": {
          "data": {
            "device_id": "dca013fb-5ffa-4134-9b4d-8cb71f953d20",
            "last_challenge_status": "succeeded",
            "pow_jobs_failed": 0,
            "pow_jobs_passed": 0
          },
          "status": "succeeded"
        }
      },
      "DevicePotlCount": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "All",
            "example": 23
          },
          "success": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success",
            "example": 23
          },
          "failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed",
            "example": 23
          }
        },
        "type": "object",
        "title": "DevicePotlCount"
      },
      "DevicePowCount": {
        "properties": {
          "all": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "All",
            "example": 23
          },
          "success": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success",
            "example": 23
          },
          "failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed",
            "example": 23
          }
        },
        "type": "object",
        "title": "DevicePowCount"
      },
      "DeviceProofOfTimeLock": {
        "properties": {
          "device_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "example": "bedefd6b-44e8-4855-9692-f216e34a8d65"
          },
          "block_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id",
            "example": 2
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StatusEnum-Output"
              },
              {
                "type": "null"
              }
            ],
            "example": "Success"
          },
          "time_and_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time And Date",
            "example": "2024-05-16 00:22:24"
          },
          "uptime_percentage": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uptime Percentage",
            "example": 84.32
          },
          "uptime_in_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uptime In Minutes",
            "example": 54
          },
          "txid_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Txid Url"
          },
          "is_baremetal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Baremetal",
            "default": false
          },
          "is_k8s": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is K8S",
            "default": false
          }
        },
        "type": "object",
        "title": "DeviceProofOfTimeLock"
      },
      "DeviceProofOfTimeLockDetails": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page",
            "example": 1
          },
          "total_potl": {
            "type": "integer",
            "title": "Total Potl",
            "example": 50
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "example": 20
          },
          "potl": {
            "items": {
              "$ref": "#/components/schemas/DeviceProofOfTimeLock"
            },
            "type": "array",
            "title": "Potl"
          }
        },
        "type": "object",
        "required": [
          "page",
          "total_potl",
          "page_size",
          "potl"
        ],
        "title": "DeviceProofOfTimeLockDetails"
      },
      "DeviceProofOfWorkDetails": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page",
            "example": 1
          },
          "total_pow": {
            "type": "integer",
            "title": "Total Pow",
            "example": 50
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "example": 20
          },
          "pow": {
            "items": {
              "$ref": "#/components/schemas/Pow"
            },
            "type": "array",
            "title": "Pow"
          }
        },
        "type": "object",
        "required": [
          "page",
          "total_pow",
          "page_size",
          "pow"
        ],
        "title": "DeviceProofOfWorkDetails"
      },
      "DeviceReadiness": {
        "properties": {
          "device_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "example": "bedefd6b-44e8-4855-9692-f216e34a8d65"
          },
          "rules": {
            "items": {
              "$ref": "#/components/schemas/RuleCheck"
            },
            "type": "array",
            "title": "Rules"
          },
          "block_rewards_ready": {
            "type": "boolean",
            "title": "Block Rewards Ready"
          }
        },
        "type": "object",
        "required": [
          "rules",
          "block_rewards_ready"
        ],
        "title": "DeviceReadiness"
      },
      "DeviceSettingIsFakeNoneRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "DeviceSettingIsFakeNoneRequest"
      },
      "DeviceSettingUnsupportedRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "DeviceSettingUnsupportedRequest"
      },
      "DeviceSpeed": {
        "type": "string",
        "enum": [
          "Low",
          "Medium",
          "High",
          "Ultra High"
        ],
        "title": "DeviceSpeed"
      },
      "DeviceSpeedtestResults": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "speedtest_results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Speedtest Results"
          }
        },
        "type": "object",
        "required": [
          "page",
          "total_results",
          "page_size",
          "speedtest_results"
        ],
        "title": "DeviceSpeedtestResults",
        "example": {
          "page": 1,
          "page_size": 2,
          "speedtest_results": [
            {
              "connectivity_tier": 3,
              "download_speed_mbps": 544.13,
              "start_time": "2023-09-05 10:08:01",
              "status": "Completed",
              "upload_speed_mbps": 345.54
            },
            {
              "connectivity_tier": 2,
              "download_speed_mbps": 375.34,
              "start_time": "2023-09-05 09:08:01",
              "status": "Completed",
              "upload_speed_mbps": 234.12
            }
          ],
          "total_results": 2
        }
      },
      "DeviceStatus": {
        "type": "string",
        "enum": [
          "up",
          "down",
          "terminated",
          "paused",
          "blocked",
          "restart required",
          "unsupported",
          "inactive"
        ],
        "title": "DeviceStatus"
      },
      "DeviceTerminationRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "user_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "User Ids",
            "default": []
          },
          "user_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "User Emails",
            "default": []
          },
          "new_status": {
            "$ref": "#/components/schemas/DeviceTerminationStatus"
          },
          "authorized_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authorized By"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "new_status"
        ],
        "title": "DeviceTerminationRequest"
      },
      "DeviceTerminationStatus": {
        "type": "string",
        "enum": [
          "terminated",
          "blocked"
        ],
        "title": "DeviceTerminationStatus"
      },
      "DeviceType": {
        "type": "string",
        "enum": [
          "cpu",
          "gpu"
        ],
        "title": "DeviceType"
      },
      "DeviceUnblockingRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "DeviceUnblockingRequest"
      },
      "DeviceUnwhitelistingRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          }
        },
        "type": "object",
        "title": "DeviceUnwhitelistingRequest"
      },
      "DeviceUpdatingIsFakeRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "is_fake": {
            "type": "boolean",
            "title": "Is Fake"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "is_fake"
        ],
        "title": "DeviceUpdatingIsFakeRequest"
      },
      "DeviceUpdatingIsNewRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "is_new": {
            "type": "boolean",
            "title": "Is New"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "is_new"
        ],
        "title": "DeviceUpdatingIsNewRequest"
      },
      "DeviceUpdatingIsWorkingRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "is_working": {
            "type": "boolean",
            "title": "Is Working"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "is_working"
        ],
        "title": "DeviceUpdatingIsWorkingRequest"
      },
      "DeviceUpdatingLastChallengeSuccessfulRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          },
          "last_challenge_successful": {
            "type": "boolean",
            "title": "Last Challenge Successful"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "last_challenge_successful"
        ],
        "title": "DeviceUpdatingLastChallengeSuccessfulRequest"
      },
      "DeviceWhitelistingRequest": {
        "properties": {
          "device_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Device Ids",
            "default": []
          }
        },
        "type": "object",
        "title": "DeviceWhitelistingRequest"
      },
      "DurationType": {
        "type": "string",
        "enum": [
          "hourly",
          "daily",
          "weekly",
          "monthly"
        ],
        "title": "DurationType"
      },
      "EmailPasswordLogin": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "EmailPasswordLogin"
      },
      "FilterDirection": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "FilterDirection"
      },
      "GetBrandsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetBrandsResponse",
        "example": {
          "data": [
            {
              "brand_icon": "https://image.com",
              "brand_name": "Apple"
            },
            {
              "brand_icon": "https://image.com",
              "brand_name": "Samsung"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetCaasPriceData": {
        "properties": {
          "replica_count": {
            "type": "integer",
            "title": "Replica Count"
          },
          "gpus_per_container": {
            "type": "integer",
            "title": "Gpus Per Container"
          },
          "available_replica_count": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Available Replica Count"
          },
          "discount": {
            "type": "number",
            "title": "Discount"
          },
          "ionet_fee": {
            "type": "number",
            "title": "Ionet Fee"
          },
          "ionet_fee_percent": {
            "type": "number",
            "title": "Ionet Fee Percent"
          },
          "currency_conversion_fee": {
            "type": "number",
            "title": "Currency Conversion Fee"
          },
          "currency_conversion_fee_percent": {
            "type": "number",
            "title": "Currency Conversion Fee Percent"
          },
          "total_cost_usdc": {
            "type": "number",
            "title": "Total Cost Usdc"
          }
        },
        "type": "object",
        "required": [
          "replica_count",
          "gpus_per_container",
          "available_replica_count",
          "discount",
          "ionet_fee",
          "ionet_fee_percent",
          "currency_conversion_fee",
          "currency_conversion_fee_percent",
          "total_cost_usdc"
        ],
        "title": "GetCaasPriceData"
      },
      "GetCaasPriceResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GetCaasPriceData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetCaasPriceResponse"
      },
      "GetClusterByStatusData": {
        "properties": {
          "sla_id": {
            "type": "integer",
            "title": "Sla Id"
          },
          "sla_version": {
            "type": "string",
            "title": "Sla Version"
          },
          "sla_path": {
            "type": "string",
            "title": "Sla Path"
          },
          "is_signed": {
            "type": "boolean",
            "title": "Is Signed"
          }
        },
        "type": "object",
        "required": [
          "sla_id",
          "sla_version",
          "sla_path",
          "is_signed"
        ],
        "title": "GetClusterByStatusData"
      },
      "GetClusterByStatusResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetClusterByStatusResponse",
        "example": {
          "data": [
            {
              "brand_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
              "brand_name": "NVIDIA",
              "cluster_id": "2c970eeb-1cb2-4110-a743-06e6fb1ca1ae",
              "cluster_name": "hgjh",
              "compute_hours_remaining": "0 Hrs 0 Mins",
              "hardware_name": "RTX 4090",
              "percent_completed": 0,
              "resource_type": "cluster",
              "status": "deployment requested"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetClusterCountPerStatus": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetClusterCountPerStatus",
        "example": {
          "data": [
            {
              "completed": 173,
              "destroyed": 609,
              "failed": 139,
              "running": 2,
              "termination requested": 5
            }
          ],
          "status": "succeeded"
        }
      },
      "GetContainersJobData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContainersJobsData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetContainersJobData"
      },
      "GetCreateClusterDataResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetCreateClusterDataResponse",
        "example": {
          "data": {
            "connectivity_tiers": [
              {
                "connectivity_tier": 1,
                "download_speed_mbps": 100,
                "name": "Low Speed",
                "upload_speed_mbps": 75
              },
              {
                "connectivity_tier": 4,
                "download_speed_mbps": 1600,
                "name": "Ultra High Speed",
                "upload_speed_mbps": 1200
              }
            ],
            "durations": [
              {
                "duration": "Hourly",
                "percent": 1
              },
              {
                "duration": "Daily",
                "percent": 0.9
              },
              {
                "duration": "Weekly",
                "percent": 0.8
              }
            ],
            "hardwares": {
              "cpu": {
                "Intel": [
                  {
                    "available": 2,
                    "brand_name": "Intel",
                    "busy_percent": 0,
                    "hardware_name": "Xeon Platinum 8380",
                    "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/intel.svg",
                    "id": 15,
                    "price": 1,
                    "total": 2
                  }
                ]
              },
              "gpu": {
                "NVIDIA": [
                  {
                    "available": 227,
                    "brand_name": "NVIDIA",
                    "busy_percent": 15,
                    "hardware_name": "RTX 3060 Mobile",
                    "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                    "id": 140,
                    "price": 1,
                    "total": 267
                  },
                  {
                    "available": 172,
                    "brand_name": "NVIDIA",
                    "busy_percent": 13,
                    "hardware_name": "RTX 3070 Max-Q",
                    "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                    "id": 141,
                    "price": 1,
                    "total": 197
                  },
                  {
                    "available": 150,
                    "brand_name": "NVIDIA",
                    "busy_percent": 16,
                    "hardware_name": "RTX 3060 Max-Q",
                    "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                    "id": 138,
                    "price": 1,
                    "total": 179
                  },
                  {
                    "available": 107,
                    "brand_name": "NVIDIA",
                    "busy_percent": 11,
                    "hardware_name": "RTX 3060",
                    "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                    "id": 139,
                    "price": 1,
                    "total": 120
                  },
                  {
                    "available": 61,
                    "brand_name": "NVIDIA",
                    "busy_percent": 13,
                    "hardware_name": "RTX 3070 Mobile",
                    "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                    "id": 142,
                    "price": 1,
                    "total": 70
                  }
                ]
              }
            },
            "locations": [
              {
                "busy_percent": 0,
                "description": "null",
                "icon": "null",
                "id": 41,
                "name": "Canada"
              },
              {
                "busy_percent": 0,
                "description": "null",
                "icon": "null",
                "id": 117,
                "name": "Kuwait"
              }
            ],
            "services": [
              {
                "description": "",
                "icon": "",
                "id": 3,
                "name": "Ray App"
              }
            ],
            "suppliers": [
              {
                "busy_percent": 0,
                "description": "Render Network Nodes are versatile, designed to handle both light workloads and tasks that require massive distribution.",
                "device_count": 3,
                "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/io-net-logo-symbol-only-final.svg",
                "id": 1,
                "name": "io.net"
              }
            ]
          },
          "status": "succeeded"
        }
      },
      "GetCreateK8SClusterDataResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetCreateK8SClusterDataResponse",
        "example": {
          "data": {
            "durations": [
              {
                "duration": "Hourly",
                "percent": 1
              },
              {
                "duration": "Weekly",
                "percent": 0.7
              },
              {
                "duration": "Daily",
                "percent": 0.85
              }
            ],
            "hardwares": [
              {
                "brand_name": "NVIDIA",
                "busy_percent": 0,
                "hardware_id": 1,
                "hardware_quantity": 1,
                "name": "NVIDIA GeForce RTX 3060",
                "type": "GPU"
              },
              {
                "brand_name": "NVIDIA",
                "busy_percent": 0,
                "hardware_id": 3,
                "hardware_quantity": 1,
                "name": "NVIDIA GeForce RTX 3090",
                "type": "GPU"
              },
              {
                "brand_name": "NVIDIA",
                "busy_percent": 0,
                "hardware_id": 2,
                "hardware_quantity": 1,
                "name": "NVIDIA GeForce RTX 3080",
                "type": "GPU"
              },
              {
                "brand_name": "AMD",
                "busy_percent": 0,
                "hardware_id": 4,
                "hardware_quantity": 1,
                "name": "AMD Epyc Milan",
                "type": "CPU"
              },
              {
                "brand_name": "AMD",
                "busy_percent": 0,
                "hardware_id": 5,
                "hardware_quantity": 1,
                "name": "AMD Epyc Rome",
                "type": "CPU"
              }
            ],
            "services": [
              {
                "description": "",
                "icon": "",
                "id": 1,
                "name": "KubeRay"
              }
            ]
          },
          "status": "succeeded"
        }
      },
      "GetCreateMegaClusterDataResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetCreateMegaClusterDataResponse",
        "example": {
          "data": {
            "connectivity_tier": 3,
            "security_soc2": false,
            "service_id": 3,
            "supplier_id": 1,
            "total_hardware_qty": 26
          },
          "status": "succeeded"
        }
      },
      "GetDailyFullStakeDeviceCountData": {
        "properties": {
          "daily_full_stake_device_count": {
            "items": {
              "$ref": "#/components/schemas/DailyFullStakeDeviceCount"
            },
            "type": "array",
            "title": "Daily Full Stake Device Count"
          },
          "hardware_multiplier_details": {
            "items": {
              "$ref": "#/components/schemas/HardwareMultiplierDetails"
            },
            "type": "array",
            "title": "Hardware Multiplier Details"
          }
        },
        "type": "object",
        "required": [
          "daily_full_stake_device_count",
          "hardware_multiplier_details"
        ],
        "title": "GetDailyFullStakeDeviceCountData"
      },
      "GetDailyFullStakeDeviceCountResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/GetDailyFullStakeDeviceCountData"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetDailyFullStakeDeviceCountResponse"
      },
      "GetDeviceByLocationIdResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceByLocationIdResponse",
        "example": {
          "data": [
            {
              "city": "CA, Toronto",
              "connected": false,
              "device_id": "ac10ff09-dee4-47b9-aedf-77a1d70eb0cc",
              "device_type": "gpu",
              "geo_coordinates": "52.0767,4.2986",
              "is_working": false,
              "operating_system": "Windows",
              "status": "terminated",
              "user_id": "205f5360-7cf6-476d-abae-42a1ea604705"
            },
            {
              "city": "CA, Toronto",
              "connected": false,
              "device_id": "585323b5-8b63-416c-9d14-4f4fda05d99e",
              "device_type": "gpu",
              "geo_coordinates": "52.0767,4.2986",
              "is_working": false,
              "operating_system": "Windows",
              "status": "down",
              "user_id": "1e21ff4d-cdcf-481c-8a56-c853bee7ec8a"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetDeviceByStatusResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceByStatusResponse",
        "example": {
          "data": {
            "devices": [
              {
                "brand_name": "NVIDIA",
                "city": "US, Washington",
                "connected": true,
                "device_id": "4da79ff1-058d-4d54-aa19-629b79a95176",
                "device_type": "gpu",
                "geo_coordinates": "47.6062,-122.3321",
                "hardware_name": "GeForce RTX 4090",
                "hardware_quantity": "10",
                "is_working": true,
                "operating_system": "Windows",
                "status": "up",
                "status_duration": "up for 2 days and 11 hours and 30 minutes",
                "user_id": "d0a70050-728c-4e08-9965-1fde2468124a"
              }
            ],
            "page": 1,
            "page_size": 10,
            "statuses": [
              "down",
              "up",
              "terminated"
            ],
            "total_devices": 285,
            "total_pages": 29
          },
          "status": "succeeded"
        }
      },
      "GetDeviceConnectedServicesResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceConnectedServicesResponse",
        "example": {
          "data": [
            {
              "description": "IO Native App",
              "icon": "https://www.google.com",
              "id": 1,
              "is_running": true,
              "name": "IO Native App",
              "status": "connected"
            },
            {
              "description": "pyTorch FSDP",
              "icon": "https://www.google.com",
              "id": 2,
              "is_running": false,
              "name": "pyTorch FSDP",
              "status": "connected"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetDeviceHistoricalEarningsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceHistoricalEarningsResponse",
        "example": {
          "data": {
            "device_id": "a8edc47b-116f-4909-838b-acdcf79f4854",
            "jobs": [
              {
                "compute_hours_hired": "1 Hrs 0 Mins",
                "compute_hours_served": "1 Hrs 0 Mins",
                "created_at": "2024-01-04 09:53:29",
                "earned": 1.66,
                "earning_claim_txid_url": "url",
                "end_time": "2024-01-04 10:53:27",
                "for": "0efa1cd9-3a35-4326-bb6f-832fd6c25ea5",
                "slashed": 0,
                "start_time": "2024-01-04 09:53:29",
                "status": "destroyed",
                "total_hire_rate": 1.66,
                "updated_at": "2024-01-04 10:53:27",
                "uptime_percent": 100,
                "verification_job": false
              }
            ],
            "page_no": 1,
            "page_size": 10,
            "total_jobs": 17,
            "total_pages": 2
          },
          "status": "succeeded"
        }
      },
      "GetDeviceNotificationsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceNotificationsResponse",
        "example": {
          "data": [
            {
              "created_at": "2023-08-29 19:06:40",
              "device_id": "c4ba4d4b-8762-4437-b82c-6f78a20a8cb5",
              "id": 1,
              "text": "down for 3 mins"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetDeviceSummaryResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceSummaryResponse",
        "example": {
          "data": {
            "connectivity_tier": 2,
            "device_id": "c4ba4d4b-8762-4437-b82c-6f78a20a8cb5",
            "down_percentage": 22,
            "download_speed_mbps": 67,
            "downtime_by_date": {
              "2023-08-25": {
                "downtime": 58411,
                "note": "down for 0 days and 16 hours and 13 minutes"
              },
              "2023-08-31": {
                "downtime": 86400,
                "note": "down for 1 days and 0 hours and 0 minutes"
              },
              "2023-09-01": {
                "downtime": 0,
                "note": "down for 0 days and 0 hours and 0 minutes"
              }
            },
            "reward_pool": "community",
            "total_compute_hours_served": 0,
            "total_download_traffic": 0,
            "total_earnings": 0,
            "total_jobs": 0,
            "total_slashed_earning": 0,
            "total_upload_traffic": 0,
            "upload_speed_mbps": 46,
            "value": 0.1
          },
          "status": "succeeded"
        }
      },
      "GetDevicesByCountriesData": {
        "properties": {
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "country_hardware_quantity": {
            "type": "integer",
            "title": "Country Hardware Quantity"
          },
          "country_gpu_count": {
            "type": "integer",
            "title": "Country Gpu Count"
          },
          "country_cpu_count": {
            "type": "integer",
            "title": "Country Cpu Count"
          }
        },
        "type": "object",
        "required": [
          "country_code",
          "country_hardware_quantity",
          "country_gpu_count",
          "country_cpu_count"
        ],
        "title": "GetDevicesByCountriesData"
      },
      "GetDevicesCountByCountriesResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/GetDevicesByCountriesData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetDevicesCountByCountriesResponse"
      },
      "GetHardwareByLocation": {
        "properties": {
          "hardware": {
            "items": {
              "$ref": "#/components/schemas/io_explorer__schemas__response__device__HardwareInfo"
            },
            "type": "array",
            "title": "Hardware"
          },
          "total_gpu": {
            "type": "integer",
            "title": "Total Gpu"
          },
          "total_cpu": {
            "type": "integer",
            "title": "Total Cpu"
          },
          "total_gpu_hired": {
            "type": "integer",
            "title": "Total Gpu Hired"
          },
          "total_gpu_idle": {
            "type": "integer",
            "title": "Total Gpu Idle"
          },
          "total_cpu_hired": {
            "type": "integer",
            "title": "Total Cpu Hired"
          },
          "total_cpu_idle": {
            "type": "integer",
            "title": "Total Cpu Idle"
          }
        },
        "type": "object",
        "required": [
          "hardware",
          "total_gpu",
          "total_cpu",
          "total_gpu_hired",
          "total_gpu_idle",
          "total_cpu_hired",
          "total_cpu_idle"
        ],
        "title": "GetHardwareByLocation"
      },
      "GetHardwareByLocationResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/GetHardwareByLocation"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetHardwareByLocationResponse"
      },
      "GetHardwarePriceResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetHardwarePriceResponse",
        "example": {
          "data": {
            "available_quantity": {
              "1": [
                1
              ],
              "2": [
                1,
                1
              ],
              "3": [
                1,
                1,
                1
              ]
            },
            "avg": 1.03138461538462,
            "qty": 3
          },
          "status": "succeeded"
        }
      },
      "GetHardwareSupplyResponse": {
        "properties": {
          "data": {
            "items": {},
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetHardwareSupplyResponse",
        "example": {
          "data": [
            {
              "hardware_id": 1,
              "quantity": 10,
              "quantity_available": 10
            },
            {
              "hardware_id": 2,
              "quantity": 110,
              "quantity_available": 55
            }
          ],
          "status": "succeeded"
        }
      },
      "GetHeadnodesAvailabilityResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetHeadnodesAvailabilityResponse",
        "example": {
          "data": {
            "no_of_headnodes": 10
          },
          "status": "succeeded"
        }
      },
      "GetInferenceByStatusResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetInferenceByStatusResponse",
        "example": {
          "data": [
            {
              "app_name": "bc8.ai",
              "brand_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
              "brand_name": "NVIDIA",
              "compute_duration": "4 seconds",
              "created_at": "2023-09-12 00:00:00",
              "hardware_name": "RTX A6000",
              "hardware_quantity": 1,
              "inference_id": "0b234ed1-db21-420a-b011-8861201391b8",
              "status": "computed"
            },
            {
              "app_name": "bc8.ai",
              "brand_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
              "brand_name": "NVIDIA",
              "compute_duration": "2 seconds",
              "created_at": "2023-09-12 00:00:00",
              "hardware_name": "RTX A6000",
              "hardware_quantity": 1,
              "inference_id": "0b234ed1-db21-420a-b011-8861201391b8",
              "status": "failed"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetInferenceDetailsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetInferenceDetailsResponse",
        "example": {
          "data": {
            "app_inference_price": 0.0001,
            "app_inference_txid_url": "https://explorer.antbit.io/earning/claim-taxid/123456789",
            "app_name": "bc8.ai",
            "cluster_id": "7ac26ed1-8e14-488a-b51b-c76b845e55db",
            "compute_cost": "null",
            "compute_cost_txid_url": "null",
            "compute_duration": "4 seconds",
            "created_at": "2023-10-30T22:10:50.392981",
            "inference_id": 1000000000001,
            "inference_verification_url": "https://explorer.antbit.io/earning/claim-taxid/123456789",
            "io_network_fee": 0.0001,
            "io_network_fee_txid_url": "https://explorer.antbit.io/earning/claim-taxid/123456789",
            "model_owner_royalty_fee": 0.0001,
            "model_owner_royalty_fee_txid_url": "https://explorer.antbit.io/earning/claim-taxid/123456789",
            "requested_by": "https://bc8.ai",
            "status": "computed",
            "supplier": {
              "busy_percent": 29,
              "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/io-net-logo-symbol-only-final.svg",
              "is_active": true,
              "name": "io.net"
            }
          },
          "status": "succeeded"
        }
      },
      "GetLocationsResponse": {
        "properties": {
          "data": {
            "items": {},
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetLocationsResponse",
        "example": {
          "data": [
            {
              "busy_percent": 489.0,
              "hardware_qty": 1,
              "iso2": "IS",
              "location_id": 1,
              "name": "Iceland"
            },
            {
              "busy_percent": 52.0,
              "hardware_qty": 23,
              "iso2": "IS",
              "location_id": 2,
              "name": "United States"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetMarketResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetMarketResponse",
        "example": {
          "data": [
            {
              "available": 8,
              "brand_name": "NVIDIA",
              "busy_percent": 0,
              "hardware_name": "NVIDIA GeForce RTX 3080",
              "hired": 0,
              "icon": "https://image.com",
              "id": 9,
              "idle": 8,
              "is_trending": true,
              "price": 0.45,
              "total": 8
            },
            {
              "available": 8,
              "brand_name": "NVIDIA",
              "busy_percent": 33,
              "hardware_name": "NVIDIA GeForce RTX 3090",
              "hired": 4,
              "icon": "https://image.com",
              "id": 10,
              "idle": 8,
              "is_trending": false,
              "price": 0.5,
              "total": 12
            },
            {
              "available": 7,
              "brand_name": "NVIDIA",
              "busy_percent": 0,
              "hardware_name": "NVIDIA GeForce RTX 3060",
              "hired": 0,
              "icon": "https://image.com",
              "id": 8,
              "idle": 7,
              "is_trending": true,
              "price": 0.4,
              "total": 7
            }
          ],
          "status": "succeeded"
        }
      },
      "GetMonthlyNetworkEarningsData": {
        "properties": {
          "month": {
            "type": "string",
            "title": "Month"
          },
          "monthly_earnings": {
            "type": "number",
            "title": "Monthly Earnings"
          }
        },
        "type": "object",
        "required": [
          "month",
          "monthly_earnings"
        ],
        "title": "GetMonthlyNetworkEarningsData"
      },
      "GetMonthlyNetworkEarningsResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/GetMonthlyNetworkEarningsData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetMonthlyNetworkEarningsResponse"
      },
      "GetNetworkAggregatedResponse": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "total_gpu": {
            "type": "integer",
            "title": "Total Gpu"
          },
          "hired_gpu": {
            "type": "integer",
            "title": "Hired Gpu"
          },
          "idle_gpu": {
            "type": "integer",
            "title": "Idle Gpu"
          },
          "total_cpu": {
            "type": "integer",
            "title": "Total Cpu"
          },
          "hired_cpu": {
            "type": "integer",
            "title": "Hired Cpu"
          },
          "idle_cpu": {
            "type": "integer",
            "title": "Idle Cpu"
          }
        },
        "type": "object",
        "required": [
          "total",
          "total_gpu",
          "hired_gpu",
          "idle_gpu",
          "total_cpu",
          "hired_cpu",
          "idle_cpu"
        ],
        "title": "GetNetworkAggregatedResponse"
      },
      "GetNetworkClustersInfoResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetNetworkClustersInfoResponse",
        "example": {
          "data": {
            "running_clusters": 0,
            "total_compute_hours_served": 0,
            "total_earnings": 2420
          },
          "status": "succeeded"
        }
      },
      "GetNetworkDevicesInfoResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetNetworkDevicesInfoResponse",
        "example": {
          "data": {
            "today_devices": 0,
            "today_earnings": 0,
            "total_compute_hours_served": 0,
            "total_devices": 133,
            "total_earnings": 0
          },
          "status": "succeeded"
        }
      },
      "GetNetworkInferenceResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetNetworkInferenceResponse",
        "example": {
          "data": {
            "total_inference_cost": 0,
            "total_inference_count": 0,
            "total_inferences_today": 0,
            "total_inferences_today_cost": 133
          },
          "status": "succeeded"
        }
      },
      "GetNetworkInfo": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetNetworkInfo",
        "example": {
          "data": [
            {
              "active_cpu": 2,
              "active_gpu": 4,
              "busy_percent": 17,
              "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/io-net-logo-symbol-only-final.svg",
              "name": "io.net",
              "total_cpu": 5,
              "total_gpu": 28
            },
            {
              "active_cpu": 0,
              "active_gpu": 0,
              "busy_percent": 100,
              "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/filecoin.svg",
              "name": "Filecoin",
              "total_cpu": 5,
              "total_gpu": 28
            },
            {
              "active_cpu": 4,
              "active_gpu": 24,
              "busy_percent": 21,
              "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/render.svg",
              "name": "Render Network",
              "total_cpu": 5,
              "total_gpu": 28
            }
          ],
          "status": "successded"
        }
      },
      "GetNetworkYearlyEarningsData": {
        "properties": {
          "date_month": {
            "type": "string",
            "format": "date",
            "title": "Date Month"
          },
          "daily_earnings": {
            "type": "number",
            "title": "Daily Earnings"
          },
          "total_earnings": {
            "type": "number",
            "title": "Total Earnings"
          }
        },
        "type": "object",
        "required": [
          "date_month",
          "daily_earnings",
          "total_earnings"
        ],
        "title": "GetNetworkYearlyEarningsData"
      },
      "GetNetworkYearlyEarningsResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/GetNetworkYearlyEarningsData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetNetworkYearlyEarningsResponse"
      },
      "GetNotificationsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetNotificationsResponse",
        "example": {
          "data": [
            {
              "context": "",
              "created_at": "2023-08-29 19:06:40",
              "id": "c4ba4d4b-8762-4437-b82c-000000000000",
              "messsage": "down for 3 mins",
              "obj_id": "c4ba4d4b-8762-4437-b82c-000000000002",
              "obj_type": "DEVICE",
              "priority": "ERROR",
              "seen_at": "",
              "source": "WORKER",
              "topic": "DEVICE_WENT_DOWN",
              "user_id": "c4ba4d4b-8762-4437-b82c-000000000001"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetPrivateNodePoolsResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/NodePoolData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetPrivateNodePoolsResponse"
      },
      "GetPublicStakingMetricsData": {
        "properties": {
          "net_staked_amount": {
            "type": "number",
            "title": "Net Staked Amount"
          },
          "net_staked_amount_in_usd": {
            "type": "number",
            "title": "Net Staked Amount In Usd"
          },
          "gross_staked_amount": {
            "type": "number",
            "title": "Gross Staked Amount"
          },
          "net_staked_amount_in_cooldown": {
            "type": "number",
            "title": "Net Staked Amount In Cooldown"
          },
          "card_count_with_full_stake": {
            "type": "number",
            "title": "Card Count With Full Stake"
          },
          "daily_net_staked_amount": {
            "items": {
              "$ref": "#/components/schemas/io_explorer__schemas__response__staking__DailyNetStakedData"
            },
            "type": "array",
            "title": "Daily Net Staked Amount"
          },
          "daily_gross_staked_amount": {
            "items": {
              "$ref": "#/components/schemas/DailyGrossStakedData"
            },
            "type": "array",
            "title": "Daily Gross Staked Amount"
          },
          "daily_unique_stakers": {
            "items": {
              "$ref": "#/components/schemas/DailyUniqueStakingData"
            },
            "type": "array",
            "title": "Daily Unique Stakers"
          },
          "monthly_staked_amount": {
            "items": {
              "$ref": "#/components/schemas/MonthlyStakedAmountData"
            },
            "type": "array",
            "title": "Monthly Staked Amount"
          },
          "daily_staked_amount": {
            "items": {
              "$ref": "#/components/schemas/DailyStakedAmountData"
            },
            "type": "array",
            "title": "Daily Staked Amount"
          }
        },
        "type": "object",
        "required": [
          "net_staked_amount",
          "net_staked_amount_in_usd",
          "gross_staked_amount",
          "net_staked_amount_in_cooldown",
          "card_count_with_full_stake",
          "daily_net_staked_amount",
          "daily_gross_staked_amount",
          "daily_unique_stakers",
          "monthly_staked_amount",
          "daily_staked_amount"
        ],
        "title": "GetPublicStakingMetricsData"
      },
      "GetPublicStakingMetricsResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/GetPublicStakingMetricsData"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetPublicStakingMetricsResponse"
      },
      "GetStakingCoStakingMetricsData": {
        "properties": {
          "net_staked_amount": {
            "type": "number",
            "title": "Net Staked Amount"
          },
          "unique_participating_device_count": {
            "type": "integer",
            "title": "Unique Participating Device Count"
          }
        },
        "type": "object",
        "required": [
          "net_staked_amount",
          "unique_participating_device_count"
        ],
        "title": "GetStakingCoStakingMetricsData"
      },
      "GetStakingCoStakingMetricsResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/GetStakingCoStakingMetricsData"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetStakingCoStakingMetricsResponse"
      },
      "GetStakingSafetyModuleMetricsData": {
        "properties": {
          "net_staked_amount": {
            "type": "number",
            "title": "Net Staked Amount"
          },
          "net_staked_amount_in_usd": {
            "type": "number",
            "title": "Net Staked Amount In Usd"
          },
          "unique_user_account_count": {
            "type": "integer",
            "title": "Unique User Account Count"
          },
          "daily_net_staked_amount": {
            "items": {
              "$ref": "#/components/schemas/io_explorer__schemas__response__safety_module__DailyNetStakedData"
            },
            "type": "array",
            "title": "Daily Net Staked Amount"
          },
          "daily_active_stake_user": {
            "items": {
              "$ref": "#/components/schemas/DailyActiveStakeUserData"
            },
            "type": "array",
            "title": "Daily Active Stake User"
          }
        },
        "type": "object",
        "required": [
          "net_staked_amount",
          "net_staked_amount_in_usd",
          "unique_user_account_count",
          "daily_net_staked_amount",
          "daily_active_stake_user"
        ],
        "title": "GetStakingSafetyModuleMetricsData"
      },
      "GetStakingSafetyModuleMetricsResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/GetStakingSafetyModuleMetricsData"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetStakingSafetyModuleMetricsResponse"
      },
      "GetTransactionsActivityResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/io_explorer__schemas__response__transactions__GetTransactionsActivityData__2"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetTransactionsActivityResponse"
      },
      "GetTransactionsListData": {
        "properties": {
          "transaction_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Transaction Types"
          },
          "transactions": {
            "items": {
              "$ref": "#/components/schemas/TransactionData"
            },
            "type": "array",
            "title": "Transactions"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results"
          }
        },
        "type": "object",
        "required": [
          "transaction_types",
          "transactions",
          "total_results"
        ],
        "title": "GetTransactionsListData"
      },
      "GetTransactionsListResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/GetTransactionsListData"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetTransactionsListResponse"
      },
      "GetUserDevicesResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetUserDevicesResponse",
        "example": {
          "data": [
            {
              "brand_icon": "http://localhost:8000/static/brand_icons/centos.png",
              "device_id": 75,
              "device_name": "device75",
              "hardware": "A2",
              "hardware_quantity": 2,
              "operating_system": "Linux",
              "status": "up",
              "status_duration": "0:00:00"
            },
            {
              "brand_icon": "http://localhost:8000/static/brand_icons/centos.png",
              "device_id": 74,
              "device_name": "device74",
              "hardware": "A1",
              "hardware_quantity": 2,
              "operating_system": "Linux",
              "status": "up",
              "status_duration": "1 day, 2 hours, 3 minutes"
            }
          ],
          "status": "succeeded"
        }
      },
      "GetUserEarningsRewardsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetUserEarningsRewardsResponse",
        "example": {
          "data": {
            "jobs": [
              {
                "brand_name": "NVIDIA",
                "compute_hours_hired": 1,
                "compute_hours_served": 0,
                "device_id": "19e3cde8-c4de-40d8-b6af-97c965d7437d",
                "earned": 0,
                "end_time": "2023-09-13 03:04:33",
                "for_id": "0ee19719-7e08-46ae-9ebc-93608a799610",
                "hardware_name": "RTX 3060 Mobile",
                "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                "slashed": 0,
                "start_time": "2023-09-13 03:04:33",
                "status": "pending",
                "total_hire_rate": 4.08,
                "verification_job": false
              },
              {
                "brand_name": "NVIDIA",
                "compute_hours_hired": 100,
                "compute_hours_served": 0,
                "device_id": "19e3cde8-c4de-40d8-b6af-97c965d7437d",
                "earned": 0,
                "end_time": "2023-09-13 03:04:33",
                "for_id": "51bc2558-fffb-42ef-a6a4-a2a7d4adef02",
                "hardware_name": "RTX 3060 Mobile",
                "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                "slashed": 0,
                "start_time": "2023-09-13 03:04:33",
                "status": "pending",
                "total_hire_rate": 408,
                "verification_job": false
              },
              {
                "brand_name": "NVIDIA",
                "compute_hours_hired": 68,
                "compute_hours_served": 0,
                "device_id": "19e3cde8-c4de-40d8-b6af-97c965d7437d",
                "earned": 0,
                "end_time": "2023-09-13 03:04:33",
                "for_id": "da095562-0e4e-4347-a4e9-98e6e46fe74d",
                "hardware_name": "RTX 3060 Mobile",
                "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
                "slashed": 0,
                "start_time": "2023-09-13 03:04:33",
                "status": "pending",
                "total_hire_rate": 277.44,
                "verification_job": false
              }
            ],
            "total_compute_hours_served": 0,
            "total_earned": 0,
            "total_jobs": 3,
            "total_slashed": 0
          },
          "status": "succeeded"
        }
      },
      "GetUserNotification": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetUserNotification",
        "example": {
          "data": [
            {
              "created_at": "2023-10-09 19:10:48",
              "device_id": "null",
              "id": 3,
              "seen": true,
              "tagged": "user_notification",
              "text": "Notification text 1",
              "type": "info",
              "user_id": "4b3b2b1b-0b4b-4b3b-8b3b-0b4b3b2b1b4b"
            },
            {
              "created_at": "2023-10-09 19:10:48",
              "device_id": "null",
              "id": 4,
              "seen": true,
              "tagged": "user_notification",
              "text": "Notification text 2",
              "type": "info",
              "user_id": "4b3b2b1b-0b4b-4b3b-8b3b-0b4b3b2b1b4b"
            },
            {
              "created_at": "2023-10-09 19:10:36",
              "device_id": "b2a7b1b4-0b4b-4b3b-8b3b-0b4b3b2b1b4b",
              "id": 2,
              "seen": true,
              "tagged": "device_notification",
              "text": "Notification text 1",
              "type": "error",
              "user_id": "4b3b2b1b-0b4b-4b3b-8b3b-0b4b3b2b1b4b"
            }
          ],
          "status": "succeded"
        }
      },
      "GetUserSlaDetailsResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/GetClusterByStatusData"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "GetUserSlaDetailsResponse"
      },
      "GetVmJobData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/VmJobsData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetVmJobData"
      },
      "GetVmaasPriceData": {
        "properties": {
          "replica_count": {
            "type": "integer",
            "title": "Replica Count"
          },
          "gpus_per_vm": {
            "type": "integer",
            "title": "Gpus Per Vm"
          },
          "available_replica_count": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Available Replica Count"
          },
          "discount": {
            "type": "number",
            "title": "Discount"
          },
          "ionet_fee": {
            "type": "number",
            "title": "Ionet Fee"
          },
          "ionet_fee_percent": {
            "type": "number",
            "title": "Ionet Fee Percent"
          },
          "currency_conversion_fee": {
            "type": "number",
            "title": "Currency Conversion Fee"
          },
          "currency_conversion_fee_percent": {
            "type": "number",
            "title": "Currency Conversion Fee Percent"
          },
          "total_cost_usdc": {
            "type": "number",
            "title": "Total Cost Usdc"
          }
        },
        "type": "object",
        "required": [
          "replica_count",
          "gpus_per_vm",
          "available_replica_count",
          "discount",
          "ionet_fee",
          "ionet_fee_percent",
          "currency_conversion_fee",
          "currency_conversion_fee_percent",
          "total_cost_usdc"
        ],
        "title": "GetVmaasPriceData"
      },
      "GetVmaasPriceResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/GetVmaasPriceData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetVmaasPriceResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HardwareConfiguration": {
        "properties": {
          "hardware_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hardware Names",
            "description": "List of hardware names"
          },
          "regions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Regions",
            "description": "List of regions"
          },
          "connectivity_tiers": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Connectivity Tiers",
            "description": "List of connectivity tiers"
          },
          "num_gpus": {
            "type": "integer",
            "title": "Num Gpus",
            "description": "Number of GPUs required"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "hardware_names",
          "regions",
          "connectivity_tiers",
          "num_gpus"
        ],
        "title": "HardwareConfiguration"
      },
      "HardwareMultiplierDetails": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "multiplier": {
            "type": "number",
            "title": "Multiplier"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "multiplier",
          "type"
        ],
        "title": "HardwareMultiplierDetails"
      },
      "HardwareRequestCreate": {
        "properties": {
          "configuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HardwareConfiguration"
              }
            ],
            "description": "Hardware configuration details"
          },
          "preferred_contact_email": {
            "type": "string",
            "title": "Preferred Contact Email",
            "description": "Preferred Contact email address"
          },
          "telegram_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telegram Username",
            "description": "Telegram username"
          },
          "required_by_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required By Date",
            "description": "Date by which the hardware is required"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "configuration",
          "preferred_contact_email"
        ],
        "title": "HardwareRequestCreate"
      },
      "HardwareRequestResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "HardwareRequestResponse"
      },
      "HeadnodeDevicesResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "HeadnodeDevicesResponse",
        "example": {
          "data": [
            {
              "brand_icon": "url",
              "brand_name": "NVIDIA",
              "device_id": "599ef4af-7fe6-44b5-aba3-25899bde2ab6",
              "hardware_name": "RTX A6000",
              "price": 0.85
            }
          ],
          "status": "succeeded"
        }
      },
      "HighLevelExemptionRequest": {
        "properties": {
          "entity_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Entity Ids"
          },
          "entity_type": {
            "type": "string",
            "title": "Entity Type",
            "description": "Type of entity ('user' or 'device')"
          },
          "technical_exempt": {
            "type": "boolean",
            "title": "Technical Exempt",
            "default": false
          },
          "staking_exempt": {
            "type": "boolean",
            "title": "Staking Exempt",
            "default": false
          },
          "account_exempt": {
            "type": "boolean",
            "title": "Account Exempt",
            "default": false
          },
          "is_permanent": {
            "type": "boolean",
            "title": "Is Permanent",
            "default": false
          },
          "valid_for_interval": {
            "type": "string",
            "title": "Valid For Interval",
            "description": "Interval for which exemption is valid",
            "default": "30 days"
          },
          "exempted_by_team": {
            "type": "string",
            "title": "Exempted By Team"
          },
          "exempted_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exempted By"
          },
          "reason_internal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason Internal"
          }
        },
        "type": "object",
        "required": [
          "entity_ids",
          "entity_type",
          "exempted_by_team"
        ],
        "title": "HighLevelExemptionRequest",
        "description": "Request schema for creating a high-level exemption request"
      },
      "IOWorkerBlockRecord": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkerStatus"
              },
              {
                "type": "null"
              }
            ],
            "example": "Success"
          },
          "time_and_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time And Date",
            "example": "2024-03-18T22:00:00Z"
          },
          "block_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id",
            "example": "2024-05-13T15:00:00"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "example": "bedefd6b-44e8-4855-9692-f216e34a8d65"
          },
          "connectivity_tier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier",
            "example": "Ultra High Speed"
          },
          "processor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processor",
            "example": "NVIDIA A100 PCIE-80GB"
          },
          "processor_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processor Quantity",
            "example": 10
          },
          "pow": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pow",
            "example": "Success"
          },
          "potl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Potl",
            "example": "Exempt"
          },
          "uptime_in_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uptime In Minutes",
            "example": 50
          },
          "total_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Score",
            "example": 12032.5
          },
          "normalized_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Normalized Score",
            "example": 327.54
          },
          "rewarded": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewarded",
            "example": 1.401
          },
          "brand_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand Name",
            "example": "NVIDIA"
          },
          "brand_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand Id",
            "example": 2
          },
          "pow_success_list": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pow Success List",
            "examples": [
              true,
              false,
              false,
              true,
              true
            ]
          },
          "potl_success_list": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/POTLEnum"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Potl Success List",
            "examples": [
              true,
              false,
              false,
              true,
              true
            ]
          },
          "is_baremetal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Baremetal",
            "default": false
          },
          "is_k8s": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is K8S",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "pow_success_list",
          "potl_success_list"
        ],
        "title": "IOWorkerBlockRecord"
      },
      "IOWorkerMaskedBlockRecord": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkerStatus"
              },
              {
                "type": "null"
              }
            ],
            "example": "Success"
          },
          "time_and_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time And Date",
            "example": "2024-03-18T22:00:00Z"
          },
          "block_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id",
            "example": "2024-05-13T15:00:00"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "examples": [
              "bedefd6b-44e8-4855-9692-f216e34a****"
            ]
          },
          "connectivity_tier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier",
            "example": "Ultra High Speed"
          },
          "processor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processor",
            "example": "NVIDIA A100 PCIE-80GB"
          },
          "processor_quantity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processor Quantity",
            "example": 10
          },
          "pow": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pow",
            "example": "Success"
          },
          "potl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Potl",
            "example": "Exempt"
          },
          "uptime_in_minutes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uptime In Minutes",
            "example": 50
          },
          "total_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Score",
            "example": 12032.5
          },
          "normalized_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Normalized Score",
            "example": 327.54
          },
          "rewarded": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewarded",
            "example": 1.401
          },
          "brand_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand Name",
            "example": "NVIDIA"
          },
          "brand_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand Id",
            "example": 2
          },
          "pow_success_list": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pow Success List",
            "examples": [
              true,
              false,
              false,
              true,
              true
            ]
          },
          "potl_success_list": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/POTLEnum"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Potl Success List",
            "examples": [
              true,
              false,
              false,
              true,
              true
            ]
          },
          "is_baremetal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Baremetal",
            "default": false
          },
          "is_k8s": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is K8S",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "pow_success_list",
          "potl_success_list"
        ],
        "title": "IOWorkerMaskedBlockRecord"
      },
      "InsertInferenceDetailsRequest": {
        "properties": {
          "compute_duration": {
            "type": "string",
            "title": "Compute Duration"
          },
          "app_name": {
            "type": "string",
            "title": "App Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "requested_by": {
            "type": "string",
            "title": "Requested By"
          },
          "inference_verification_url": {
            "anyOf": [
              {
                "const": "Processing"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              }
            ],
            "title": "Inference Verification Url"
          },
          "app_inference_price": {
            "type": "number",
            "title": "App Inference Price"
          },
          "app_inference_txid_url": {
            "type": "string",
            "title": "App Inference Txid Url"
          },
          "owner_of_model_royalty_fee": {
            "type": "number",
            "title": "Owner Of Model Royalty Fee"
          },
          "owner_of_model_royalty_fee_txid_url": {
            "type": "string",
            "title": "Owner Of Model Royalty Fee Txid Url"
          },
          "io_network_fee": {
            "type": "number",
            "title": "Io Network Fee"
          },
          "io_network_fee_txid_url": {
            "type": "string",
            "title": "Io Network Fee Txid Url"
          },
          "compute_cost": {
            "type": "number",
            "title": "Compute Cost"
          },
          "compute_cost_txid_url": {
            "type": "string",
            "title": "Compute Cost Txid Url"
          },
          "cluster_id": {
            "type": "string",
            "title": "Cluster Id"
          }
        },
        "type": "object",
        "required": [
          "compute_duration",
          "app_name",
          "status",
          "requested_by",
          "inference_verification_url",
          "app_inference_price",
          "app_inference_txid_url",
          "owner_of_model_royalty_fee",
          "owner_of_model_royalty_fee_txid_url",
          "io_network_fee",
          "io_network_fee_txid_url",
          "compute_cost",
          "compute_cost_txid_url",
          "cluster_id"
        ],
        "title": "InsertInferenceDetailsRequest"
      },
      "InternalInventoryDashboardData": {
        "properties": {
          "hardware_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hardware Name"
          },
          "num_of_gpus": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Of Gpus"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "connectivity_tier": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          },
          "inventory_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InventoryType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Provider of the inventory"
          }
        },
        "type": "object",
        "title": "InternalInventoryDashboardData"
      },
      "InternalInventoryDashboardResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "hardware_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hardware Names"
          },
          "hardware_quantities": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Hardware Quantities"
          },
          "connectivity_tiers": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tiers"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationMetadata"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/InternalInventoryDashboardData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "hardware_names",
          "hardware_quantities",
          "pagination",
          "data"
        ],
        "title": "InternalInventoryDashboardResponse",
        "examples": [
          {
            "connectivity_tiers": [
              3,
              4
            ],
            "data": [
              {
                "connectivity_tier": [
                  3,
                  4
                ],
                "device_type": "GPU",
                "hardware_name": "NVIDIA GeForce RTX 4090",
                "inventory_type": "ionet",
                "num_of_gpus": 24,
                "region": "EMEA"
              }
            ],
            "hardware_names": [
              "NVIDIA GeForce RTX 4090",
              "NVIDIA RTX A6000"
            ],
            "hardware_quantities": [
              1,
              2,
              4,
              8
            ],
            "pagination": {
              "current_page": 1,
              "items_per_page": 20,
              "total_items": 45,
              "total_pages": 3
            },
            "status": "succeeded"
          }
        ]
      },
      "InventoryDashboardData": {
        "properties": {
          "hardware_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hardware Name"
          },
          "num_of_gpus": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Of Gpus"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "connectivity_tier": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier"
          },
          "device_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Type"
          }
        },
        "type": "object",
        "title": "InventoryDashboardData"
      },
      "InventoryDashboardResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "hardware_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Hardware Names"
          },
          "hardware_quantities": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Hardware Quantities"
          },
          "connectivity_tiers": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tiers"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationMetadata"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/InventoryDashboardData"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "hardware_names",
          "hardware_quantities",
          "pagination",
          "data"
        ],
        "title": "InventoryDashboardResponse",
        "examples": [
          {
            "connectivity_tiers": [
              3,
              4
            ],
            "data": [
              {
                "connectivity_tier": [
                  3,
                  4
                ],
                "device_type": "GPU",
                "hardware_name": "NVIDIA GeForce RTX 4090",
                "num_of_gpus": 24,
                "region": "EMEA"
              }
            ],
            "hardware_names": [
              "NVIDIA GeForce RTX 4090",
              "NVIDIA RTX A6000"
            ],
            "hardware_quantities": [
              1,
              2,
              4,
              8
            ],
            "pagination": {
              "current_page": 1,
              "items_per_page": 20,
              "total_items": 45,
              "total_pages": 3
            },
            "status": "succeeded"
          }
        ]
      },
      "InventoryType": {
        "type": "string",
        "enum": [
          "ionet",
          "hyperstack",
          "genesis",
          "boostrun",
          "hydrahost",
          "massedcompute"
        ],
        "title": "InventoryType"
      },
      "KubernetesDeployClusterService": {
        "properties": {
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_qty": {
            "type": "integer",
            "minimum": 4.0,
            "title": "Hardware Qty"
          },
          "location_id": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Location Id"
          },
          "connectivity_tier": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClusterCurrency"
              },
              {
                "type": "null"
              }
            ],
            "default": "usdc"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              }
            ]
          },
          "transaction": {
            "type": "string",
            "title": "Transaction"
          },
          "additional_services": {
            "$ref": "#/components/schemas/AdditionalK8SServices"
          },
          "payment_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "payment"
          }
        },
        "type": "object",
        "required": [
          "hardware_id",
          "hardware_qty",
          "location_id",
          "resource_private_name",
          "transaction"
        ],
        "title": "KubernetesDeployClusterService"
      },
      "KubernetesResourceStatus": {
        "type": "string",
        "enum": [
          "running",
          "completed",
          "unpaid",
          "failed",
          "deployment requested",
          "deploying",
          "termination requested",
          "terminated",
          "destroyed"
        ],
        "title": "KubernetesResourceStatus"
      },
      "ListKeysResponse": {
        "properties": {
          "keys": {
            "items": {
              "$ref": "#/components/schemas/SingleApiKey"
            },
            "type": "array",
            "title": "Keys"
          }
        },
        "type": "object",
        "required": [
          "keys"
        ],
        "title": "ListKeysResponse"
      },
      "LocationData": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "iso2": {
            "type": "string",
            "title": "Iso2"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "iso2",
          "name"
        ],
        "title": "LocationData"
      },
      "LogStream": {
        "type": "string",
        "enum": [
          "stdout",
          "stderr"
        ],
        "title": "LogStream"
      },
      "LowLevelDeviceExemptionRequest": {
        "properties": {
          "device_id": {
            "type": "string",
            "format": "uuid",
            "title": "Device Id"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "exempted_by": {
            "type": "string",
            "title": "Exempted By"
          },
          "block_exemption": {
            "type": "boolean",
            "title": "Block Exemption",
            "default": false
          },
          "min_uptime_exempt": {
            "type": "boolean",
            "title": "Min Uptime Exempt",
            "default": false
          },
          "pow_no_tasks_exempt": {
            "type": "boolean",
            "title": "Pow No Tasks Exempt",
            "default": false
          },
          "pow_failed_exempt": {
            "type": "boolean",
            "title": "Pow Failed Exempt",
            "default": false
          },
          "reqc_exempt": {
            "type": "boolean",
            "title": "Reqc Exempt",
            "default": true
          },
          "connectivity_tier_exempt": {
            "type": "boolean",
            "title": "Connectivity Tier Exempt",
            "default": true
          },
          "staking_exempt": {
            "type": "boolean",
            "title": "Staking Exempt",
            "default": false
          },
          "status_exempt": {
            "type": "boolean",
            "title": "Status Exempt",
            "default": true
          },
          "window_start": {
            "type": "string",
            "format": "date-time",
            "title": "Window Start"
          },
          "window_end": {
            "type": "string",
            "format": "date-time",
            "title": "Window End"
          },
          "reason_internal": {
            "type": "string",
            "title": "Reason Internal"
          },
          "exempt_text_for_public": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exempt Text For Public"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "exempted_by",
          "window_start",
          "window_end",
          "reason_internal"
        ],
        "title": "LowLevelDeviceExemptionRequest",
        "description": "Request schema for creating a low-level device exemption"
      },
      "LowLevelUserExemptionRequest": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "exempted_by": {
            "type": "string",
            "title": "Exempted By"
          },
          "reason_internal": {
            "type": "string",
            "title": "Reason Internal"
          },
          "sla_exempt": {
            "type": "boolean",
            "title": "Sla Exempt",
            "default": false
          },
          "user_wallets_exempt": {
            "type": "boolean",
            "title": "User Wallets Exempt",
            "default": false
          },
          "spl_address_exempt": {
            "type": "boolean",
            "title": "Spl Address Exempt",
            "default": false
          },
          "window_start": {
            "type": "string",
            "format": "date-time",
            "title": "Window Start"
          },
          "window_end": {
            "type": "string",
            "format": "date-time",
            "title": "Window End"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "exempted_by",
          "reason_internal",
          "window_start",
          "window_end"
        ],
        "title": "LowLevelUserExemptionRequest",
        "description": "Request schema for creating a low-level user exemption"
      },
      "ManagedBaremetalCreationRequest": {
        "properties": {
          "bm_creation_request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bm Creation Request Id"
          },
          "device_ids": {
            "type": "string",
            "title": "Device Ids"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              }
            ],
            "default": "hourly"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "resource_owner_email": {
            "type": "string",
            "title": "Resource Owner Email"
          },
          "resource_owner_wallet_address": {
            "type": "string",
            "title": "Resource Owner Wallet Address"
          },
          "hire_rate": {
            "type": "number",
            "title": "Hire Rate"
          },
          "connectivity_tier": {
            "type": "integer",
            "title": "Connectivity Tier",
            "default": 4
          }
        },
        "type": "object",
        "required": [
          "bm_creation_request_id",
          "device_ids",
          "duration_qty",
          "resource_private_name",
          "resource_id",
          "resource_owner_email",
          "resource_owner_wallet_address",
          "hire_rate"
        ],
        "title": "ManagedBaremetalCreationRequest"
      },
      "ManagedBaremetalExtensionRequest": {
        "properties": {
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "$ref": "#/components/schemas/DurationType"
          }
        },
        "type": "object",
        "required": [
          "resource_id",
          "duration_qty",
          "duration_type"
        ],
        "title": "ManagedBaremetalExtensionRequest"
      },
      "ManagedBaremetalInitialRequest": {
        "properties": {
          "client_email": {
            "type": "string",
            "title": "Client Email"
          },
          "total_amount": {
            "type": "number",
            "title": "Total Amount"
          },
          "currency": {
            "$ref": "#/components/schemas/ClusterCurrency"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "$ref": "#/components/schemas/DurationType"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_qty": {
            "type": "integer",
            "title": "Hardware Qty"
          },
          "device_count": {
            "type": "integer",
            "title": "Device Count"
          },
          "actual_invoice_id": {
            "type": "string",
            "title": "Actual Invoice Id"
          },
          "user_wallet": {
            "type": "string",
            "title": "User Wallet"
          },
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "client_email",
          "total_amount",
          "currency",
          "duration_qty",
          "duration_type",
          "hardware_id",
          "hardware_qty",
          "device_count",
          "actual_invoice_id",
          "user_wallet",
          "resource_id"
        ],
        "title": "ManagedBaremetalInitialRequest"
      },
      "ManagedBaremetalRequestReviewStatus": {
        "type": "string",
        "enum": [
          "approved",
          "rejected"
        ],
        "title": "ManagedBaremetalRequestReviewStatus"
      },
      "ManagedBaremetalReviewRequest": {
        "properties": {
          "bm_creation_request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Bm Creation Request Id"
          },
          "review_status": {
            "$ref": "#/components/schemas/ManagedBaremetalRequestReviewStatus"
          },
          "review_status_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Status Reason"
          }
        },
        "type": "object",
        "required": [
          "bm_creation_request_id",
          "review_status",
          "review_status_reason"
        ],
        "title": "ManagedBaremetalReviewRequest"
      },
      "ManagedBaremetalTerminationRequest": {
        "properties": {
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "resource_id"
        ],
        "title": "ManagedBaremetalTerminationRequest"
      },
      "MonthlyStakedAmountData": {
        "properties": {
          "month": {
            "type": "string",
            "title": "Month"
          },
          "total_staked_per_month": {
            "type": "number",
            "title": "Total Staked Per Month"
          }
        },
        "type": "object",
        "required": [
          "month",
          "total_staked_per_month"
        ],
        "title": "MonthlyStakedAmountData"
      },
      "Network": {
        "type": "string",
        "enum": [
          "solana",
          "stripe"
        ],
        "title": "Network"
      },
      "NetworkProtocol": {
        "type": "string",
        "enum": [
          "tcp",
          "udp"
        ],
        "title": "NetworkProtocol"
      },
      "NetworkService": {
        "properties": {
          "port": {
            "type": "integer",
            "maximum": 65535.0,
            "minimum": 1.0,
            "title": "Port"
          },
          "protocol": {
            "$ref": "#/components/schemas/NetworkProtocol"
          },
          "whitelist": {
            "items": {
              "type": "string",
              "format": "ipvanynetwork"
            },
            "type": "array",
            "minItems": 1,
            "title": "Whitelist",
            "description": "List of IP networks to allow access from. 0.0.0.0/0 for whitelisting all the IPs"
          }
        },
        "type": "object",
        "required": [
          "port",
          "protocol",
          "whitelist"
        ],
        "title": "NetworkService"
      },
      "NetworkServiceResponse": {
        "properties": {
          "port": {
            "type": "integer",
            "title": "Port"
          },
          "protocol": {
            "$ref": "#/components/schemas/NetworkProtocol"
          },
          "whitelist": {
            "items": {
              "type": "string",
              "format": "ipvanynetwork"
            },
            "type": "array",
            "title": "Whitelist"
          },
          "public_port": {
            "type": "integer",
            "title": "Public Port"
          },
          "public_ip": {
            "type": "string",
            "title": "Public Ip"
          },
          "srv_record": {
            "type": "string",
            "title": "Srv Record"
          }
        },
        "type": "object",
        "required": [
          "port",
          "protocol",
          "whitelist",
          "public_port",
          "public_ip",
          "srv_record"
        ],
        "title": "NetworkServiceResponse"
      },
      "NodePoolData": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "NodePoolData"
      },
      "Offer": {
        "properties": {
          "co_staking_portion": {
            "type": "number",
            "maximum": 50.0,
            "exclusiveMinimum": 0.0,
            "title": "Co Staking Portion"
          },
          "user_account": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Account"
          },
          "block_rewards_percent": {
            "type": "number",
            "maximum": 100.0,
            "exclusiveMinimum": 0.0,
            "title": "Block Rewards Percent"
          },
          "serialize_transaction": {
            "type": "string",
            "title": "Serialize Transaction"
          }
        },
        "type": "object",
        "required": [
          "co_staking_portion",
          "block_rewards_percent",
          "serialize_transaction"
        ],
        "title": "Offer"
      },
      "OfferAction": {
        "properties": {
          "costaker_account": {
            "type": "string",
            "title": "Costaker Account"
          },
          "serialize_transaction": {
            "type": "string",
            "title": "Serialize Transaction"
          }
        },
        "type": "object",
        "required": [
          "costaker_account",
          "serialize_transaction"
        ],
        "title": "OfferAction"
      },
      "OfferCancel": {
        "properties": {
          "serialize_transaction": {
            "type": "string",
            "title": "Serialize Transaction"
          }
        },
        "type": "object",
        "required": [
          "serialize_transaction"
        ],
        "title": "OfferCancel"
      },
      "POTLEnum": {
        "type": "boolean",
        "enum": [
          true,
          false
        ],
        "title": "POTLEnum"
      },
      "Package": {
        "type": "string",
        "enum": [
          "ray",
          "ray-gpu",
          "ray-arm"
        ],
        "title": "Package"
      },
      "PaginationMetadata": {
        "properties": {
          "total_items": {
            "type": "integer",
            "title": "Total Items"
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages"
          },
          "current_page": {
            "type": "integer",
            "title": "Current Page"
          },
          "items_per_page": {
            "type": "integer",
            "title": "Items Per Page"
          }
        },
        "type": "object",
        "required": [
          "total_items",
          "total_pages",
          "current_page",
          "items_per_page"
        ],
        "title": "PaginationMetadata"
      },
      "PaymentLinkRequest": {
        "properties": {
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "payment_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "payment"
          }
        },
        "type": "object",
        "title": "PaymentLinkRequest"
      },
      "PaymentLinkResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "PaymentLinkResponse",
        "example": {
          "data": "https://payment.io.net/1234",
          "status": "succeeded"
        }
      },
      "PaymentSource": {
        "type": "string",
        "enum": [
          "credits",
          "payment"
        ],
        "title": "PaymentSource"
      },
      "PlatformType": {
        "type": "string",
        "enum": [
          "cloud",
          "worker"
        ],
        "title": "PlatformType"
      },
      "Pow": {
        "properties": {
          "proof_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Proof Id",
            "example": "bedefd6b-44e8-4855-9692-f216e34a8d65"
          },
          "device_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id",
            "example": "bedefd6b-44e8-4855-9692-f216e34a8d65"
          },
          "block_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id",
            "example": "2024-03-18T22:00:00"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PowStatusEnum"
              },
              {
                "type": "null"
              }
            ],
            "example": "Success"
          },
          "time_and_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time And Date",
            "example": "2024-03-18T22:00:00"
          },
          "complexity": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complexity",
            "example": 98
          },
          "hash_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hash Rate",
            "example": 2411.0
          },
          "compute_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compute Time",
            "example": 80.45
          },
          "txid_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Txid Url"
          },
          "is_baremetal": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Baremetal",
            "default": false
          },
          "is_k8s": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is K8S",
            "default": false
          }
        },
        "type": "object",
        "title": "Pow"
      },
      "PowStatusEnum": {
        "type": "string",
        "enum": [
          "all",
          "Success",
          "Failed"
        ],
        "title": "PowStatusEnum"
      },
      "PriorityStatus": {
        "type": "string",
        "enum": [
          "info",
          "error",
          "success",
          "critical",
          "promo"
        ],
        "title": "PriorityStatus"
      },
      "ResourceStatus": {
        "type": "string",
        "enum": [
          "running",
          "completed",
          "unpaid",
          "failed",
          "deployment requested",
          "deploying",
          "termination requested",
          "terminated",
          "destroyed",
          "all"
        ],
        "title": "ResourceStatus"
      },
      "ResourceType": {
        "type": "string",
        "enum": [
          "cluster",
          "k8s_cluster"
        ],
        "title": "ResourceType"
      },
      "RuleCheck": {
        "properties": {
          "check": {
            "type": "boolean",
            "title": "Check"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "check",
          "reason"
        ],
        "title": "RuleCheck"
      },
      "SeenNotificationsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "SeenNotificationsResponse",
        "example": {
          "data": "Notification seen",
          "status": "succeeded"
        }
      },
      "SetPrimaryWalletResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "type": "boolean",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "SetPrimaryWalletResponse"
      },
      "SignUserSLARequest": {
        "properties": {
          "sla_id": {
            "type": "integer",
            "title": "Sla Id"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address"
          }
        },
        "type": "object",
        "required": [
          "sla_id",
          "ip_address"
        ],
        "title": "SignUserSLARequest"
      },
      "SignUserSLAResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "type": "string",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "SignUserSLAResponse"
      },
      "SingleApiKey": {
        "properties": {
          "key_id": {
            "type": "string",
            "format": "uuid",
            "title": "Key Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "display": {
            "type": "string",
            "title": "Display"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "project": {
            "type": "string",
            "title": "Project"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          },
          "is_expired": {
            "type": "boolean",
            "title": "Is Expired"
          }
        },
        "type": "object",
        "required": [
          "key_id",
          "user_id",
          "user_email",
          "description",
          "display",
          "created_at",
          "expires_at",
          "project",
          "scopes",
          "is_expired"
        ],
        "title": "SingleApiKey"
      },
      "SphereWebHookData": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "mock": {
            "type": "boolean",
            "title": "Mock"
          },
          "created": {
            "type": "string",
            "title": "Created"
          },
          "updated": {
            "type": "string",
            "title": "Updated"
          },
          "payment": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment"
          }
        },
        "type": "object",
        "required": [
          "data",
          "name",
          "id",
          "mock",
          "created",
          "updated",
          "payment"
        ],
        "title": "SphereWebHookData"
      },
      "StakingTransactionType": {
        "type": "string",
        "enum": [
          "stake",
          "unstake",
          "withdraw"
        ],
        "title": "StakingTransactionType"
      },
      "StatusEnum-Output": {
        "type": "string",
        "enum": [
          "all",
          "Success",
          "Failed"
        ],
        "title": "StatusEnum"
      },
      "StripeWebHookData": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "data",
          "type"
        ],
        "title": "StripeWebHookData"
      },
      "SuccessResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "deployment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Deployment Id"
          }
        },
        "type": "object",
        "required": [
          "status",
          "deployment_id"
        ],
        "title": "SuccessResponse"
      },
      "Summary": {
        "properties": {
          "total_coins_distributed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Coins Distributed",
            "example": 50000000.0
          },
          "todays_coins_distributed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Todays Coins Distributed",
            "example": 24000.0
          },
          "next_block_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Block Start Time",
            "example": "2024-05-13T15:00:00"
          },
          "total_blocks_computed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Blocks Computed",
            "example": 10000
          },
          "total_unique_workers_paid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Unique Workers Paid",
            "example": 44000
          },
          "todays_unique_workers_paid": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Todays Unique Workers Paid",
            "example": 4000
          }
        },
        "type": "object",
        "title": "Summary"
      },
      "TerminateDeviceResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "TerminateDeviceResponse",
        "example": {
          "message": "Device terminated successfully",
          "status": "succeeded"
        }
      },
      "TransactionData": {
        "properties": {
          "hash": {
            "type": "string",
            "title": "Hash"
          },
          "tx_date": {
            "type": "string",
            "format": "date-time",
            "title": "Tx Date"
          },
          "tx_type": {
            "type": "string",
            "title": "Tx Type"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "related_transaction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Related Transaction"
          },
          "cluster_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cluster Id"
          },
          "payment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Url"
          }
        },
        "type": "object",
        "required": [
          "hash",
          "tx_date",
          "tx_type",
          "amount",
          "currency",
          "status",
          "related_transaction",
          "cluster_id",
          "payment_url"
        ],
        "title": "TransactionData"
      },
      "TransactionDataModel": {
        "properties": {},
        "additionalProperties": true,
        "type": "object",
        "title": "TransactionDataModel"
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "deposit",
          "earn",
          "pay",
          "refund",
          "withdraw",
          "promo"
        ],
        "title": "TransactionType"
      },
      "TransactionsByIdResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/TransactionDataModel"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "TransactionsByIdResponseModel"
      },
      "TransactionsResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/TransactionDataModel"
            },
            "type": "array",
            "title": "Data"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data",
          "total_results"
        ],
        "title": "TransactionsResponseModel"
      },
      "UnstakeRequest": {
        "properties": {
          "device_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Id"
          },
          "user_account": {
            "type": "string",
            "title": "User Account"
          },
          "unstake_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unstake Amount"
          },
          "serialize_transaction": {
            "type": "string",
            "title": "Serialize Transaction"
          }
        },
        "type": "object",
        "required": [
          "user_account",
          "serialize_transaction"
        ],
        "title": "UnstakeRequest"
      },
      "UpdateApiKey": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          }
        },
        "type": "object",
        "required": [
          "description",
          "expires_at",
          "scopes"
        ],
        "title": "UpdateApiKey"
      },
      "UpdateClusterName": {
        "properties": {
          "cluster_name": {
            "type": "string",
            "title": "Cluster Name"
          }
        },
        "type": "object",
        "required": [
          "cluster_name"
        ],
        "title": "UpdateClusterName"
      },
      "UpdateClusterNameResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UpdateClusterNameResponse",
        "example": {
          "message": "Cluster name updated successfully",
          "status": "succeeded"
        }
      },
      "UpdateClusterStatus": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "title": "UpdateClusterStatus"
      },
      "UpdateDeviceName": {
        "properties": {
          "device_name": {
            "type": "string",
            "title": "Device Name"
          }
        },
        "type": "object",
        "required": [
          "device_name"
        ],
        "title": "UpdateDeviceName"
      },
      "UpdateDeviceNameResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UpdateDeviceNameResponse",
        "example": {
          "message": "Device name updated successfully",
          "status": "succeeded"
        }
      },
      "UpdateHighLevelExemptionRequest": {
        "properties": {
          "technical_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Technical Exempt"
          },
          "staking_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staking Exempt"
          },
          "account_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Exempt"
          },
          "is_permanent": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Permanent"
          },
          "valid_for_interval": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid For Interval"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/io_retool__schemas__request__br_exemptions__StatusEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "reason_internal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason Internal"
          },
          "exempted_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exempted By"
          }
        },
        "type": "object",
        "title": "UpdateHighLevelExemptionRequest",
        "description": "Request schema for updating a high-level exemption request"
      },
      "UpdateLowLevelDeviceExemptionRequest": {
        "properties": {
          "block_exemption": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Exemption"
          },
          "min_uptime_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Uptime Exempt"
          },
          "pow_no_tasks_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pow No Tasks Exempt"
          },
          "pow_failed_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pow Failed Exempt"
          },
          "reqc_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reqc Exempt"
          },
          "connectivity_tier_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier Exempt"
          },
          "staking_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staking Exempt"
          },
          "status_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Exempt"
          },
          "window_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Window Start"
          },
          "window_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Window End"
          },
          "reason_internal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason Internal"
          },
          "exempt_text_for_public": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exempt Text For Public"
          },
          "exempted_by": {
            "type": "string",
            "title": "Exempted By"
          }
        },
        "type": "object",
        "required": [
          "exempted_by"
        ],
        "title": "UpdateLowLevelDeviceExemptionRequest",
        "description": "Request schema for updating a low-level device exemption"
      },
      "UpdateLowLevelUserExemptionRequest": {
        "properties": {
          "sla_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sla Exempt"
          },
          "user_wallets_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Wallets Exempt"
          },
          "spl_address_exempt": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spl Address Exempt"
          },
          "window_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Window Start"
          },
          "window_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Window End"
          },
          "exempted_by": {
            "type": "string",
            "title": "Exempted By"
          }
        },
        "type": "object",
        "required": [
          "exempted_by"
        ],
        "title": "UpdateLowLevelUserExemptionRequest",
        "description": "Request schema for updating a low-level user exemption"
      },
      "UpdateUserAptosAddressResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UpdateUserAptosAddressResponse",
        "example": {
          "data": true,
          "status": "succeeded"
        }
      },
      "UpdateUserSolanaAddressResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UpdateUserSolanaAddressResponse",
        "example": {
          "data": true,
          "status": "succeeded"
        }
      },
      "UpdateWalletRequest": {
        "properties": {
          "solana_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 44,
                "minLength": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Solana Address"
          },
          "aptos_address": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^0x[a-fA-F0-9]{64}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aptos Address"
          }
        },
        "type": "object",
        "title": "UpdateWalletRequest"
      },
      "UserBalanceResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserBalanceResponse",
        "example": {
          "data": 100.25,
          "status": "succeeded"
        }
      },
      "UserBalancesResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserBalancesResponse",
        "example": {
          "cloud_balance": 100.25,
          "cloud_iocoin_balance": 200.25,
          "status": "succeeded",
          "worker_io_coin_balance": 300.25
        }
      },
      "UserBlockLatestRewards": {
        "properties": {
          "sum_rewarded_for_user": {
            "type": "number",
            "title": "Sum Rewarded For User",
            "default": 0.0,
            "example": 0.7
          }
        },
        "type": "object",
        "title": "UserBlockLatestRewards"
      },
      "UserBlockRewardsSummary": {
        "properties": {
          "total_block_rewards": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Block Rewards",
            "default": 0,
            "example": 625324
          },
          "total_blocks_earned": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Blocks Earned",
            "default": 0,
            "example": 5
          },
          "total_blocks_failed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Blocks Failed",
            "default": 0,
            "example": 20
          },
          "datewise_earnings_summary": {
            "items": {
              "$ref": "#/components/schemas/UserDateWiseEarningSummary"
            },
            "type": "array",
            "title": "Datewise Earnings Summary",
            "default": []
          }
        },
        "type": "object",
        "title": "UserBlockRewardsSummary"
      },
      "UserClustersResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserClustersResponse",
        "example": {
          "data": [
            {
              "compute_hours_remaining": "1 Hrs 40 Mins",
              "compute_hours_served": "1 Hrs 40 Mins",
              "hardware_name": "A3",
              "hardware_quantity": 1,
              "icon": "https://cdn.iconscout.com/icon/free/png-256/cpu-1850603-1569280.png",
              "percent_completed": 50,
              "resource_name": "cluster1",
              "started_at": "2023-09-20 04:13:06"
            }
          ],
          "status": "succeeded"
        }
      },
      "UserCreditsRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "name",
          "reason",
          "amount"
        ],
        "title": "UserCreditsRequest"
      },
      "UserCreditsWithdrawRequest": {
        "properties": {
          "user_wallet_address": {
            "type": "string",
            "title": "User Wallet Address"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "user_wallet_address",
          "amount"
        ],
        "title": "UserCreditsWithdrawRequest"
      },
      "UserDateWiseEarningSummary": {
        "properties": {
          "rewards": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards",
            "example": 0.702
          },
          "date_with_year": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date With Year",
            "example": "2024-05-17"
          }
        },
        "type": "object",
        "title": "UserDateWiseEarningSummary"
      },
      "UserEarningsSummaryResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserEarningsSummaryResponse",
        "example": {
          "data": {
            "monthly_earnings_summary": [
              {
                "month": 10,
                "total_earnings": 0,
                "total_slashed": 0,
                "year": 2023
              },
              {
                "month": 9,
                "total_earnings": 0,
                "total_slashed": 0,
                "year": 2023
              },
              {
                "month": 8,
                "total_earnings": 128.9,
                "total_slashed": 0,
                "year": 2023
              }
            ],
            "total_compute_hours": 0,
            "total_earnings": 0,
            "total_jobs": 0,
            "total_slashed": 0,
            "user_id": "599ef4af-7fe6-44b5-aba3-25899bde2ab6",
            "year": 2023
          },
          "status": "succeeded"
        }
      },
      "UserPointsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserPointsResponse",
        "example": {
          "cpu_points": 100.25,
          "data": 100.25,
          "gpu_points": 100.25,
          "status": "succeeded"
        }
      },
      "UserSolanaAddressResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserSolanaAddressResponse",
        "example": {
          "data": "SPLADDRESS",
          "status": "succeeded"
        }
      },
      "UserUUIDResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserUUIDResponse",
        "example": {
          "data": {
            "uuid": "<USER_UUID>"
          },
          "status": "succeeded"
        }
      },
      "UserWalletsAddressesResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "UserWalletsAddressesResponse",
        "example": {
          "data": {
            "aptos_address": "0x....",
            "spl_address": "SPLADDRESS"
          },
          "status": "succeeded"
        }
      },
      "VMaaSResourceStatus": {
        "type": "string",
        "enum": [
          "running",
          "completed",
          "failed",
          "deployment requested",
          "termination requested",
          "destroyed"
        ],
        "title": "VMaaSResourceStatus"
      },
      "ValidateApiKey": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "ValidateApiKey"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerifyWalletAddressRequest": {
        "properties": {
          "wallet_address": {
            "type": "string",
            "title": "Wallet Address"
          }
        },
        "type": "object",
        "required": [
          "wallet_address"
        ],
        "title": "VerifyWalletAddressRequest"
      },
      "VmEvent": {
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time",
            "title": "Time"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "time",
          "message"
        ],
        "title": "VmEvent"
      },
      "VmImageType": {
        "type": "string",
        "enum": [
          "general",
          "datascience"
        ],
        "title": "VmImageType"
      },
      "VmJobsData": {
        "properties": {
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "workers": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__WorkerData"
            },
            "type": "array",
            "title": "Workers"
          }
        },
        "type": "object",
        "required": [
          "total",
          "workers"
        ],
        "title": "VmJobsData"
      },
      "WalletDetails": {
        "properties": {
          "wallet_address": {
            "type": "string",
            "title": "Wallet Address"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "wallet_type": {
            "type": "string",
            "title": "Wallet Type"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "wallet_address",
          "is_primary",
          "is_active",
          "wallet_type",
          "created_at"
        ],
        "title": "WalletDetails"
      },
      "WalletHistoryItem": {
        "properties": {
          "wallet_address": {
            "type": "string",
            "title": "Wallet Address"
          },
          "event": {
            "type": "string",
            "title": "Event"
          },
          "wallet_type": {
            "type": "string",
            "title": "Wallet Type"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "wallet_address",
          "event",
          "wallet_type",
          "is_primary",
          "created_at"
        ],
        "title": "WalletHistoryItem"
      },
      "WalletHistoryResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/WalletHistoryItem"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "WalletHistoryResponse"
      },
      "WalletResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/WalletDetails"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "WalletResponse"
      },
      "WalletResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "status",
          "data"
        ],
        "title": "WalletResponseModel"
      },
      "WorkerStatus": {
        "type": "string",
        "enum": [
          "Success",
          "Failed"
        ],
        "title": "WorkerStatus"
      },
      "io_blocks__schemas__request__block_request__StatusEnum": {
        "type": "string",
        "enum": [
          "all",
          "Success",
          "Failed"
        ],
        "title": "StatusEnum"
      },
      "io_cloud__schemas__request__caas__CaaSDeployClusterRequest": {
        "properties": {
          "resource_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "connectivity_tier": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClusterCurrency"
              },
              {
                "type": "null"
              }
            ],
            "default": "usdc"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              }
            ]
          },
          "hardware_qty": {
            "type": "integer",
            "maximum": 8.0,
            "minimum": 1.0,
            "title": "Hardware Qty"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "location_id": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Location Id"
          },
          "transaction": {
            "type": "string",
            "title": "Transaction"
          },
          "container_config": {
            "$ref": "#/components/schemas/io_cloud__schemas__request__caas__ContainerConfig"
          },
          "registry_config": {
            "$ref": "#/components/schemas/io_cloud__schemas__request__caas__RegistryConfig"
          },
          "payment_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "payment"
          }
        },
        "type": "object",
        "required": [
          "resource_private_name",
          "hardware_qty",
          "hardware_id",
          "location_id",
          "transaction",
          "container_config",
          "registry_config"
        ],
        "title": "CaaSDeployClusterRequest"
      },
      "io_cloud__schemas__request__caas__ContainerConfig": {
        "properties": {
          "replica_count": {
            "type": "integer",
            "title": "Replica Count"
          },
          "env_variables": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Env Variables"
          },
          "secret_env_variables": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Secret Env Variables"
          },
          "health_check_endpoint": {
            "type": "string",
            "title": "Health Check Endpoint",
            "default": "/"
          },
          "entrypoint": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Entrypoint"
          },
          "traffic_port": {
            "type": "integer",
            "title": "Traffic Port"
          },
          "args": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "command": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Command"
          }
        },
        "type": "object",
        "required": [
          "replica_count",
          "traffic_port"
        ],
        "title": "ContainerConfig"
      },
      "io_cloud__schemas__request__caas__ContainerUpdateRequest": {
        "properties": {
          "env_variables": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Variables",
            "description": "Full list of desired env variables must be passed"
          },
          "secret_env_variables": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Env Variables",
            "description": "Set of variables which values must be udpated or added. Provide null to delete existing variable"
          },
          "entrypoint": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entrypoint"
          },
          "traffic_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Traffic Port"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "registry_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Username"
          },
          "registry_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Secret"
          },
          "args": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "command": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Command"
          }
        },
        "type": "object",
        "title": "ContainerUpdateRequest"
      },
      "io_cloud__schemas__request__caas__RegistryConfig": {
        "properties": {
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "registry_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Username"
          },
          "registry_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Secret"
          }
        },
        "type": "object",
        "required": [
          "image_url"
        ],
        "title": "RegistryConfig"
      },
      "io_cloud__schemas__request__cluster__ExtendCluster": {
        "properties": {
          "hours_qty": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Hours Qty"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "hours_qty"
        ],
        "title": "ExtendCluster"
      },
      "io_cloud__schemas__request__enterprise_caas__CaaSDeployClusterRequest": {
        "properties": {
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "node_pool_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Pool Id",
            "description": "ID of private node pool. Can't be used if location_ids are provided."
          },
          "duration_hours": {
            "type": "integer",
            "title": "Duration Hours"
          },
          "gpus_per_container": {
            "type": "integer",
            "maximum": 8.0,
            "minimum": 1.0,
            "title": "Gpus Per Container"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "location_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array",
                "maxItems": 1,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Ids",
            "description": "Only single locations is supported for now"
          },
          "container_config": {
            "$ref": "#/components/schemas/io_cloud__schemas__request__enterprise_caas__ContainerConfig"
          },
          "registry_config": {
            "$ref": "#/components/schemas/io_cloud__schemas__request__enterprise_caas__RegistryConfig"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "resource_private_name",
          "gpus_per_container",
          "hardware_id",
          "container_config",
          "registry_config"
        ],
        "title": "CaaSDeployClusterRequest"
      },
      "io_cloud__schemas__request__enterprise_caas__ContainerConfig": {
        "properties": {
          "replica_count": {
            "type": "integer",
            "title": "Replica Count"
          },
          "env_variables": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Env Variables"
          },
          "secret_env_variables": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Secret Env Variables"
          },
          "entrypoint": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Entrypoint"
          },
          "traffic_port": {
            "type": "integer",
            "title": "Traffic Port"
          },
          "args": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "command": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Command"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "replica_count",
          "traffic_port"
        ],
        "title": "ContainerConfig"
      },
      "io_cloud__schemas__request__enterprise_caas__ContainerUpdateRequest": {
        "properties": {
          "env_variables": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Env Variables",
            "description": "Full list of desired env variables must be passed"
          },
          "secret_env_variables": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Env Variables",
            "description": "Set of variables which values must be udpated or added. Provide null to delete existing variable"
          },
          "entrypoint": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entrypoint"
          },
          "traffic_port": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Traffic Port"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "registry_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Username"
          },
          "registry_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Secret"
          },
          "args": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "command": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Command"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ContainerUpdateRequest"
      },
      "io_cloud__schemas__request__enterprise_caas__ExtendCluster": {
        "properties": {
          "duration_hours": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Duration Hours"
          }
        },
        "type": "object",
        "required": [
          "duration_hours"
        ],
        "title": "ExtendCluster"
      },
      "io_cloud__schemas__request__enterprise_caas__RegistryConfig": {
        "properties": {
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "registry_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Username"
          },
          "registry_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry Secret"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "image_url"
        ],
        "title": "RegistryConfig"
      },
      "io_cloud__schemas__request__enterprise_vmaas__ExtendCluster": {
        "properties": {
          "duration_hours": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Duration Hours"
          }
        },
        "type": "object",
        "required": [
          "duration_hours"
        ],
        "title": "ExtendCluster"
      },
      "io_cloud__schemas__request__enterprise_vmaas__VMaasDeployRequest": {
        "properties": {
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "node_pool_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Pool Id",
            "description": "ID of private node pool. Can't be used if location_ids are provided."
          },
          "duration_hours": {
            "type": "integer",
            "title": "Duration Hours"
          },
          "gpus_per_vm": {
            "type": "integer",
            "maximum": 8.0,
            "minimum": 1.0,
            "title": "Gpus Per Vm"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "location_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 1,
            "minItems": 1,
            "title": "Location Ids",
            "description": "Only single locations is supported for now"
          },
          "vms_qty": {
            "type": "integer",
            "title": "Vms Qty"
          },
          "ssh_keys": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Keys"
          },
          "github_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Github Ids"
          },
          "vm_image_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VmImageType"
              }
            ],
            "default": "general"
          },
          "network_services": {
            "additionalProperties": {
              "$ref": "#/components/schemas/NetworkService"
            },
            "type": "object",
            "title": "Network Services"
          }
        },
        "type": "object",
        "required": [
          "resource_private_name",
          "gpus_per_vm",
          "hardware_id",
          "vms_qty"
        ],
        "title": "VMaasDeployRequest"
      },
      "io_cloud__schemas__request__vmaas__VMaasDeployRequest": {
        "properties": {
          "resource_id": {
            "type": "string",
            "format": "uuid",
            "title": "Resource Id"
          },
          "connectivity_tier": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connectivity Tier"
          },
          "resource_private_name": {
            "type": "string",
            "title": "Resource Private Name"
          },
          "currency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClusterCurrency"
              },
              {
                "type": "null"
              }
            ],
            "default": "usdc"
          },
          "duration_qty": {
            "type": "integer",
            "title": "Duration Qty"
          },
          "duration_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DurationType"
              }
            ]
          },
          "hardware_qty": {
            "type": "integer",
            "maximum": 8.0,
            "minimum": 1.0,
            "title": "Hardware Qty"
          },
          "vms_qty": {
            "type": "integer",
            "title": "Vms Qty"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "location_id": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Location Id"
          },
          "transaction": {
            "type": "string",
            "title": "Transaction"
          },
          "ssh_keys": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Keys"
          },
          "github_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Github Ids"
          },
          "vm_image_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VmImageType"
              }
            ],
            "default": "general"
          },
          "payment_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "payment"
          },
          "network_services": {
            "additionalProperties": {
              "$ref": "#/components/schemas/NetworkService"
            },
            "type": "object",
            "title": "Network Services"
          }
        },
        "type": "object",
        "required": [
          "resource_id",
          "resource_private_name",
          "hardware_qty",
          "vms_qty",
          "hardware_id",
          "location_id",
          "transaction"
        ],
        "title": "VMaasDeployRequest"
      },
      "io_cloud__schemas__response__caas__GetAvailableReplicasPerLocationResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__caas__ReplicasPerLocation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetAvailableReplicasPerLocationResponse"
      },
      "io_cloud__schemas__response__caas__GetMaxGpuCountPerReplicaResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/io_cloud__schemas__response__caas__MaxGpuPerReplicaData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetMaxGpuCountPerReplicaResponse"
      },
      "io_cloud__schemas__response__caas__HardwareInfo": {
        "properties": {
          "max_gpus_per_container": {
            "type": "integer",
            "title": "Max Gpus Per Container"
          },
          "available": {
            "type": "integer",
            "title": "Available"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_name": {
            "type": "string",
            "title": "Hardware Name"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          }
        },
        "type": "object",
        "required": [
          "max_gpus_per_container",
          "available",
          "hardware_id",
          "hardware_name",
          "brand_name"
        ],
        "title": "HardwareInfo"
      },
      "io_cloud__schemas__response__caas__MaxGpuPerReplicaData": {
        "properties": {
          "hardware": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__caas__HardwareInfo"
            },
            "type": "array",
            "title": "Hardware"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "hardware",
          "total"
        ],
        "title": "MaxGpuPerReplicaData"
      },
      "io_cloud__schemas__response__caas__ReplicasPerLocation": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "available_replicas": {
            "type": "integer",
            "title": "Available Replicas"
          },
          "iso2": {
            "type": "string",
            "title": "Iso2"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "available_replicas",
          "iso2",
          "name"
        ],
        "title": "ReplicasPerLocation"
      },
      "io_cloud__schemas__response__cluster__GetClusterWorkersResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetClusterWorkersResponse",
        "example": {
          "data": {
            "total_cpu": 1,
            "total_gpu": 1,
            "workers_info": [
              {
                "compute_minutes_served": 0,
                "device_id": "599ef4af-7fe6-44b5-aba3-25899bde2ab6",
                "earned": 0,
                "hardware_name": "RTX A6000",
                "slashed": 0,
                "total_hire_rate": 10.8,
                "uptime_percent": 100
              },
              {
                "compute_minutes_served": 0,
                "device_id": "e0b91f77-b934-40b3-889c-189ba920e656",
                "earned": 0,
                "hardware_name": "RTX A6000",
                "slashed": 0,
                "total_hire_rate": 5.4,
                "uptime_percent": 100
              }
            ]
          },
          "status": "succeeded"
        }
      },
      "io_cloud__schemas__response__enterprise__caas__DeploymentDetails": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "amount_paid": {
            "type": "number",
            "title": "Amount Paid"
          },
          "completed_percent": {
            "type": "number",
            "title": "Completed Percent"
          },
          "total_gpus": {
            "type": "integer",
            "title": "Total Gpus"
          },
          "gpus_per_container": {
            "type": "integer",
            "title": "Gpus Per Container"
          },
          "total_containers": {
            "type": "integer",
            "title": "Total Containers"
          },
          "hardware_name": {
            "type": "string",
            "title": "Hardware Name"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/LocationData"
            },
            "type": "array",
            "title": "Locations"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          },
          "compute_minutes_served": {
            "type": "integer",
            "title": "Compute Minutes Served"
          },
          "compute_minutes_remaining": {
            "type": "integer",
            "title": "Compute Minutes Remaining"
          },
          "container_config": {
            "$ref": "#/components/schemas/ContainerConfig-Output"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "created_at",
          "started_at",
          "finished_at",
          "amount_paid",
          "completed_percent",
          "total_gpus",
          "gpus_per_container",
          "total_containers",
          "hardware_name",
          "hardware_id",
          "locations",
          "brand_name",
          "compute_minutes_served",
          "compute_minutes_remaining",
          "container_config"
        ],
        "title": "DeploymentDetails"
      },
      "io_cloud__schemas__response__enterprise__caas__GetAvailableReplicasPerLocationResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__ReplicasPerLocation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetAvailableReplicasPerLocationResponse"
      },
      "io_cloud__schemas__response__enterprise__caas__GetDeploymentDetails": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__DeploymentDetails"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeploymentDetails"
      },
      "io_cloud__schemas__response__enterprise__caas__GetDeploymentsData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeploymentsData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeploymentsData"
      },
      "io_cloud__schemas__response__enterprise__caas__GetMaxGpuCountPerReplicaResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__MaxGpuPerReplicaData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetMaxGpuCountPerReplicaResponse"
      },
      "io_cloud__schemas__response__enterprise__caas__HardwareInfo": {
        "properties": {
          "max_gpus_per_container": {
            "type": "integer",
            "title": "Max Gpus Per Container"
          },
          "available": {
            "type": "integer",
            "title": "Available"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_name": {
            "type": "string",
            "title": "Hardware Name"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          }
        },
        "type": "object",
        "required": [
          "max_gpus_per_container",
          "available",
          "hardware_id",
          "hardware_name",
          "brand_name"
        ],
        "title": "HardwareInfo"
      },
      "io_cloud__schemas__response__enterprise__caas__MaxGpuPerReplicaData": {
        "properties": {
          "hardware": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__caas__HardwareInfo"
            },
            "type": "array",
            "title": "Hardware"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "hardware",
          "total"
        ],
        "title": "MaxGpuPerReplicaData"
      },
      "io_cloud__schemas__response__enterprise__caas__ReplicasPerLocation": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "iso2": {
            "type": "string",
            "title": "Iso2"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "available_replicas": {
            "type": "integer",
            "title": "Available Replicas"
          }
        },
        "type": "object",
        "required": [
          "id",
          "iso2",
          "name",
          "available_replicas"
        ],
        "title": "ReplicasPerLocation"
      },
      "io_cloud__schemas__response__enterprise__caas__WorkerData": {
        "properties": {
          "device_id": {
            "type": "string",
            "format": "uuid",
            "title": "Device Id"
          },
          "container_id": {
            "type": "string",
            "title": "Container Id"
          },
          "hardware": {
            "type": "string",
            "title": "Hardware"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "uptime_percent": {
            "type": "number",
            "title": "Uptime Percent"
          },
          "gpus_per_container": {
            "type": "integer",
            "title": "Gpus Per Container"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "container_events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ContainerEvent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Container Events"
          },
          "public_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Url"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "container_id",
          "hardware",
          "brand_name",
          "created_at",
          "uptime_percent",
          "gpus_per_container",
          "status",
          "container_events",
          "public_url"
        ],
        "title": "WorkerData"
      },
      "io_cloud__schemas__response__enterprise__vmaas__DeploymentDetails": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "amount_paid": {
            "type": "number",
            "title": "Amount Paid"
          },
          "completed_percent": {
            "type": "number",
            "title": "Completed Percent"
          },
          "total_gpus": {
            "type": "integer",
            "title": "Total Gpus"
          },
          "gpus_per_vm": {
            "type": "integer",
            "title": "Gpus Per Vm"
          },
          "total_vms": {
            "type": "integer",
            "title": "Total Vms"
          },
          "hardware_name": {
            "type": "string",
            "title": "Hardware Name"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/LocationData"
            },
            "type": "array",
            "title": "Locations"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          },
          "compute_minutes_served": {
            "type": "integer",
            "title": "Compute Minutes Served"
          },
          "compute_minutes_remaining": {
            "type": "integer",
            "title": "Compute Minutes Remaining"
          },
          "ssh_keys": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Ssh Keys"
          },
          "github_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Github Ids"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "created_at",
          "started_at",
          "finished_at",
          "amount_paid",
          "completed_percent",
          "total_gpus",
          "gpus_per_vm",
          "total_vms",
          "hardware_name",
          "hardware_id",
          "locations",
          "brand_name",
          "compute_minutes_served",
          "compute_minutes_remaining",
          "ssh_keys",
          "github_ids"
        ],
        "title": "DeploymentDetails"
      },
      "io_cloud__schemas__response__enterprise__vmaas__GetAvailableReplicasPerLocationResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__ReplicasPerLocation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetAvailableReplicasPerLocationResponse"
      },
      "io_cloud__schemas__response__enterprise__vmaas__GetDeploymentDetails": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__DeploymentDetails"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeploymentDetails"
      },
      "io_cloud__schemas__response__enterprise__vmaas__GetDeploymentsData": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/DeploymentsData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeploymentsData"
      },
      "io_cloud__schemas__response__enterprise__vmaas__GetMaxGpuCountPerReplicaResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__MaxGpuPerReplicaData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetMaxGpuCountPerReplicaResponse"
      },
      "io_cloud__schemas__response__enterprise__vmaas__HardwareInfo": {
        "properties": {
          "max_gpus_per_vm": {
            "type": "integer",
            "title": "Max Gpus Per Vm"
          },
          "available": {
            "type": "integer",
            "title": "Available"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_name": {
            "type": "string",
            "title": "Hardware Name"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          }
        },
        "type": "object",
        "required": [
          "max_gpus_per_vm",
          "available",
          "hardware_id",
          "hardware_name",
          "brand_name"
        ],
        "title": "HardwareInfo"
      },
      "io_cloud__schemas__response__enterprise__vmaas__MaxGpuPerReplicaData": {
        "properties": {
          "hardware": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__enterprise__vmaas__HardwareInfo"
            },
            "type": "array",
            "title": "Hardware"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "hardware",
          "total"
        ],
        "title": "MaxGpuPerReplicaData"
      },
      "io_cloud__schemas__response__enterprise__vmaas__ReplicasPerLocation": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "iso2": {
            "type": "string",
            "title": "Iso2"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "available_replicas": {
            "type": "integer",
            "title": "Available Replicas"
          }
        },
        "type": "object",
        "required": [
          "id",
          "iso2",
          "name",
          "available_replicas"
        ],
        "title": "ReplicasPerLocation"
      },
      "io_cloud__schemas__response__enterprise__vmaas__WorkerData": {
        "properties": {
          "device_id": {
            "type": "string",
            "format": "uuid",
            "title": "Device Id"
          },
          "vm_id": {
            "type": "string",
            "title": "Vm Id"
          },
          "hardware": {
            "type": "string",
            "title": "Hardware"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "uptime_percent": {
            "type": "number",
            "title": "Uptime Percent"
          },
          "gpus_per_vm": {
            "type": "integer",
            "title": "Gpus Per Vm"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "vm_events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VmEvent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vm Events"
          },
          "network_services": {
            "additionalProperties": {
              "$ref": "#/components/schemas/NetworkServiceResponse"
            },
            "type": "object",
            "title": "Network Services"
          },
          "ssh_access": {
            "type": "string",
            "title": "Ssh Access"
          }
        },
        "type": "object",
        "required": [
          "device_id",
          "vm_id",
          "hardware",
          "brand_name",
          "created_at",
          "uptime_percent",
          "gpus_per_vm",
          "status",
          "vm_events",
          "network_services",
          "ssh_access"
        ],
        "title": "WorkerData"
      },
      "io_cloud__schemas__response__vmaas__GetAvailableReplicasPerLocationResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__vmaas__ReplicasPerLocation"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetAvailableReplicasPerLocationResponse"
      },
      "io_cloud__schemas__response__vmaas__GetMaxGpuCountPerReplicaResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/io_cloud__schemas__response__vmaas__MaxGpuPerReplicaData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetMaxGpuCountPerReplicaResponse"
      },
      "io_cloud__schemas__response__vmaas__HardwareInfo": {
        "properties": {
          "max_gpus_per_vm": {
            "type": "integer",
            "title": "Max Gpus Per Vm"
          },
          "available": {
            "type": "integer",
            "title": "Available"
          },
          "hardware_id": {
            "type": "integer",
            "title": "Hardware Id"
          },
          "hardware_name": {
            "type": "string",
            "title": "Hardware Name"
          },
          "brand_name": {
            "type": "string",
            "title": "Brand Name"
          }
        },
        "type": "object",
        "required": [
          "max_gpus_per_vm",
          "available",
          "hardware_id",
          "hardware_name",
          "brand_name"
        ],
        "title": "HardwareInfo"
      },
      "io_cloud__schemas__response__vmaas__MaxGpuPerReplicaData": {
        "properties": {
          "hardware": {
            "items": {
              "$ref": "#/components/schemas/io_cloud__schemas__response__vmaas__HardwareInfo"
            },
            "type": "array",
            "title": "Hardware"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "hardware",
          "total"
        ],
        "title": "MaxGpuPerReplicaData"
      },
      "io_cloud__schemas__response__vmaas__ReplicasPerLocation": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "available_replicas": {
            "type": "integer",
            "title": "Available Replicas"
          },
          "iso2": {
            "type": "string",
            "title": "Iso2"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "available_replicas",
          "iso2",
          "name"
        ],
        "title": "ReplicasPerLocation"
      },
      "io_explorer__schemas__response__cluster__GetClusterWorkersResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetClusterWorkersResponse",
        "example": {
          "data": {
            "all_statuses": [
              "failed"
            ],
            "total_cpu": 1,
            "total_gpu": 1,
            "workers_info": [
              {
                "compute_minutes_served": 0,
                "device_id": "599ef4af-7fe6-44b5-aba3-25899bde2ab6",
                "earned": 0,
                "hardware_name": "RTX A6000",
                "slashed": 0,
                "total_hire_rate": 10.8,
                "uptime_percent": 100
              },
              {
                "compute_minutes_served": 0,
                "device_id": "e0b91f77-b934-40b3-889c-189ba920e656",
                "earned": 0,
                "hardware_name": "RTX A6000",
                "slashed": 0,
                "total_hire_rate": 5.4,
                "uptime_percent": 100
              }
            ]
          },
          "status": "succeeded"
        }
      },
      "io_explorer__schemas__response__device__GetDeviceDetailsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceDetailsResponse",
        "example": {
          "data": {
            "base_tier_name": "Ultra High Speed",
            "brand_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
            "device_id": "599ef4af-7fe6-44b5-aba3-25899bde2ab6",
            "down_percentage": 0,
            "download_speed_mbps": 2775.1,
            "downtime_by_date": {
              "2023-09-11": {
                "downtime": 281.508,
                "note": "down for 0 days and 0 hours and 4 minutes"
              },
              "2023-09-12": {
                "downtime": 12193.385,
                "note": "down for 0 days and 3 hours and 23 minutes"
              }
            },
            "hardware_name": "RTX A6000",
            "hardware_quantity": 2,
            "is_baremetal": false,
            "is_k8s": true,
            "iso2": "CA",
            "jobs": [
              {
                "compute_minutes_hired": 300,
                "compute_minutes_served": 0,
                "earned": 0,
                "end_time": "2023-09-12 00:00:00",
                "for": "e242cd76-9e65-4de1-b3ec-1cb8b002b38d",
                "slashed": 0,
                "start_time": "2023-09-12 00:00:00",
                "status": "pending",
                "total_hire_rate": 10.8,
                "uptime_percent": 100
              },
              {
                "compute_minutes_hired": 300,
                "compute_minutes_served": 0,
                "earned": 0,
                "end_time": "2023-09-12 00:00:00",
                "for": "b168e413-3014-457e-b139-8450371b47c6",
                "slashed": 0,
                "start_time": "2023-09-12 00:00:00",
                "status": "pending",
                "total_hire_rate": 10.8,
                "uptime_percent": 100
              }
            ],
            "location_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/canada.svg?t=2023-09-05T21%3A52%3A29.736Z",
            "location_name": "Canada",
            "reward_pool": "community",
            "security_soc2": false,
            "upload_speed_mbps": 1972.54
          },
          "status": "succeeded"
        }
      },
      "io_explorer__schemas__response__device__HardwareInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "hired": {
            "type": "integer",
            "title": "Hired"
          },
          "idle": {
            "type": "integer",
            "title": "Idle"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "total",
          "hired",
          "idle"
        ],
        "title": "HardwareInfo"
      },
      "io_explorer__schemas__response__safety_module__DailyNetStakedData": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "cumulative_net_staked": {
            "type": "number",
            "title": "Cumulative Net Staked"
          }
        },
        "type": "object",
        "required": [
          "date",
          "cumulative_net_staked"
        ],
        "title": "DailyNetStakedData"
      },
      "io_explorer__schemas__response__staking__DailyNetStakedData": {
        "properties": {
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          },
          "cumulative_net_staked": {
            "type": "number",
            "title": "Cumulative Net Staked"
          }
        },
        "type": "object",
        "required": [
          "day",
          "cumulative_net_staked"
        ],
        "title": "DailyNetStakedData"
      },
      "io_explorer__schemas__response__transactions__GetTransactionsActivityData__1": {
        "properties": {
          "day": {
            "type": "string",
            "format": "date",
            "title": "Day"
          },
          "cumulative_tx_count": {
            "type": "integer",
            "title": "Cumulative Tx Count"
          }
        },
        "type": "object",
        "required": [
          "day",
          "cumulative_tx_count"
        ],
        "title": "GetTransactionsActivityData"
      },
      "io_explorer__schemas__response__transactions__GetTransactionsActivityData__2": {
        "properties": {
          "transactions": {
            "items": {
              "$ref": "#/components/schemas/io_explorer__schemas__response__transactions__GetTransactionsActivityData__1"
            },
            "type": "array",
            "title": "Transactions"
          }
        },
        "type": "object",
        "required": [
          "transactions"
        ],
        "title": "GetTransactionsActivityData"
      },
      "io_retool__schemas__request__br_exemptions__StatusEnum": {
        "type": "string",
        "enum": [
          "active",
          "revoked",
          "expired"
        ],
        "title": "StatusEnum"
      },
      "io_retool__schemas__request__payouts__WithdrawRequest": {
        "properties": {
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "txid_url": {
            "type": "string",
            "title": "Txid Url"
          },
          "network": {
            "$ref": "#/components/schemas/Network"
          },
          "asset": {
            "$ref": "#/components/schemas/Asset"
          },
          "balance_type": {
            "$ref": "#/components/schemas/BalanceType"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "txid_url",
          "network",
          "asset",
          "balance_type"
        ],
        "title": "WithdrawRequest"
      },
      "io_worker__schemas__request__users_staking__WithdrawRequest": {
        "properties": {
          "offer_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer Id"
          },
          "user_account": {
            "type": "string",
            "title": "User Account"
          },
          "serialize_transaction": {
            "type": "string",
            "title": "Serialize Transaction"
          }
        },
        "type": "object",
        "required": [
          "user_account",
          "serialize_transaction"
        ],
        "title": "WithdrawRequest"
      },
      "io_worker__schemas__response__device__GetDeviceDetailsResponse": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "GetDeviceDetailsResponse",
        "example": {
          "data": {
            "base_tier_name": "Ultra High Speed",
            "brand_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/nvidia.svg?t=2023-09-05T21%3A52%3A29.736Z",
            "device_id": "599ef4af-7fe6-44b5-aba3-25899bde2ab6",
            "down_percentage": 0,
            "download_speed_mbps": 2775.1,
            "downtime_by_date": {
              "2023-09-11": {
                "downtime": 281.508,
                "note": "down for 0 days and 0 hours and 4 minutes"
              },
              "2023-09-12": {
                "downtime": 12193.385,
                "note": "down for 0 days and 3 hours and 23 minutes"
              }
            },
            "hardware_name": "RTX A6000",
            "hardware_quantity": 2,
            "is_baremetal": false,
            "is_k8s": true,
            "iso2": "CA",
            "jobs": [
              {
                "compute_minutes_hired": 300,
                "compute_minutes_served": 0,
                "earned": 0,
                "end_time": "2023-09-12 00:00:00",
                "for": "e242cd76-9e65-4de1-b3ec-1cb8b002b38d",
                "slashed": 0,
                "start_time": "2023-09-12 00:00:00",
                "status": "pending",
                "total_hire_rate": 10.8,
                "uptime_percent": 100
              },
              {
                "compute_minutes_hired": 300,
                "compute_minutes_served": 0,
                "earned": 0,
                "end_time": "2023-09-12 00:00:00",
                "for": "b168e413-3014-457e-b139-8450371b47c6",
                "slashed": 0,
                "start_time": "2023-09-12 00:00:00",
                "status": "pending",
                "total_hire_rate": 10.8,
                "uptime_percent": 100
              }
            ],
            "location_icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/canada.svg?t=2023-09-05T21%3A52%3A29.736Z",
            "location_name": "Canada",
            "reward_pool": "community",
            "security_soc2": false,
            "supplier": {
              "busy_percent": 100,
              "icon": "https://mxtfdkppxyflmmglullf.supabase.co/storage/v1/object/public/icons/io-net-logo-symbol-only-final.svg",
              "is_active": true,
              "name": "io.net"
            },
            "upload_speed_mbps": 1972.54,
            "worker_mode": "k8s"
          },
          "status": "succeeded"
        }
      }
    },
    "securitySchemes": {
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "servers": [
    {
      "url": "https://api.io.solutions"
    }
  ]
}