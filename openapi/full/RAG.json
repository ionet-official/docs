{
  "openapi": "3.1.0",
  "info": {
    "title": "LLM-Serving Developer API",
    "description": "Developer API to be used by external parties",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.intelligence.io.solutions/api"
    }
  ],
  "paths": {
    "/v1/models": {
      "get": {
        "tags": [
          "OpenAI Compatible Developer API"
        ],
        "summary": "Get Models List",
        "description": "Get list of available models for Chat Completions API",
        "operationId": "get_models_list_v1_models_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelList"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/embedding-models": {
      "get": {
        "tags": [
          "OpenAI Compatible Developer API"
        ],
        "summary": "Get Embedding Models List",
        "description": "Get list of available models for Chat Completions API",
        "operationId": "get_embedding_models_list_v1_embedding_models_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelList"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/chat/completions": {
      "post": {
        "tags": [
          "OpenAI Compatible Developer API"
        ],
        "summary": "Create Chat Completion",
        "operationId": "create_chat_completion_v1_chat_completions_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCompletionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/embeddings": {
      "post": {
        "tags": [
          "OpenAI Compatible Developer API"
        ],
        "summary": "Create Embedding",
        "description": "Embeddings API similar to OpenAI's API.\nSee https://platform.openai.com/docs/api-reference/embeddings/create\nfor the API specification. This API mimics the OpenAI Embedding API.",
        "operationId": "create_embedding_v1_embeddings_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/EmbeddingCompletionRequest"
                  },
                  {
                    "$ref": "#/components/schemas/EmbeddingChatRequest"
                  }
                ],
                "title": "Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/schema": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Default Workflows",
        "operationId": "get_default_workflows_v1_workflows_schema_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/run": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Run Builtin Workflow",
        "operationId": "run_builtin_workflow_v1_workflows_run_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/yaml/validate": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Validate Yaml",
        "operationId": "validate_yaml_v1_workflows_yaml_validate_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_validate_yaml_v1_workflows_yaml_validate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/yaml/run": {
      "post": {
        "tags": [
          "agents"
        ],
        "summary": "Run Yaml",
        "operationId": "run_yaml_v1_workflows_yaml_run_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_run_yaml_v1_workflows_yaml_run_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/tools": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "List Tools",
        "operationId": "list_tools_v1_tools_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolInfoList"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Available Agents",
        "operationId": "get_available_agents_v1_agents_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentsList"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/": {
      "get": {
        "tags": [
          "agents"
        ],
        "summary": "Get Available Agents",
        "operationId": "get_available_agents_v1_agents__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentsList"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/chunks/search": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_chunks_search_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/chunks/{id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_chunks__id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_chunks__id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_chunks__id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/chunks": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_chunks_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/{id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/{id}/documents/{document_id}": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__documents__document_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__documents__document_id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/{id}/documents": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__documents_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/{id}/users": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__users_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/{id}/users/{user_id}": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__users__user_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__users__user_id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/{id}/extract": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections__id__extract_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/collections/name/{collection_name}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_collections_name__collection_name__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/conversations": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/conversations/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/conversations/export_messages": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations_export_messages_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/conversations/{id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations__id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations__id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations__id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/conversations/{id}/messages": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations__id__messages_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/conversations/{id}/messages/{message_id}": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_conversations__id__messages__message_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/metadata": {
      "patch": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__metadata_patch",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__metadata_put",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/download_zip": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents_download_zip_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/chunks": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__chunks_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/download": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__download_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/by-filter": {
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents_by_filter_delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/collections": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__collections_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/extract": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__extract_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/deduplicate": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__deduplicate_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/entities": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__entities_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/entities/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__entities_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/relationships": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__relationships_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/{id}/relationships/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents__id__relationships_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/documents/search": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_documents_search_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/communities/build": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__communities_build_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/reset": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__reset_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/entities": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__entities_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__entities_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/entities/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__entities_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/relationships": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__relationships_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__relationships_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/relationships/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__relationships_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/entities/{entity_id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__entities__entity_id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__entities__entity_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__entities__entity_id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/relationships/{relationship_id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__relationships__relationship_id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__relationships__relationship_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__relationships__relationship_id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/communities": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__communities_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__communities_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/communities/{community_id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__communities__community_id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__communities__community_id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__communities__community_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/communities/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__communities_export_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/graphs/{collection_id}/pull": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_graphs__collection_id__pull_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/indices": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_indices_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_indices_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/indices/{table_name}/{index_name}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_indices__table_name___index_name__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_indices__table_name___index_name__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/prompts": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_prompts_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_prompts_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/prompts/{name}": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_prompts__name__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_prompts__name__put",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_prompts__name__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/retrieval/search": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_retrieval_search_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/retrieval/rag": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_retrieval_rag_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/retrieval/agent": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_retrieval_agent_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/retrieval/completion": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_retrieval_completion_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/retrieval/embedding": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_retrieval_embedding_post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/health": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Anon",
        "operationId": "reverse_proxy_anon_r2r_v3_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/system/settings": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_system_settings_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/system/status": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_system_status_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/users": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/export": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_export_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/verify-email": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_verify_email_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/send-verification-email": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_send_verification_email_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/login": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/logout": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/refresh-token": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_refresh_token_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/change-password": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_change_password_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/request-password-reset": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_request_password_reset_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/reset-password": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_reset_password_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/me": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_users_me_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/users/{id}": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_users__id__get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users__id__delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users__id__post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/{id}/collections": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_users__id__collections_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/users/{id}/collections/{collection_id}": {
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_users__id__collections__collection_id__post",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_users__id__collections__collection_id__delete",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/users/{id}/api-keys": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users__id__api_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users__id__api_keys_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/{id}/api-keys/{key_id}": {
      "delete": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users__id__api_keys__key_id__delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/{id}/limits": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Reverse Proxy Auth",
        "operationId": "reverse_proxy_auth_r2r_v3_users__id__limits_get",
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "JWT token",
              "title": "Token"
            },
            "description": "JWT token"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "io.net provided API Key",
              "title": "Authorization"
            },
            "description": "io.net provided API Key"
          },
          {
            "name": "x-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "API key set by an SDK client",
              "title": "X-Api-Key"
            },
            "description": "API key set by an SDK client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/r2r/v3/users/oauth/google/authorize": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_oauth_google_authorize_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/oauth/google/callback": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_oauth_google_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/oauth/github/authorize": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_oauth_github_authorize_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/r2r/v3/users/oauth/github/callback": {
      "get": {
        "tags": [
          "R2R-compatible API",
          "R2R-compatible API"
        ],
        "summary": "Disabled Endpoint",
        "operationId": "disabled_endpoint_r2r_v3_users_oauth_github_callback_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentMetadata": {
        "properties": {
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "URL to the agent's display image"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "List of tags describing agent features and status",
            "examples": [
              "New",
              "Free",
              "Uncensored"
            ]
          }
        },
        "type": "object",
        "title": "AgentMetadata"
      },
      "AgentSpecificationDescription": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "persona": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonaConfig-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "$ref": "#/components/schemas/AgentMetadata",
            "description": "Agent metadata including some optional fields",
            "examples": [
              {
                "image_url": "https://example.com/gpt4.jpg"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "metadata"
        ],
        "title": "AgentSpecificationDescription",
        "description": "Links to app.agents.available_agents.AgentSpecification"
      },
      "AgentsList": {
        "properties": {
          "agents": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AgentSpecificationDescription"
            },
            "type": "object",
            "title": "Agents"
          }
        },
        "type": "object",
        "required": [
          "agents"
        ],
        "title": "AgentsList"
      },
      "Audio": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "Audio"
      },
      "AudioURL": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "AudioURL"
      },
      "BaseModel": {
        "properties": {},
        "type": "object",
        "title": "BaseModel"
      },
      "Body_run_yaml_v1_workflows_yaml_run_post": {
        "properties": {
          "yaml_file": {
            "type": "string",
            "format": "binary",
            "title": "Yaml File"
          },
          "tool_args": {
            "type": "string",
            "title": "Tool Args",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "yaml_file"
        ],
        "title": "Body_run_yaml_v1_workflows_yaml_run_post"
      },
      "Body_validate_yaml_v1_workflows_yaml_validate_post": {
        "properties": {
          "yaml_file": {
            "type": "string",
            "format": "binary",
            "title": "Yaml File"
          }
        },
        "type": "object",
        "required": [
          "yaml_file"
        ],
        "title": "Body_validate_yaml_v1_workflows_yaml_validate_post"
      },
      "ChatCompletionAssistantMessageParam": {
        "properties": {
          "role": {
            "type": "string",
            "const": "assistant",
            "title": "Role"
          },
          "audio": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Audio"
              },
              {
                "type": "null"
              }
            ]
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartRefusalParam"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "function_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FunctionCall"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "refusal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refusal"
          },
          "tool_calls": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionMessageFunctionToolCallParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionMessageCustomToolCallParam"
                }
              ]
            },
            "type": "array",
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "ChatCompletionAssistantMessageParam"
      },
      "ChatCompletionContentPartAudioParam": {
        "properties": {
          "audio_url": {
            "$ref": "#/components/schemas/AudioURL"
          },
          "type": {
            "type": "string",
            "const": "audio_url",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "audio_url",
          "type"
        ],
        "title": "ChatCompletionContentPartAudioParam"
      },
      "ChatCompletionContentPartImageParam": {
        "properties": {
          "image_url": {
            "$ref": "#/components/schemas/ImageURL"
          },
          "type": {
            "type": "string",
            "const": "image_url",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "image_url",
          "type"
        ],
        "title": "ChatCompletionContentPartImageParam"
      },
      "ChatCompletionContentPartInputAudioParam": {
        "properties": {
          "input_audio": {
            "$ref": "#/components/schemas/InputAudio"
          },
          "type": {
            "type": "string",
            "const": "input_audio",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "input_audio",
          "type"
        ],
        "title": "ChatCompletionContentPartInputAudioParam"
      },
      "ChatCompletionContentPartRefusalParam": {
        "properties": {
          "refusal": {
            "type": "string",
            "title": "Refusal"
          },
          "type": {
            "type": "string",
            "const": "refusal",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "refusal",
          "type"
        ],
        "title": "ChatCompletionContentPartRefusalParam"
      },
      "ChatCompletionContentPartTextParam": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "text",
          "type"
        ],
        "title": "ChatCompletionContentPartTextParam"
      },
      "ChatCompletionContentPartVideoParam": {
        "properties": {
          "video_url": {
            "$ref": "#/components/schemas/VideoURL"
          },
          "type": {
            "type": "string",
            "const": "video_url",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "video_url",
          "type"
        ],
        "title": "ChatCompletionContentPartVideoParam"
      },
      "ChatCompletionDeveloperMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "const": "developer",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionDeveloperMessageParam"
      },
      "ChatCompletionFunctionMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "const": "function",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "content",
          "name",
          "role"
        ],
        "title": "ChatCompletionFunctionMessageParam"
      },
      "ChatCompletionMessageCustomToolCallParam": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "custom": {
            "$ref": "#/components/schemas/Custom"
          },
          "type": {
            "type": "string",
            "const": "custom",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "custom",
          "type"
        ],
        "title": "ChatCompletionMessageCustomToolCallParam"
      },
      "ChatCompletionMessageFunctionToolCallParam": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/Function"
          },
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "function",
          "type"
        ],
        "title": "ChatCompletionMessageFunctionToolCallParam"
      },
      "ChatCompletionNamedFunction": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ChatCompletionNamedFunction"
      },
      "ChatCompletionNamedToolChoiceParam": {
        "properties": {
          "function": {
            "$ref": "#/components/schemas/ChatCompletionNamedFunction"
          },
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type",
            "default": "function"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "function"
        ],
        "title": "ChatCompletionNamedToolChoiceParam"
      },
      "ChatCompletionRequest": {
        "properties": {
          "messages": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionDeveloperMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                },
                {
                  "$ref": "#/components/schemas/CustomChatCompletionMessageParam"
                }
              ]
            },
            "type": "array",
            "minItems": 1,
            "title": "Messages",
            "description": "The conversation history"
          },
          "model": {
            "type": "string",
            "title": "Model"
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty",
            "default": 0.0
          },
          "logit_bias": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logit Bias"
          },
          "logprobs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logprobs",
            "default": false
          },
          "top_logprobs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Logprobs"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "deprecated": true
          },
          "max_completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Completion Tokens"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "N",
            "default": 1
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty",
            "default": 0.0
          },
          "response_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseFormat"
              },
              {
                "type": "null"
              }
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop"
          },
          "stream": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "default": false
          },
          "stream_options": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StreamOptions"
              },
              {
                "type": "null"
              }
            ]
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "default": 0.7
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P",
            "default": 1.0
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionToolsParam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools"
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string",
                "const": "none"
              },
              {
                "type": "string",
                "const": "auto"
              },
              {
                "type": "string",
                "const": "required"
              },
              {
                "$ref": "#/components/schemas/ChatCompletionNamedToolChoiceParam"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Choice",
            "default": "none"
          },
          "parallel_tool_calls": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parallel Tool Calls",
            "default": false
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "best_of": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Best Of"
          },
          "use_beam_search": {
            "type": "boolean",
            "title": "Use Beam Search",
            "default": false
          },
          "top_k": {
            "type": "integer",
            "title": "Top K",
            "default": -1
          },
          "min_p": {
            "type": "number",
            "title": "Min P",
            "default": 0.0
          },
          "repetition_penalty": {
            "type": "number",
            "title": "Repetition Penalty",
            "default": 1.0
          },
          "length_penalty": {
            "type": "number",
            "title": "Length Penalty",
            "default": 1.0
          },
          "stop_token_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop Token Ids"
          },
          "include_stop_str_in_output": {
            "type": "boolean",
            "title": "Include Stop Str In Output",
            "default": false
          },
          "ignore_eos": {
            "type": "boolean",
            "title": "Ignore Eos",
            "default": false
          },
          "min_tokens": {
            "type": "integer",
            "title": "Min Tokens",
            "default": 0
          },
          "skip_special_tokens": {
            "type": "boolean",
            "title": "Skip Special Tokens",
            "default": true
          },
          "spaces_between_special_tokens": {
            "type": "boolean",
            "title": "Spaces Between Special Tokens",
            "default": true
          },
          "truncate_prompt_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Truncate Prompt Tokens"
          },
          "prompt_logprobs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Logprobs"
          },
          "echo": {
            "type": "boolean",
            "title": "Echo",
            "description": "If true, the new message will be prepended with the last message if they belong to the same role.",
            "default": false
          },
          "add_generation_prompt": {
            "type": "boolean",
            "title": "Add Generation Prompt",
            "description": "If true, the generation prompt will be added to the chat template. This is a parameter used by chat template in tokenizer config of the model.",
            "default": true
          },
          "continue_final_message": {
            "type": "boolean",
            "title": "Continue Final Message",
            "description": "If this is set, the chat will be formatted so that the final message in the chat is open-ended, without any EOS tokens. The model will continue this message rather than starting a new one. This allows you to \"prefill\" part of the model's response for it. Cannot be used at the same time as `add_generation_prompt`.",
            "default": false
          },
          "add_special_tokens": {
            "type": "boolean",
            "title": "Add Special Tokens",
            "description": "If true, special tokens (e.g. BOS) will be added to the prompt on top of what is added by the chat template. For most models, the chat template takes care of adding the special tokens so this should be set to false (as is the default).",
            "default": false
          },
          "documents": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Documents",
            "description": "A list of dicts representing documents that will be accessible to the model if it is performing RAG (retrieval-augmented generation). If the template does not support RAG, this argument will have no effect. We recommend that each document should be a dict containing \"title\" and \"text\" keys."
          },
          "chat_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Template",
            "description": "A Jinja template to use for this conversion. As of transformers v4.44, default chat template is no longer allowed, so you must provide a chat template if the tokenizer does not define one."
          },
          "chat_template_kwargs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Template Kwargs",
            "description": "Additional kwargs to pass to the template renderer. Will be accessible by the chat template."
          },
          "guided_json": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "$ref": "#/components/schemas/BaseModel"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guided Json",
            "description": "If specified, the output will follow the JSON schema."
          },
          "guided_regex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guided Regex",
            "description": "If specified, the output will follow the regex pattern."
          },
          "guided_choice": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guided Choice",
            "description": "If specified, the output will be exactly one of the choices."
          },
          "guided_grammar": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guided Grammar",
            "description": "If specified, the output will follow the context free grammar."
          },
          "guided_decoding_backend": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guided Decoding Backend",
            "description": "If specified, will override the default guided decoding backend of the server for this specific request. If set, must be either 'outlines' / 'lm-format-enforcer'"
          },
          "guided_whitespace_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Guided Whitespace Pattern",
            "description": "If specified, will override the default whitespace pattern for guided json decoding."
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "The priority of the request (lower means earlier handling; default: 0). Any priority other than 0 will raise an error if the served model does not use priority scheduling.",
            "default": 0
          },
          "request_id": {
            "type": "string",
            "title": "Request Id",
            "description": "The request_id related to this request. If the caller does not set it, a random_uuid will be generated. This id is used through out the inference process and return in response."
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "messages",
          "model"
        ],
        "title": "ChatCompletionRequest"
      },
      "ChatCompletionSystemMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "const": "system",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionSystemMessageParam"
      },
      "ChatCompletionToolMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "const": "tool",
            "title": "Role"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role",
          "tool_call_id"
        ],
        "title": "ChatCompletionToolMessageParam"
      },
      "ChatCompletionToolsParam": {
        "properties": {
          "type": {
            "type": "string",
            "const": "function",
            "title": "Type",
            "default": "function"
          },
          "function": {
            "$ref": "#/components/schemas/FunctionDefinition"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "function"
        ],
        "title": "ChatCompletionToolsParam"
      },
      "ChatCompletionUserMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartImageParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartInputAudioParam"
                    },
                    {
                      "$ref": "#/components/schemas/File"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "type": "string",
            "const": "user",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionUserMessageParam"
      },
      "ClassificationArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "classify",
            "title": "Type"
          },
          "classify_by": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Classify By"
          }
        },
        "type": "object",
        "required": [
          "type",
          "classify_by"
        ],
        "title": "ClassificationArgs"
      },
      "Custom": {
        "properties": {
          "input": {
            "type": "string",
            "title": "Input"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "input",
          "name"
        ],
        "title": "Custom"
      },
      "CustomArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "custom",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Unique name/ID for the custom workflow step."
          },
          "objective": {
            "type": "string",
            "title": "Objective",
            "description": "Primary objective or text prompt for the workflow."
          },
          "instructions": {
            "type": "string",
            "title": "Instructions",
            "description": "Optional instructions to be passed along."
          },
          "context": {
            "type": "object",
            "title": "Context",
            "description": "Additional context or parameters."
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "objective",
          "instructions"
        ],
        "title": "CustomArgs"
      },
      "CustomChatCompletionContentSimpleAudioParam": {
        "properties": {
          "audio_url": {
            "type": "string",
            "title": "Audio Url"
          }
        },
        "type": "object",
        "required": [
          "audio_url"
        ],
        "title": "CustomChatCompletionContentSimpleAudioParam",
        "description": "A simpler version of the param that only accepts a plain audio_url.\n\nExample:\n{\n    \"audio_url\": \"https://example.com/audio.mp3\"\n}"
      },
      "CustomChatCompletionContentSimpleImageParam": {
        "properties": {
          "image_url": {
            "type": "string",
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "image_url"
        ],
        "title": "CustomChatCompletionContentSimpleImageParam",
        "description": "A simpler version of the param that only accepts a plain image_url.\nThis is supported by OpenAI API, although it is not documented.\n\nExample:\n{\n    \"image_url\": \"https://example.com/image.jpg\"\n}"
      },
      "CustomChatCompletionContentSimpleVideoParam": {
        "properties": {
          "video_url": {
            "type": "string",
            "title": "Video Url"
          }
        },
        "type": "object",
        "required": [
          "video_url"
        ],
        "title": "CustomChatCompletionContentSimpleVideoParam",
        "description": "A simpler version of the param that only accepts a plain audio_url.\n\nExample:\n{\n    \"video_url\": \"https://example.com/video.mp4\"\n}"
      },
      "CustomChatCompletionMessageParam": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartImageParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartInputAudioParam"
                    },
                    {
                      "$ref": "#/components/schemas/File"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartAudioParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartVideoParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartRefusalParam"
                    },
                    {
                      "$ref": "#/components/schemas/CustomChatCompletionContentSimpleImageParam"
                    },
                    {
                      "$ref": "#/components/schemas/CustomChatCompletionContentSimpleAudioParam"
                    },
                    {
                      "$ref": "#/components/schemas/CustomChatCompletionContentSimpleVideoParam"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tool_call_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Call Id"
          },
          "tool_calls": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionMessageFunctionToolCallParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionMessageCustomToolCallParam"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "CustomChatCompletionMessageParam",
        "description": "Enables custom roles in the Chat Completion API."
      },
      "EmbeddingChatRequest": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "messages": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionDeveloperMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "encoding_format": {
            "type": "string",
            "enum": [
              "float",
              "base64"
            ],
            "title": "Encoding Format",
            "default": "float"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimensions"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "truncate_prompt_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Truncate Prompt Tokens"
          },
          "additional_data": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Additional Data"
          },
          "add_special_tokens": {
            "type": "boolean",
            "title": "Add Special Tokens",
            "description": "If true, special tokens (e.g. BOS) will be added to the prompt on top of what is added by the chat template. For most models, the chat template takes care of adding the special tokens so this should be set to false (as is the default).",
            "default": false
          },
          "chat_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Template",
            "description": "A Jinja template to use for this conversion. As of transformers v4.44, default chat template is no longer allowed, so you must provide a chat template if the tokenizer does not define one."
          },
          "chat_template_kwargs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chat Template Kwargs",
            "description": "Additional kwargs to pass to the template renderer. Will be accessible by the chat template."
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "The priority of the request (lower means earlier handling; default: 0). Any priority other than 0 will raise an error if the served model does not use priority scheduling.",
            "default": 0
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "model",
          "messages"
        ],
        "title": "EmbeddingChatRequest"
      },
      "EmbeddingCompletionRequest": {
        "properties": {
          "model": {
            "type": "string",
            "title": "Model"
          },
          "input": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "items": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            ],
            "title": "Input"
          },
          "encoding_format": {
            "type": "string",
            "enum": [
              "float",
              "base64"
            ],
            "title": "Encoding Format",
            "default": "float"
          },
          "dimensions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dimensions"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "truncate_prompt_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Truncate Prompt Tokens"
          },
          "additional_data": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Additional Data"
          },
          "add_special_tokens": {
            "type": "boolean",
            "title": "Add Special Tokens",
            "description": "If true (the default), special tokens (e.g. BOS) will be added to the prompt.",
            "default": true
          },
          "priority": {
            "type": "integer",
            "title": "Priority",
            "description": "The priority of the request (lower means earlier handling; default: 0). Any priority other than 0 will raise an error if the served model does not use priority scheduling.",
            "default": 0
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "model",
          "input"
        ],
        "title": "EmbeddingCompletionRequest"
      },
      "ExtractEntitiesArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "extract_categorized_entities",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ExtractEntitiesArgs"
      },
      "File": {
        "properties": {
          "file": {
            "$ref": "#/components/schemas/FileFile"
          },
          "type": {
            "type": "string",
            "const": "file",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "file",
          "type"
        ],
        "title": "File"
      },
      "FileFile": {
        "properties": {
          "file_data": {
            "type": "string",
            "title": "File Data"
          },
          "file_id": {
            "type": "string",
            "title": "File Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          }
        },
        "type": "object",
        "title": "FileFile"
      },
      "Function": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "Function"
      },
      "FunctionCall": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "FunctionCall"
      },
      "FunctionDefinition": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parameters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parameters"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "FunctionDefinition"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageURL": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "detail": {
            "type": "string",
            "enum": [
              "auto",
              "low",
              "high"
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "ImageURL"
      },
      "InputAudio": {
        "properties": {
          "data": {
            "type": "string",
            "title": "Data"
          },
          "format": {
            "type": "string",
            "enum": [
              "wav",
              "mp3"
            ],
            "title": "Format"
          }
        },
        "type": "object",
        "required": [
          "data",
          "format"
        ],
        "title": "InputAudio"
      },
      "JsonSchemaResponseFormat": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema"
          },
          "strict": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Strict"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "JsonSchemaResponseFormat"
      },
      "ModelCard": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "object": {
            "type": "string",
            "title": "Object",
            "default": "model"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "owned_by": {
            "type": "string",
            "title": "Owned By",
            "default": "io-intelligence"
          },
          "root": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Root"
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "max_model_len": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Model Len"
          },
          "permission": {
            "items": {
              "$ref": "#/components/schemas/ModelPermission"
            },
            "type": "array",
            "title": "Permission"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ModelCard"
      },
      "ModelList": {
        "properties": {
          "object": {
            "type": "string",
            "title": "Object",
            "default": "list"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ModelCard"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "ModelList"
      },
      "ModelPermission": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "object": {
            "type": "string",
            "title": "Object",
            "default": "model_permission"
          },
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "allow_create_engine": {
            "type": "boolean",
            "title": "Allow Create Engine",
            "default": false
          },
          "allow_sampling": {
            "type": "boolean",
            "title": "Allow Sampling",
            "default": true
          },
          "allow_logprobs": {
            "type": "boolean",
            "title": "Allow Logprobs",
            "default": true
          },
          "allow_search_indices": {
            "type": "boolean",
            "title": "Allow Search Indices",
            "default": false
          },
          "allow_view": {
            "type": "boolean",
            "title": "Allow View",
            "default": true
          },
          "allow_fine_tuning": {
            "type": "boolean",
            "title": "Allow Fine Tuning",
            "default": false
          },
          "organization": {
            "type": "string",
            "title": "Organization",
            "default": "*"
          },
          "group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group"
          },
          "is_blocking": {
            "type": "boolean",
            "title": "Is Blocking",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "ModelPermission"
      },
      "ModerationArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "moderation",
            "title": "Type"
          },
          "threshold": {
            "type": "number",
            "title": "Threshold"
          }
        },
        "type": "object",
        "required": [
          "type",
          "threshold"
        ],
        "title": "ModerationArgs"
      },
      "PersonaConfig-Input": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "If the persona has a specific name or nickname."
          },
          "age": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Age",
            "description": "Approximate age of the persona (if relevant)."
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "General role or type, e.g. 'a brave knight', 'a friendly teacher', etc."
          },
          "style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style",
            "description": "A short description of the agent's style or demeanor (e.g., 'formal and polite')."
          },
          "domain_knowledge": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Domain Knowledge",
            "description": "List of domains or special areas of expertise the agent has."
          },
          "quirks": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quirks",
            "description": "Any unique quirks or mannerisms, e.g. 'likes using puns' or 'always references coffee.'"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "A short biography or personal background for the persona."
          },
          "lore": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lore",
            "description": "In-universe lore or backstory, e.g. 'grew up in a small village with magical powers.'"
          },
          "personality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality",
            "description": "A more direct statement of the persona's emotional or psychological traits."
          },
          "conversation_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Style",
            "description": "How the character speaks in conversation, e.g., 'often uses slang' or 'very verbose and flowery.'"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A general descriptive text, e.g., 'A tall, lean figure wearing a cloak, with a stern demeanor.'"
          },
          "friendliness": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "ge": 0,
                "le": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Friendliness",
            "description": "How friendly the agent is, from 0 (hostile) to 1 (friendly)."
          },
          "creativity": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "ge": 0,
                "le": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Creativity",
            "description": "How creative the agent is, from 0 (very logical) to 1 (very creative)."
          },
          "curiosity": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "ge": 0,
                "le": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Curiosity",
            "description": "How curious the agent is, from 0 (disinterested) to 1 (very curious)."
          },
          "empathy": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "ge": 0,
                "le": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Empathy",
            "description": "How empathetic the agent is, from 0 (cold) to 1 (very empathetic)."
          },
          "humor": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "ge": 0,
                "le": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Humor",
            "description": "How humorous the agent is, from 0 (serious) to 1 (very humorous)."
          },
          "formality": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "ge": 0,
                "le": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Formality",
            "description": "How formal the agent is, from 0 (very casual) to 1 (very formal)."
          },
          "emotional_stability": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "ge": 0,
                "le": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Emotional Stability",
            "description": "How emotionally stable the agent is, from 0 (very emotional) to 1 (very stable)."
          }
        },
        "type": "object",
        "title": "PersonaConfig",
        "description": "A configuration object that describes an agent's persona or character."
      },
      "PersonaConfig-Output": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "If the persona has a specific name or nickname."
          },
          "age": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Age",
            "description": "Approximate age of the persona (if relevant)."
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "General role or type, e.g. 'a brave knight', 'a friendly teacher', etc."
          },
          "style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style",
            "description": "A short description of the agent's style or demeanor (e.g., 'formal and polite')."
          },
          "domain_knowledge": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Domain Knowledge",
            "description": "List of domains or special areas of expertise the agent has."
          },
          "quirks": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quirks",
            "description": "Any unique quirks or mannerisms, e.g. 'likes using puns' or 'always references coffee.'"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "A short biography or personal background for the persona."
          },
          "lore": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lore",
            "description": "In-universe lore or backstory, e.g. 'grew up in a small village with magical powers.'"
          },
          "personality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personality",
            "description": "A more direct statement of the persona's emotional or psychological traits."
          },
          "conversation_style": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Style",
            "description": "How the character speaks in conversation, e.g., 'often uses slang' or 'very verbose and flowery.'"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A general descriptive text, e.g., 'A tall, lean figure wearing a cloak, with a stern demeanor.'"
          },
          "friendliness": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Friendliness",
            "description": "How friendly the agent is, from 0 (hostile) to 1 (friendly)."
          },
          "creativity": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Creativity",
            "description": "How creative the agent is, from 0 (very logical) to 1 (very creative)."
          },
          "curiosity": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Curiosity",
            "description": "How curious the agent is, from 0 (disinterested) to 1 (very curious)."
          },
          "empathy": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Empathy",
            "description": "How empathetic the agent is, from 0 (cold) to 1 (very empathetic)."
          },
          "humor": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Humor",
            "description": "How humorous the agent is, from 0 (serious) to 1 (very humorous)."
          },
          "formality": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Formality",
            "description": "How formal the agent is, from 0 (very casual) to 1 (very formal)."
          },
          "emotional_stability": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Emotional Stability",
            "description": "How emotionally stable the agent is, from 0 (very emotional) to 1 (very stable)."
          }
        },
        "type": "object",
        "title": "PersonaConfig",
        "description": "A configuration object that describes an agent's persona or character."
      },
      "ReasoningArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "solve_with_reasoning",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ReasoningArgs"
      },
      "ResponseFormat": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text",
              "json_object",
              "json_schema"
            ],
            "title": "Type"
          },
          "json_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/JsonSchemaResponseFormat"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ResponseFormat"
      },
      "SentimentArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "sentiment",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "SentimentArgs"
      },
      "StreamOptions": {
        "properties": {
          "include_usage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Usage",
            "default": true
          },
          "continuous_usage_stats": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Continuous Usage Stats",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "StreamOptions"
      },
      "SummarizeArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "summarize_text",
            "title": "Type"
          },
          "max_words": {
            "type": "integer",
            "title": "Max Words",
            "default": 100
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "SummarizeArgs"
      },
      "TextRequest": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "deprecated": true
          },
          "objective": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Objective"
          },
          "persona": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonaConfig-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "args": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ReasoningArgs"
                  },
                  {
                    "$ref": "#/components/schemas/SummarizeArgs"
                  },
                  {
                    "$ref": "#/components/schemas/SentimentArgs"
                  },
                  {
                    "$ref": "#/components/schemas/ExtractEntitiesArgs"
                  },
                  {
                    "$ref": "#/components/schemas/TranslateArgs"
                  },
                  {
                    "$ref": "#/components/schemas/ClassificationArgs"
                  },
                  {
                    "$ref": "#/components/schemas/ModerationArgs"
                  },
                  {
                    "$ref": "#/components/schemas/CustomArgs"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "classify": "#/components/schemas/ClassificationArgs",
                    "custom": "#/components/schemas/CustomArgs",
                    "extract_categorized_entities": "#/components/schemas/ExtractEntitiesArgs",
                    "moderation": "#/components/schemas/ModerationArgs",
                    "sentiment": "#/components/schemas/SentimentArgs",
                    "solve_with_reasoning": "#/components/schemas/ReasoningArgs",
                    "summarize_text": "#/components/schemas/SummarizeArgs",
                    "translate_text": "#/components/schemas/TranslateArgs"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "agent_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Agent Names"
          }
        },
        "type": "object",
        "required": [
          "agent_names"
        ],
        "title": "TextRequest"
      },
      "ToolInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Tool name, use it to reference the tool in workflows"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Tool description"
          },
          "brief": {
            "type": "string",
            "title": "Brief",
            "description": "Brief tool description",
            "default": ""
          },
          "signature": {
            "type": "object",
            "title": "Signature",
            "description": "Tool signature schema"
          },
          "state_signature": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "State Signature",
            "description": "Tool state signature if tool is stateful"
          },
          "zeroconf": {
            "type": "boolean",
            "title": "Zeroconf",
            "description": "If tool is stateless or is auto-configured, i.e. ready to use by only specifying its name",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "signature"
        ],
        "title": "ToolInfo"
      },
      "ToolInfoList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ToolInfo"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ToolInfoList"
      },
      "TranslateArgs": {
        "properties": {
          "type": {
            "type": "string",
            "const": "translate_text",
            "title": "Type"
          },
          "target_language": {
            "type": "string",
            "title": "Target Language"
          }
        },
        "type": "object",
        "required": [
          "type",
          "target_language"
        ],
        "title": "TranslateArgs"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VideoURL": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "VideoURL"
      }
    }
  }
}